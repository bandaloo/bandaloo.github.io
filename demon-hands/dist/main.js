/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={228:t=>{t.exports=function(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,s=new Array(e);n<e;n++)s[n]=t[n];return s},t.exports.default=t.exports,t.exports.__esModule=!0},858:t=>{t.exports=function(t){if(Array.isArray(t))return t},t.exports.default=t.exports,t.exports.__esModule=!0},575:t=>{t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},t.exports.default=t.exports,t.exports.__esModule=!0},913:t=>{function e(t,e){for(var n=0;n<e.length;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}t.exports=function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t},t.exports.default=t.exports,t.exports.__esModule=!0},884:t=>{t.exports=function(t,e){var n=t&&("undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"]);if(null!=n){var s,r,a=[],i=!0,o=!1;try{for(n=n.call(t);!(i=(s=n.next()).done)&&(a.push(s.value),!e||a.length!==e);i=!0);}catch(t){o=!0,r=t}finally{try{i||null==n.return||n.return()}finally{if(o)throw r}}return a}},t.exports.default=t.exports,t.exports.__esModule=!0},521:t=>{t.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},t.exports.default=t.exports,t.exports.__esModule=!0},38:(t,e,n)=>{var s=n(858),r=n(884),a=n(379),i=n(521);t.exports=function(t,e){return s(t)||r(t,e)||a(t,e)||i()},t.exports.default=t.exports,t.exports.__esModule=!0},379:(t,e,n)=>{var s=n(228);t.exports=function(t,e){if(t){if("string"==typeof t)return s(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(t,e):void 0}},t.exports.default=t.exports,t.exports.__esModule=!0},948:(t,e,n)=>{var s=n(140),r=n(980),a=n(730),i=n(405),o=n(26),l=n(865),u=n(721);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,t.exports=u},140:function(t,e,n){var s;!function(t,r,a){function i(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new i(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},865:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},980:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},26:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,a=e.i;return e.w=s=s+1640531527|0,n=r[a+34&127],t=r[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[a]=n^t,e.i=a,n+(s^s>>>16)|0},function(t,e){var n,s,r,a,i,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,a=-32;a<l;++a)e&&(s^=e.charCodeAt((a+32)%e.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=i,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},405:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},730:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},721:(t,e,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(t,e,n){var s=[],p=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,b(r)]}}():t,3),s),d=new f(s),x=function(){for(var t=d.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=d.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&m(s,d),t.state=function(){return m(d,{})}),n?(a.random=t,e):t})(x,p,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(t=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+t[r%n]+(e=i[r])],i[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,i=s.S;t--;)e=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+e])+(i[a]=e)];return s.i=r,s.j=a,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(g(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function y(t,e){for(var n,s=t+"",r=0;r<s.length;)e[p&r]=p&(n^=19*e[p&r])+s.charCodeAt(r++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(a.seedrandom=d,y(a.random(),r),t.exports){t.exports=d;try{i=n(914)}catch(t){}}else void 0===(s=function(){return d}.call(e,n,e,t))||(t.exports=s)}([],Math)},129:(t,e,n)=>{var s=n(626),r=n(477),a=n(868),i=n(197),o=n(954),l=n(408),u=n(662);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,t.exports=u},626:function(t,e,n){var s;!function(t,r,a){function i(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new i(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},408:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},477:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},954:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,a=e.i;return e.w=s=s+1640531527|0,n=r[a+34&127],t=r[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[a]=n^t,e.i=a,n+(s^s>>>16)|0},function(t,e){var n,s,r,a,i,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,a=-32;a<l;++a)e&&(s^=e.charCodeAt((a+32)%e.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=i,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},197:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},868:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},662:(t,e,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(t,e,n){var s=[],p=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,b(r)]}}():t,3),s),d=new f(s),x=function(){for(var t=d.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=d.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&m(s,d),t.state=function(){return m(d,{})}),n?(a.random=t,e):t})(x,p,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(t=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+t[r%n]+(e=i[r])],i[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,i=s.S;t--;)e=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+e])+(i[a]=e)];return s.i=r,s.j=a,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(g(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function y(t,e){for(var n,s=t+"",r=0;r<s.length;)e[p&r]=p&(n^=19*e[p&r])+s.charCodeAt(r++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(a.seedrandom=d,y(a.random(),r),t.exports){t.exports=d;try{i=n(778)}catch(t){}}else void 0===(s=function(){return d}.call(e,n,e,t))||(t.exports=s)}([],Math)},382:function(t,e,n){!function(t,e,n,s){"use strict";function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var a=r(e),i=r(n),o=r(s),l=function(t,e,n){return{endTime:e,insertTime:n,type:"exponentialRampToValue",value:t}},u=function(t,e,n){return{endTime:e,insertTime:n,type:"linearRampToValue",value:t}},c=function(t,e){return{startTime:e,type:"setValue",value:t}},h=function(t,e,n){return{duration:n,startTime:e,type:"setValueCurve",values:t}},p=function(t,e,n){var s=n.startTime,r=n.target,a=n.timeConstant;return r+(e-r)*Math.exp((s-t)/a)},d=function(t){return"exponentialRampToValue"===t.type},f=function(t){return"linearRampToValue"===t.type},m=function(t){return d(t)||f(t)},g=function(t){return"setValue"===t.type},y=function(t){return"setValueCurve"===t.type},b=function t(e,n,s,r){var a=e[n];return void 0===a?r:m(a)||g(a)?a.value:y(a)?a.values[a.values.length-1]:p(s,t(e,n-1,a.startTime,r),a)},x=function(t,e,n,s,r){return void 0===n?[s.insertTime,r]:m(n)?[n.endTime,n.value]:g(n)?[n.startTime,n.value]:y(n)?[n.startTime+n.duration,n.values[n.values.length-1]]:[n.startTime,b(t,e-1,n.startTime,r)]},v=function(t){return"cancelAndHold"===t.type},w=function(t){return"cancelScheduledValues"===t.type},k=function(t){return v(t)||w(t)?t.cancelTime:d(t)||f(t)?t.endTime:t.startTime},_=function(t,e,n,s){var r=s.endTime,a=s.value;return n===a?a:0<n&&0<a||n<0&&a<0?n*Math.pow(a/n,(t-e)/(r-e)):0},I=function(t,e,n,s){return n+(t-e)/(s.endTime-e)*(s.value-n)},N=function(t,e){var n=e.duration,s=e.startTime,r=e.values;return function(t,e){var n=Math.floor(e),s=Math.ceil(e);return n===s?t[n]:(1-(e-n))*t[n]+(1-(s-e))*t[s]}(r,(t-s)/n*(r.length-1))},T=function(t){return"setTarget"===t.type},C=function(){function t(e){i.default(this,t),this._automationEvents=[],this._currenTime=0,this._defaultValue=e}return o.default(t,[{key:Symbol.iterator,value:function(){return this._automationEvents[Symbol.iterator]()}},{key:"add",value:function(t){var e=k(t);if(v(t)||w(t)){var n=this._automationEvents.findIndex((function(n){return w(t)&&y(n)?n.startTime+n.duration>=e:k(n)>=e})),s=this._automationEvents[n];if(-1!==n&&(this._automationEvents=this._automationEvents.slice(0,n)),v(t)){var r=this._automationEvents[this._automationEvents.length-1];if(void 0!==s&&m(s)){if(T(r))throw new Error("The internal list is malformed.");var a=y(r)?r.startTime+r.duration:k(r),i=y(r)?r.values[r.values.length-1]:r.value,o=d(s)?_(e,a,i,s):I(e,a,i,s),p=d(s)?l(o,e,this._currenTime):u(o,e,this._currenTime);this._automationEvents.push(p)}void 0!==r&&T(r)&&this._automationEvents.push(c(this.getValue(e),e)),void 0!==r&&y(r)&&r.startTime+r.duration>e&&(this._automationEvents[this._automationEvents.length-1]=h(new Float32Array([6,7]),r.startTime,e-r.startTime))}}else{var g=this._automationEvents.findIndex((function(t){return k(t)>e})),b=-1===g?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[g-1];if(void 0!==b&&y(b)&&k(b)+b.duration>e)return!1;var x=d(t)?l(t.value,t.endTime,this._currenTime):f(t)?u(t.value,e,this._currenTime):t;if(-1===g)this._automationEvents.push(x);else{if(y(t)&&e+t.duration>k(this._automationEvents[g]))return!1;this._automationEvents.splice(g,0,x)}}return!0}},{key:"flush",value:function(t){var e=this._automationEvents.findIndex((function(e){return k(e)>t}));if(e>1){var n=this._automationEvents.slice(e-1),s=n[0];T(s)&&n.unshift(c(b(this._automationEvents,e-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}},{key:"getValue",value:function(t){if(0===this._automationEvents.length)return this._defaultValue;var e=this._automationEvents.findIndex((function(e){return k(e)>t})),n=this._automationEvents[e],s=(-1===e?this._automationEvents.length:e)-1,r=this._automationEvents[s];if(void 0!==r&&T(r)&&(void 0===n||!m(n)||n.insertTime>t))return p(t,b(this._automationEvents,s-1,r.startTime,this._defaultValue),r);if(void 0!==r&&g(r)&&(void 0===n||!m(n)))return r.value;if(void 0!==r&&y(r)&&(void 0===n||!m(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?N(t,r):r.values[r.values.length-1];if(void 0!==r&&m(r)&&(void 0===n||!m(n)))return r.value;if(void 0!==n&&d(n)){var i=x(this._automationEvents,s,r,n,this._defaultValue),o=a.default(i,2),l=o[0],u=o[1];return _(t,l,u,n)}if(void 0!==n&&f(n)){var c=x(this._automationEvents,s,r,n,this._defaultValue),h=a.default(c,2),v=h[0],w=h[1];return I(t,v,w,n)}return this._defaultValue}}]),t}();t.AutomationEventList=C,t.createCancelAndHoldAutomationEvent=function(t){return{cancelTime:t,type:"cancelAndHold"}},t.createCancelScheduledValuesAutomationEvent=function(t){return{cancelTime:t,type:"cancelScheduledValues"}},t.createExponentialRampToValueAutomationEvent=function(t,e){return{endTime:e,type:"exponentialRampToValue",value:t}},t.createLinearRampToValueAutomationEvent=function(t,e){return{endTime:e,type:"linearRampToValue",value:t}},t.createSetTargetAutomationEvent=function(t,e,n){return{startTime:e,target:t,timeConstant:n,type:"setTarget"}},t.createSetValueAutomationEvent=c,t.createSetValueCurveAutomationEvent=h,Object.defineProperty(t,"__esModule",{value:!0})}(e,n(38),n(575),n(913))},377:(t,e,n)=>{var s=n(832),r=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var s;!function(t,r,a){function i(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new i(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,a=e.i;return e.w=s=s+1640531527|0,n=r[a+34&127],t=r[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[a]=n^t,e.i=a,n+(s^s>>>16)|0},function(t,e){var n,s,r,a,i,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,a=-32;a<l;++a)e&&(s^=e.charCodeAt((a+32)%e.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=i,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:(t,e,n)=>{var s;!function(r,a){var i,o=(0,eval)("this"),l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(t,e,n){var s=[],p=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,b(r)]}}():t,3),s),d=new f(s),x=function(){for(var t=d.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=d.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&m(s,d),t.state=function(){return m(d,{})}),n?(a.random=t,e):t})(x,p,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(t=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+t[r%n]+(e=i[r])],i[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,i=s.S;t--;)e=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+e])+(i[a]=e)];return s.i=r,s.j=a,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(g(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function y(t,e){for(var n,s=t+"",r=0;r<s.length;)e[p&r]=p&(n^=19*e[p&r])+s.charCodeAt(r++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(a.seedrandom=d,y(a.random(),r),t.exports){t.exports=d;try{i=n(42)}catch(t){}}else void 0===(s=function(){return d}.call(e,n,e,t))||(t.exports=s)}([],Math)},914:()=>{},410:()=>{},628:()=>{},778:()=>{},601:()=>{},792:()=>{},42:()=>{}},e={};function n(s){var r=e[s];if(void 0!==r)return r.exports;var a=e[s]={id:s,loaded:!1,exports:{}};return t[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>ra,computeFlatOffset:()=>ya,computeOutShape:()=>ia,getNormalizedAxes:()=>ca,isSliceContinous:()=>ga,maskToAxes:()=>aa,parseSliceParams:()=>ba,sliceInfo:()=>xa,startForAxis:()=>fa,startIndicesWithElidedDims:()=>ha,stopForAxis:()=>ma,stopIndicesWithElidedDims:()=>pa,stridesForAxis:()=>da,stridesWithElidedDims:()=>oa});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>Lu,computeOutShape:()=>Mu,segOpComputeOptimalWindowSize:()=>Fu});var s={};n.r(s),n.d(s,{ERF_A1:()=>xu,ERF_A2:()=>vu,ERF_A3:()=>wu,ERF_A4:()=>ku,ERF_A5:()=>_u,ERF_P:()=>bu,PARALLELIZE_THRESHOLD:()=>ru,SELU_SCALE:()=>yu,SELU_SCALEALPHA:()=>gu,applyActivation:()=>Qo,assertAndGetBroadcastShape:()=>wi,assertAxesAreInnerMostDims:()=>Yi,assertParamsConsistent:()=>nu,assignToTypedArray:()=>Eu,axesAreInnerMostDims:()=>Hi,calculateShapes:()=>mu,combineLocations:()=>qi,complexWithEvenIndex:()=>Su,complexWithOddIndex:()=>$u,computeConv2DInfo:()=>Ba,computeConv3DInfo:()=>Wa,computeDefaultPad:()=>Ua,computeDilation2DInfo:()=>za,computeOptimalWindowSize:()=>au,computeOutAndReduceShapes:()=>Xi,computeOutShape:()=>su,computePool2DInfo:()=>Pa,computePool3DInfo:()=>Va,convertConv2DDataFormat:()=>Ya,eitherStridesOrDilationsAreOne:()=>Ka,expandShapeToKeepDim:()=>Ki,exponent:()=>Du,exponents:()=>Ru,fromStringArrayToUint8:()=>Pu,fromUint8ToStringArray:()=>zu,getAxesPermutation:()=>Zi,getBroadcastDims:()=>xi,getComplexWithIndex:()=>Au,getFusedBiasGradient:()=>Jo,getFusedDyActivation:()=>Zo,getImageCenter:()=>iu,getInnerMostAxes:()=>Qi,getPermuted:()=>lu,getReductionAxes:()=>vi,getReshaped:()=>ou,getReshapedPermuted:()=>uu,getSliceBeginCoords:()=>cu,getSliceSize:()=>hu,getUndoAxesPermutation:()=>Ji,log:()=>Nu,mergeRealAndImagArrays:()=>Tu,prepareAndValidate:()=>pu,prepareSplitSize:()=>Ou,segment_util:()=>e,shouldFuse:()=>tl,slice_util:()=>t,splitRealAndImagArrays:()=>Cu,tupleValuesAreOne:()=>Xa,upcastType:()=>Bs,validateInput:()=>fu,validateUpdateShape:()=>du,warn:()=>Iu});var r={};n.r(r),n.d(r,{json:()=>Yy});var a={};n.r(a),n.d(a,{json:()=>Zy});var i={};n.r(i),n.d(i,{json:()=>Jy});var o={};n.r(o),n.d(o,{json:()=>Qy});var l={};n.r(l),n.d(l,{json:()=>tb});var u={};n.r(u),n.d(u,{json:()=>eb});var c={};n.r(c),n.d(c,{json:()=>nb});var h={};n.r(h),n.d(h,{json:()=>sb});var p={};n.r(p),n.d(p,{json:()=>rb});var d={};n.r(d),n.d(d,{json:()=>ab});var f={};n.r(f),n.d(f,{json:()=>ib});var m={};n.r(m),n.d(m,{json:()=>ob});var g={};n.r(g),n.d(g,{json:()=>lb});var y={};n.r(y),n.d(y,{json:()=>ub});var b={};n.r(b),n.d(b,{json:()=>cb});var x={};n.r(x),n.d(x,{json:()=>hb});var v={};n.r(v),n.d(v,{json:()=>pb});var w={};n.r(w),n.d(w,{addImpl:()=>pv,bincountImpl:()=>rw,bincountReduceImpl:()=>aw,ceilImpl:()=>lw,concatImpl:()=>fw,expImpl:()=>tk,expm1Impl:()=>ak,floorImpl:()=>Tk,gatherV2Impl:()=>Fk,greaterImpl:()=>Lk,lessImpl:()=>Yk,linSpaceImpl:()=>n_,logImpl:()=>r_,maxImpl:()=>x_,maximumImpl:()=>k_,minimumImpl:()=>O_,multiplyImpl:()=>lk,negImpl:()=>j_,notEqualImpl:()=>Q_,prodImpl:()=>pI,rangeImpl:()=>fI,rsqrtImpl:()=>TI,simpleAbsImpl:()=>wv,sliceImpl:()=>tw,squaredDifferenceImpl:()=>QI,stridedSliceImpl:()=>rN,subImpl:()=>mk,tileImpl:()=>uN,topKImpl:()=>cN,transposeImpl:()=>Sv,uniqueImpl:()=>mN});class k{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class _{refCount(t){return I("refCount")}incRef(t){return I("incRef")}timerAvailable(){return!0}time(t){return I("time")}read(t){return I("read")}readSync(t){return I("readSync")}numDataIds(){return I("numDataIds")}disposeData(t,e){return I("disposeData")}write(t,e,n){return I("write")}move(t,e,n,s,r){return I("move")}memory(){return I("memory")}floatPrecision(){return I("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return I("dispose")}}function I(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function N(t){let e=t.length,n=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,n=t[e],t[e]=t[s],t[s]=n}function T(t,e,n){return Math.max(t,Math.min(e,n))}function C(t){return t%2==0?t:t+1}function S(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function $(t,e,n=""){S(D(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function A(t){S(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function E(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||G(t)&&!n)for(let s=0;s<t.length;++s)E(t[s],e,n);else e.push(t);return e}function R(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function D(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function O(t){return t%1==0}function F(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function M(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function L(t,e=(t=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(t())return void s();a++;const o=e(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function z(t,e){let n=1,s=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${e}`);s=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===s){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function P(t,e){const n=e.length;return S((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),S(t.every((t=>O(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function V(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||r?null:P(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}function B(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function W(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function U(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function G(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function j(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function H(t){return"string"==typeof t||t instanceof String}function q(t){return"number"==typeof t}function X(t){return Array.isArray(t)?X(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":q(t)?"float32":H(t)?"string":"boolean"==typeof t?"bool":"float32"}function K(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Y(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Z(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function J(t,e,n){const s=new Array;if(1===e.length){const r=e[0];for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e));for(let e=0;e<r;e++)s[e]=J(t+e*i,a,n)}return s}function Q(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return J(0,t,e)}function tt(t,e){const n=et(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function et(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function nt(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Q(t,new Float32Array(n));if("int32"===e)return Q(t,new Int32Array(n));if("bool"===e)return Q(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function st(t){t.forEach((e=>{S(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function rt(t,e,n){if(0===e)return 0;if(1===e)return t[0];let s=t[t.length-1];for(let e=0;e<t.length-1;++e)s+=n[e]*t[e];return s}function at(t,e,n){if(0===e)return[];if(1===e)return[t];const s=new Array(e);for(let e=0;e<s.length-1;++e)s[e]=Math.floor(t/n[e]),t-=s[e]*n[e];return s[s.length-1]=t,s}function it(t){return t&&t.then&&"function"==typeof t.then}class ot{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(it(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function lt(){return ct}let ut,ct=null;function ht(){if(null==ut){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}ut=t}return ut}function pt(t,e){const n=function(){const t=ht();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const dt="Abs",ft="Acos",mt="Acosh",gt="Add",yt="AddN",bt="All",xt="Any",vt="ArgMax",wt="ArgMin",kt="Asin",_t="Asinh",It="Atan",Nt="Atanh",Tt="Atan2",Ct="AvgPool",St="AvgPoolGrad",$t="AvgPool3D",At="AvgPool3DGrad",Et="BatchMatMul",Rt="BatchToSpaceND",Dt="Bincount",Ot="Cast",Ft="Ceil",Mt="ClipByValue",Lt="Complex",zt="ComplexAbs",Pt="Concat",Vt="Conv2D",Bt="Conv2DBackpropFilter",Wt="Conv2DBackpropInput",Ut="Conv3D",Gt="Conv3DBackpropFilterV2",jt="Conv3DBackpropInputV2",Ht="Cos",qt="Cosh",Xt="Cumsum",Kt="CropAndResize",Yt="DenseBincount",Zt="DepthToSpace",Jt="DepthwiseConv2dNative",Qt="DepthwiseConv2dNativeBackpropFilter",te="DepthwiseConv2dNativeBackpropInput",ee="Diag",ne="Dilation2D",se="Dilation2DBackpropInput",re="Dilation2DBackpropFilter",ae="RealDiv",ie="Elu",oe="EluGrad",le="Erf",ue="Equal",ce="Exp",he="ExpandDims",pe="Expm1",de="FFT",fe="Fill",me="FlipLeftRight",ge="Floor",ye="FloorDiv",be="FusedBatchNorm",xe="GatherV2",ve="GatherNd",we="Greater",ke="GreaterEqual",_e="Identity",Ie="IFFT",Ne="Imag",Te="IsFinite",Ce="IsInf",Se="IsNan",$e="LeakyRelu",Ae="Less",Ee="LessEqual",Re="LinSpace",De="Log",Oe="Log1p",Fe="LogicalAnd",Me="LogicalNot",Le="LogicalOr",ze="LRN",Pe="LRNGrad",Ve="Max",Be="Maximum",We="MaxPool",Ue="MaxPoolGrad",Ge="MaxPool3D",je="MaxPool3DGrad",He="MaxPoolWithArgmax",qe="Mean",Xe="Min",Ke="Minimum",Ye="MirrorPad",Ze="Mod",Je="Multinomial",Qe="Multiply",tn="Neg",en="NotEqual",nn="NonMaxSuppressionV3",sn="NonMaxSuppressionV4",rn="NonMaxSuppressionV5",an="OnesLike",on="OneHot",ln="Pack",un="PadV2",cn="Pow",hn="Prelu",pn="Prod",dn="Range",fn="Real",mn="Reciprocal",gn="Relu",yn="Reshape",bn="ResizeNearestNeighbor",xn="ResizeNearestNeighborGrad",vn="ResizeBilinear",wn="ResizeBilinearGrad",kn="Relu6",_n="Reverse",In="Round",Nn="Rsqrt",Tn="ScatterNd",Cn="Select",Sn="Selu",$n="Slice",An="Sin",En="Sinh",Rn="Sign",Dn="Sigmoid",On="Softplus",Fn="Sqrt",Mn="Sum",Ln="SpaceToBatchND",zn="SplitV",Pn="Softmax",Vn="SquaredDifference",Bn="Square",Wn="Sub",Un="SparseToDense",Gn="StridedSlice",jn="Tan",Hn="Tanh",qn="Tile",Xn="TopK",Kn="Transform",Yn="Transpose",Zn="Unique",Jn="Unpack",Qn="UnsortedSegmentSum",ts="ZerosLike",es="Step",ns="FromPixels",ss="RotateWithOffset",rs="_FusedMatMul",as="FusedConv2D",is="FusedDepthwiseConv2D",os=pt("kernelRegistry",(()=>new Map)),ls=pt("gradRegistry",(()=>new Map));function us(t,e){const n=fs(t,e);return os.get(n)}function cs(t){return ls.get(t)}function hs(t){const e=os.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===t&&n.push(i)}return n}function ps(t){const{kernelName:e,backendName:n}=t,s=fs(e,n);os.has(s)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),os.set(s,t)}function ds(t){const{kernelName:e}=t;ls.has(e)&&lt().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),ls.set(e,t)}function fs(t,e){return`${e}_${t}`}function ms(t,e){return"string"===e?bs(t):gs([t],e)}function gs(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=E(t)),lt().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function ys(){return lt().platform.now()}function bs(t,e="utf-8"){return e=e||"utf-8",lt().platform.encode(t,e)}function xs(t,e="utf-8"){return e=e||"utf-8",lt().platform.decode(t,e)}class vs{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new ks)}profileKernel(t,e,n){let s;const r=()=>{s=n()};let a;const i=ys();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const t of s)t.dataSync();a=Promise.resolve({kernelMs:ys()-i})}if(lt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{ws(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:a.then((t=>t.kernelMs)),extraInfo:a.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),s,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function ws(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class ks{logKernelProfile(t,e,n,s,r,a){const i="number"==typeof s?M(`${s}ms`,9):s.error,o=M(t,25),l=e.rank,u=e.size,c=M(e.shape.toString(),14);let h="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;h+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function _s(t,e,n,s){const r=Z(e),a=function(t,e,n,s){const r=R(e),a=s[s.length-1],i=new Array(a).fill(0),o=e.length,l="complex64"===n?Cs(t):t;if(o>1)for(let t=0;t<r/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Is(l[e+t],0,n).length)}return i}(t,e,n,r),i=e.length,o=Ts(t,e,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Is(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:H(t)?`'${t}'`:"bool"===n?Ns(t):parseFloat(t.toFixed(7)).toString(),M(s,e)}function Ns(t){return 0===t?"false":"true"}function Ts(t,e,n,s,r,a=!0){const i="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Is(Cs(t)[0],0,n)]:"bool"===n?[Ns(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*i;let s=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-3)*i,o*i));return"complex64"===n&&(s=Cs(s),a=Cs(a)),["["+s.map(((t,e)=>Is(t,r[e],n))).join(", ")+", ..., "+a.map(((t,e)=>Is(t,r[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Cs(t):Array.from(t)).map(((t,e)=>Is(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*i,p=[];if(o>20){for(let e=0;e<3;e++){const s=e*h,a=s+h;p.push(...Ts(t.slice(s,a),u,n,c,r,!1))}p.push("...");for(let e=o-3;e<o;e++){const s=e*h,a=s+h;p.push(...Ts(t.slice(s,a),u,n,c,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*h,a=s+h;p.push(...Ts(t.slice(s,a),u,n,c,r,e===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<l;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Cs(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Ss{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=R(t),null!=n){const t=n.length;S(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||W(e,this.size),this.strides=Z(t)}set(t,...e){0===e.length&&(e=[0]),S(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return $s().makeTensor(this.values,this.shape,this.dtype)}}let $s=null,As=null,Es=null;class Rs{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=R(t),this.strides=Z(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return As.buffer(this.shape,this.dtype,t)}bufferSync(){return As.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Q(this.shape,t)}arraySync(){return Q(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=$s().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>xs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=$s().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>xs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await $s().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||($s().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return As.print(this,t)}clone(){return this.throwIfDisposed(),As.clone(this)}toString(t=!1){return _s(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),As.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),$s().makeVariable(this,t,e,n)}}function Ds(){return pt("Tensor",(()=>Rs))}Object.defineProperty(Rs,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Ds();class Os extends Rs{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!D(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);$s().disposeTensor(this),this.dataId=t.dataId,$s().incRef(this,null)}dispose(){$s().disposeVariable(this),this.isDisposedInternal=!0}}var Fs,Ms,Ls,zs,Ps;Object.defineProperty(Os,Symbol.hasInstance,{value:t=>t instanceof Rs&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Fs||(Fs={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Ms||(Ms={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Ls||(Ls={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(zs||(zs={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Ps||(Ps={}));const Vs={float32:zs,int32:Ms,bool:Ls,complex64:Ps};function Bs(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Vs[t][e]}function Ws(t){return Bs(t,"int32")}function Us(t,e){if(t.dtype===e.dtype)return[t,e];const n=Bs(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Gs(t,e){return e.some((e=>e.id===t.id))}function js(t){const e=[];return Hs(t,e,new Set),e}function Hs(t,e,n){if(null==t)return;if(t instanceof Rs)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),Hs(s,e,n))}}function qs(t){return null!=t.kernelName}class Xs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Ks{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Xs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new vs(this.backendInstance),!0}setupRegisteredKernels(){hs(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){hs(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof _||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e),a=s.refCount(e);s.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return Ks.nextTensorId++}nextVariableId(){return Ks.nextVariableId++}clone(t){const e=Zs.runKernel(_e,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return Zs.runKernel(Ot,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==us(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-e-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=qs(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(qs(t)){const{kernelName:e,inputs:r,attrs:a}=t;null==this.backendName&&this.backend;const l=us(e,this.backendName);S(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),i=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,i);const u=i.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:s}=t;return this.makeTensorFromDataId(e,n,s)}));if(s){const t=this.getTensorsForGradient(e,r,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,r=t=>{s&&(n=t.map((t=>this.keep(this.clone(t)))))};i=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=qs(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=i()})),s&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const s=cs(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(S(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>r[e]));return a.concat(i)}return[]}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&H(t[0])&&(r=t.map((t=>bs(t))));const a=s.write(r,e,n),i=new Rs(e,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const t=this.state.tensorInfo.get(a),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,s){const r=new Rs(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new Os(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*j(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Os||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*j(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=cs(t);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=et(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=js(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(S(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));S(r instanceof Rs,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){a.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in s)a[s[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=tt(R(t),"float32");return Zs.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const a=e[r],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[e];if(!D(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=r;else{const e=t[i.id];t[i.id]=s(e,r),e.dispose()}}}}(t,a,(t=>this.tidy(t)),Js);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return S(K(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;S(e.every((t=>t instanceof Rs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return e.forEach(((t,e)=>{s[e]=t})),this.runKernelFunc({forwardFunc:(s,r)=>(n=t(...e,r),S(n.value instanceof Rs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),S(K(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,s)=>{const r=n.gradFunc(t,s),a=Array.isArray(r)?r:[r];S(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),S(a.every((t=>t instanceof Rs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i},inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=ys(),n=await this.backend.time(t);return n.wallMs=ys()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Xs;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ys(){const t=ht();if(null==t._tfengine){const e=new ot(t);t._tfengine=new Ks(e)}var e;return e=t._tfengine.ENV,ct=e,$s=()=>t._tfengine,t._tfengine}Ks.nextTensorId=0,Ks.nextVariableId=0;const Zs=Ys();function Js(t,e){const n={a:t,b:e};return Zs.runKernel(gt,n)}function Qs(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function tr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const er=lt();function nr(t,e){let n=t;if(G(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||G(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&lt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&sr(t,s,[]),s}function sr(t,e,n){if(n=n||[],!Array.isArray(t)&&!G(t))return void S(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));S(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),S(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)sr(t[e],s,n.concat(e))}function rr(t,e,n,s){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}}function ar(t,e,n,s="numeric"){if(t instanceof Rs)return rr(s,t.dtype,e,n),t;let r=X(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),rr(s,r,e,n),null==t||!G(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=nr(t,r);G(t)||Array.isArray(t)||(t=[t]);const i="string"!==r?gs(t,r):E(t,[],!0);return Zs.makeTensor(i,a,r)}function ir(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>ar(t,`${e}[${r}]`,n,s)))}function or(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{Zs.startScope(n);try{const e=s(...t);return it(e)&&console.error("Cannot return a Promise inside of tidy."),Zs.endScope(e),e}catch(t){throw Zs.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}er.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),er.registerFlag("IS_BROWSER",(()=>tr())),er.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),er.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),er.registerFlag("PROD",(()=>!1)),er.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>er.getBool("DEBUG"))),er.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),er.registerFlag("IS_TEST",(()=>!1)),er.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),er.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const lr=or({complex_:function(t,e){const n=ar(t,"real","complex"),s=ar(e,"imag","complex");$(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Zs.runKernel(Lt,r)}});function ur(t,e,n,s){if(null==s&&(s=X(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!G(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){st(e);const t=R(e),s=R(n);S(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==R(e.slice(t));S(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return G(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?gs(t,s):E(t,[],!0),Zs.makeTensor(t,e,s)}function cr(t,e,n){return ur(t,e,nr(t,n),n)}const hr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function pr(t,e){const n=[],s=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,s=new Uint8Array(n);let r=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}t(s)}));s.push(t)}else s.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:dr(await Promise.all(s)),specs:n}}function dr(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const s=new Uint8Array(e);let r=0;return n.forEach((t=>{s.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),s.buffer}const fr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function mr(t){return fr?Buffer.byteLength(t):new Blob([t]).size}function gr(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function yr(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:mr(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:mr(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function br(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[r]=o}return new Float32Array(r)}}class xr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==xr.instance&&(xr.instance=new xr),xr.instance}static registerSaveRouter(t){xr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){xr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return xr.getHandlers(t,"save")}static getLoadHandlers(t,e){return xr.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?xr.getInstance().loadRouters:xr.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}const vr=t=>xr.getSaveHandlers(t),wr="tensorflowjs",kr="models_store",_r="model_info_store";function Ir(){if(!lt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Nr(t){const e=t.result;e.createObjectStore(kr,{keyPath:"modelPath"}),e.createObjectStore(_r,{keyPath:"modelPath"})}class Tr{constructor(t){if(this.indexedDB=Ir(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open(wr,1);s.onupgradeneeded=()=>Nr(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction(kr,"readonly"),s=e.objectStore(kr).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=yr(e),a=r.transaction(_r,"readwrite");let i=a.objectStore(_r);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(kr,"readwrite");const o=l.objectStore(kr).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{i=a.objectStore(_r);const e=i.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}Tr.URL_SCHEME="indexeddb://";const Cr=t=>{return lt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Tr.URL_SCHEME)?(e=t.slice(Tr.URL_SCHEME.length),new Tr(e)):null;var e};xr.registerSaveRouter(Cr),xr.registerLoadRouter(Cr);class Sr{constructor(){this.indexedDB=Ir()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(wr,1);n.onupgradeneeded=()=>Nr(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(_r,"readonly"),a=r.objectStore(_r).getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(s.close(),e(a.error)),r.oncomplete=()=>s.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Tr.URL_SCHEME)?e.slice(Tr.URL_SCHEME.length):e,new Promise(((e,n)=>{const s=this.indexedDB.open(wr,1);s.onupgradeneeded=()=>Nr(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(_r,"readwrite"),i=a.objectStore(_r),o=i.get(t);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=i.delete(t),a=()=>{l=r.transaction(kr,"readwrite");const s=l.objectStore(kr).delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};s.onsuccess=a,s.onerror=t=>(a(),r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=t=>n(s.error)}))}}const $r="/",Ar="tensorflowjs_models",Er="info",Rr="model_topology",Dr="weight_specs",Or="weight_data",Fr="model_metadata";function Mr(t){return{info:[Ar,t,Er].join($r),topology:[Ar,t,Rr].join($r),weightSpecs:[Ar,t,Dr].join($r),weightData:[Ar,t,Or].join($r),modelMetadata:[Ar,t,Fr].join($r)}}function Lr(t){const e=t.split($r);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join($r)}class zr{constructor(t){if(!lt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Mr(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=yr(t);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(fr)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(fr){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}zr.URL_SCHEME="localstorage://";const Pr=t=>{return lt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(zr.URL_SCHEME)?(e=t.slice(zr.URL_SCHEME.length),new zr(e)):null;var e};xr.registerSaveRouter(Pr),xr.registerLoadRouter(Pr);class Vr{constructor(){S(lt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),S("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Ar+$r,n=$r+Er;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(e)&&r.endsWith(n)&&(t[Lr(r)]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(t){var e;const n=Mr(t=(e=t).startsWith(zr.URL_SCHEME)?e.slice(zr.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}class Br{constructor(){this.managers={}}static getInstance(){return null==Br.instance&&(Br.instance=new Br),Br.instance}static registerManager(t,e){S(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),S(t.length>0,(()=>"scheme must not be an empty string."));const n=Br.getInstance();S(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Wr{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(lt().get("IS_BROWSER")){lt().setPlatform("browser",new Wr);try{Br.registerManager(zr.URL_SCHEME,new Vr)}catch(t){}try{Br.registerManager(Tr.URL_SCHEME,new Sr)}catch(t){}}let Ur;function Gr(t,e="float32",n){return e=e||"float32",st(t),new Ss(t,e,n)}lt().get("IS_NODE")&&lt().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=lt().global.fetch?lt().global.fetch(t,e):(null==Ur&&(Ur=n(410)),Ur(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const jr=or({cast_:function(t,e){const n=ar(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return Zs.runKernel(Ot,s,r)}}),Hr=or({clone_:function(t){const e={x:ar(t,"x","clone","string_or_numeric")};return Zs.runKernel(_e,e)}});function qr(t){return new Promise((t=>setTimeout(t))).then(t)}Ys(),function(t){As=t}({buffer:Gr,cast:jr,clone:Hr,print:function(t,e=!1){console.log(t.toString(e))}});class Xr{constructor(t){if(!lt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Xr.URL_SCHEME)&&(t=t.slice(Xr.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await qr((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await qr((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:yr(t)}}}}function Kr(t,e,n,s){!function(t){S(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){S(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),S(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),S(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((a=>(a.then((a=>{const i=n+ ++r/t.length*(s-n);return e(i),a})),a))))}async function Yr(t,e){null==e&&(e={});const n=null==e.fetchFunc?lt().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await Kr(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await Kr(r,e.onProgress,.5,1)}Xr.URL_SCHEME="downloads://",xr.registerSaveRouter((t=>lt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Xr.URL_SCHEME)?function(t="model"){return new Xr(t)}(t.slice(Xr.URL_SCHEME.length)):null));class Zr{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(S("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=lt().platform.fetch,S(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&S(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:yr(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest,r=e.generatedBy,a=e.convertedBy,i=e.format,o=e.signature,l=e.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=s){const t=await this.loadWeights(s);[u,c]=t}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:r,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const p=e.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(r+t+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,gr(await Yr(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Jr(t){return null!=t.match(Zr.URL_SCHEME_REGEX)}Zr.URL_SCHEME_REGEX=/^https?:\/\//;const Qr=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Jr(t))):Jr(t),n)return ta(t,e)}return null};function ta(t,e){return new Zr(t,e)}function ea(t,e){return ta(t,e)}let na;xr.registerSaveRouter(Qr),xr.registerLoadRouter(Qr);const sa=or({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else if(null!=t.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);o=!0}if(r){const e=2;if(r&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=us(ns,Zs.backendName)){const n={pixels:t},s={numChannels:e};return Zs.runKernel(ns,n,s)}const[l,u]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(i?c=t.getContext("2d").getImageData(0,0,l,u).data:s||n?c=t.data:(a||r||o)&&(null==na&&(na=document.createElement("canvas").getContext("2d")),na.canvas.width=l,na.canvas.height=u,na.drawImage(t,0,0,l,u),c=na.getImageData(0,0,l,u).data),4===e)h=new Int32Array(c);else{const t=l*u;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=c[4*n+t]}return function(t,e,n){if(A(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=nr(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ur(t,e,s,n)}(h,[u,l,e],"int32")}});function ra(t,e,n){const s=t.shape.length;S(s===e.length,(()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`)),S(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)S(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function aa(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function ia(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function oa(t,e,n,s){const r=[...t];for(let t=r.length;t<s.length;t++)r.push(1);for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function la(t,e,n){return n<=t?n:n-(e-1)}function ua(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function ca(t,e,n,s,r,a,i,o,l){const u=t.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=ha(i,l,u,s,t),h=pa(o,l,u,r,t),p=oa(a,l,u,t)}else for(let e=0;e<u;e++)c[e]=fa(i,s,a,t,e,l),h[e]=ma(o,r,a,t,e,l),p[e]=da(a,e,l);return{begin:c,end:h,strides:p}}function ha(t,e,n,s,r){const a=[...r],i=ua(n,e);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=la(e,n,r);let o=s[i];t&1<<i&&(o=0),a[r]=o}return a}function pa(t,e,n,s,r){const a=[...r],i=ua(n,e);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=la(e,n,r);let o=s[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let t=0;t<a.length;t++){const e=r[t];a[t]<0&&(a[t]+=e),a[t]=T(0,a[t],r[t])}return a}function da(t,e,n){let s=t[e];return(n&1<<e||null==s)&&(s=1),s}function fa(t,e,n,s,r,a){let i=e[r];const o=n[r]||1;(t&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=T(0,i,l-1),i}function ma(t,e,n,s,r,a){let i=e[r];const o=n[r]||1;(t&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?T(0,i,l):T(-1,i,l-1),i}function ga(t,e,n){let s=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){s=t;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function ya(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function ba(t,e,n){let s;const r=t.shape.length;let a;return s="number"==typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{S(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(S(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,a]}function xa(t,e,n,s,r,a,i,o,l){let u=e.slice(),c=n.slice(),h=s;null==s&&(h=new Array(u.length));const p=aa(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=t.length-u.length,f=aa(o),m=t.slice();f.forEach((t=>{u[t]=0,c[t]=1,m.splice(t,0,1)}));const{begin:g,end:y,strides:b}=ca(m,p,d,u,c,h,r,a,i);u=g,c=y,h=b;const x=aa(l);x.forEach((t=>{c[t]=u[t]+1,h[t]=1}));const v=ia(u,c,h),w=v.filter(((t,e)=>-1===x.indexOf(e)));return{nonStrided:h.every((t=>1===t)),$begin:u,$end:c,$strides:h,size:v,newShape:m,outShape:w}}class va{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class wa{constructor(){this.classNameMap={}}static getMap(){return null==wa.instance&&(wa.instance=new wa),wa.instance}static register(t){wa.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function ka(t){S(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),S("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),S(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),wa.register(t)}function _a(){return Zs}function Ia(){return Zs.memory()}function Na(t,e){return Zs.tidy(t,e)}function Ta(t){js(t).forEach((t=>t.dispose()))}function Ca(t){return Zs.keep(t)}function Sa(t){return Zs.setBackend(t)}function $a(t,e,n=1){return Zs.registerBackend(t,e,n)}function Aa(t){return Zs.customGrad(t)}function Ea(t,e){if((G(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&G(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ur(t,[],[],e)}Es=function(t){lt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Ra extends va{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return Ta(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){S(K(t),(()=>"The f passed in variableGrads(f) must be a function")),S(null==e||Array.isArray(e)&&e.every((t=>t instanceof Os)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Zs.registeredVariables)e.push(Zs.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;S((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=Zs.gradients(t,e,null,!0);S(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),S(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:a,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Ta(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ea(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ra,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Da=or({abs_:function(t){const e=ar(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Zs.runKernel(zt,t)}{const t={x:e};return Zs.runKernel(dt,t)}}}),Oa=or({add_:function(t,e){let n=ar(t,"a","add"),s=ar(e,"b","add");[n,s]=Us(n,s);const r={a:n,b:s};return Zs.runKernel(gt,r)}}),Fa=or({all_:function(t,e=null,n=!1){const s={x:ar(t,"x","all","bool")},r={axis:e,keepDims:n};return Zs.runKernel(bt,s,r)}}),Ma=or({any_:function(t,e=null,n=!1){const s={x:ar(t,"x","any","bool")},r={axis:e,keepDims:n};return Zs.runKernel(xt,s,r)}}),La=or({argMax_:function(t,e=0){const n={x:ar(t,"x","argMax")},s={axis:e};return Zs.runKernel(vt,n,s)}});function za(t,e,n,s,r="NHWC",a){return Ba(t,[...e,t[3]],n,a,s,null,null,Ya(r))}function Pa(t,e,n,s,r,a,i="channelsLast"){const[o,l]=Ga(e);let u;if("channelsLast"===i)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,t[1],t[1]]}return Ba(t,u,n,s,r,a,!1,i)}function Va(t,e,n,s,r,a,i="NDHWC"){const[o,l,u]=ja(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return Wa(t,c,n,s,r,!1,h,a)}function Ba(t,e,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[p,d,,f]=e,[m,g]=Ga(n),[y,b]=Ga(s),x=Ha(p,y),v=Ha(d,b),{padInfo:w,outHeight:k,outWidth:_}=function(t,e,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=Ua(t,e,n));const a=t[1];return[qa((t[0]-e+2*s)/n+1,r),qa((a-e+2*s)/n+1,r)]}([e,n],a,s,t,o);c=r[0],h=r[1]}else if("same"===t){c=Math.ceil(e/s),h=Math.ceil(n/r);const t=Math.max(0,(c-1)*s+a-e),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(t/2),p=t-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const p="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=qa((e-a+p+d)/s+1,o),h=qa((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,v,a,o),I=i?f*h:f;let N;return"channelsFirst"===o?N=[l,I,k,_]:"channelsLast"===o&&(N=[l,k,_,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:_,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:t,outShape:N,filterShape:e}}function Wa(t,e,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=t}const[d,f,m,,g]=e,[y,b,x]=ja(n),[v,w,k]=ja(s),_=Ha(d,v),I=Ha(f,w),N=Ha(m,k),{padInfo:T,outDepth:C,outHeight:S,outWidth:$}=function(t,e,n,s,r,a,i,o,l,u,c){let h,p,d,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,s,r,a){null==r&&(r=Ua(t,e,s));const i=t[1],o=t[2];return[qa((t[0]-e+2*r)/s+1,a),qa((i-e+2*r)/s+1,a),qa((o-e+2*r)/s+1,a),1]}([e,n,s,1],o,0,r,t,c);p=a[0],d=a[1],f=a[2]}else if("same"===t){p=Math.ceil(e/r),d=Math.ceil(n/a),f=Math.ceil(s/i);const t=(p-1)*r+o-e,c=(d-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-o+1)/r),d=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(r,u,c,h,y,b,x,_,I,N,o),A=a?g*p:g;let E;return"channelsFirst"===i?E=[l,A,C,S,$]:"channelsLast"===i&&(E=[l,C,S,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:S,outWidth:$,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:_,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:t,outShape:E,filterShape:e}}function Ua(t,e,n,s=1){const r=Ha(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function Ga(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function ja(t){return"number"==typeof t?[t,t,t]:t}function Ha(t,e){return e<=1?t:t+(t-1)*(e-1)}function qa(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Xa(t){const[e,n,s]=Ga(t);return 1===e&&1===n&&1===s}function Ka(t,e){return Xa(t)||Xa(e)}function Ya(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const Za=or({reshape_:function(t,e){const n={x:ar(t,"x","reshape","string_or_numeric")},s={shape:e};return Zs.runKernel(yn,n,s)}}),Ja=or({avgPool_:function(t,e,n,s,r){const a=ar(t,"x","avgPool","float32");S(Ka(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Za(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=r&&S(O(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let c=Zs.runKernel(Ct,l,u);return c=jr(c,a.dtype),o?Za(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qa=or({avgPool3d_:function(t,e,n,s,r,a="NDHWC"){const i=ar(t,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Za(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),S(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),S("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&S(O(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=Zs.runKernel($t,u,c);return h=jr(h,o.dtype),l?Za(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ti=or({batchNorm_:function(t,e,n,s,r,a){null==a&&(a=.001);const i=ar(t,"x","batchNorm"),o=ar(e,"mean","batchNorm"),l=ar(n,"variance","batchNorm");let u,c;null!=r&&(u=ar(r,"scale","batchNorm")),null!=s&&(c=ar(s,"offset","batchNorm")),S(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),S(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),S(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(t){let e;return e=0===t.rank||1===t.rank?Za(t,[1,1,1,t.size]):2===t.rank?Za(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Za(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},d=Zs.runKernel(be,h,p);return Za(d,i.shape)}}),ei=or({batchNorm2d_:function(t,e,n,s,r,a){const i=ar(t,"x","batchNorm"),o=ar(e,"mean","batchNorm"),l=ar(n,"variance","batchNorm");let u,c;return null!=r&&(u=ar(r,"scale","batchNorm")),null!=s&&(c=ar(s,"offset","batchNorm")),S(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),S(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),S(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&S(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&S(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ti(i,o,l,c,u,a)}}),ni=or({batchNorm3d_:function(t,e,n,s,r,a){const i=ar(t,"x","batchNorm"),o=ar(e,"mean","batchNorm"),l=ar(n,"variance","batchNorm");let u,c;return null!=r&&(u=ar(r,"scale","batchNorm")),null!=s&&(c=ar(s,"offset","batchNorm")),S(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),S(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),S(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&S(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&S(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ti(i,o,l,c,u,a)}}),si=or({batchNorm4d_:function(t,e,n,s,r,a){const i=ar(t,"x","batchNorm"),o=ar(e,"mean","batchNorm"),l=ar(n,"variance","batchNorm");let u,c;return null!=r&&(u=ar(r,"scale","batchNorm")),null!=s&&(c=ar(s,"offset","batchNorm")),S(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),S(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),S(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&S(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&S(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ti(i,o,l,c,u,a)}}),ri=or({clipByValue_:function(t,e,n){const s=ar(t,"x","clipByValue");S(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:e,clipValueMax:n};return Zs.runKernel(Mt,r,a)}}),ai=or({concat_:function(t,e=0){S(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=ir(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Hr(n[0]);const s=n,r={axis:e};return Zs.runKernel(Pt,s,r)}}),ii=or({concat1d_:function(t){return ai(t,0)}}),oi=or({concat2d_:function(t,e){return ai(t,e)}}),li=or({concat3d_:function(t,e){return ai(t,e)}}),ui=or({concat4d_:function(t,e){return ai(t,e)}}),ci=or({conv2d_:function(t,e,n,s,r="NHWC",a=[1,1],i){const o=ar(t,"x","conv2d"),l=ar(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Za(o,[1,o.shape[0],o.shape[1],o.shape[2]])),S(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),S(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&S(O(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];S(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),S(Ka(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=Zs.runKernel(Vt,p,d);return c?Za(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),hi=or({conv1d_:function(t,e,n,s,r="NWC",a=1,i){const o=ar(t,"x","conv1d"),l=ar(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Za(o,[1,o.shape[0],o.shape[1]])),S(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),S(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&S(O(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),S(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),S(Ka(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),S("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Za(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Za(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=ci(p,h,[1,n],s,"NHWC",[1,a],i);return Za(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),pi=or({conv2DBackpropInput_:function(t,e,n,s,r,a="NHWC",i){S(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=Za(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),S(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),S(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),S(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];S(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),S(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&S(O(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={dy:l,filter:n},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Zs.runKernel(Wt,p,d);return u?Za(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),di=or({conv2dTranspose_:function(t,e,n,s,r,a){const i=ar(t,"x","conv2dTranspose"),o=ar(e,"filter","conv2dTranspose");return pi(n,i,o,s,r,"NHWC",a)}}),fi=or({conv3d_:function(t,e,n,s,r="NDHWC",a=[1,1,1]){const i=ar(t,"x","conv3d"),o=ar(e,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Za(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),S(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),S(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),S(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),S(Ka(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),S("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},p=Zs.runKernel(Ut,c,h);return u?Za(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),mi=or({depthwiseConv2d_:function(t,e,n,s,r="NHWC",a=[1,1],i){const o=ar(t,"x","depthwiseConv2d"),l=ar(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Za(o,[1,o.shape[0],o.shape[1],o.shape[2]])),S(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),S(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),S(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&S(O(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},d=Zs.runKernel(Jt,h,p);return c?Za(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),gi=or({floorDiv_:function(t,e){let n=ar(t,"a","floorDiv"),s=ar(e,"b","floorDiv");[n,s]=Us(n,s);const r={a:n,b:s};return Zs.runKernel(ye,r)}}),yi=or({div_:function(t,e){let n=ar(t,"a","div"),s=ar(e,"b","div");if([n,s]=Us(n,s),"int32"===n.dtype&&"int32"===s.dtype)return gi(n,s);const r={a:n,b:s};return Zs.runKernel(ae,r,{})}}),bi=or({elu_:function(t){const e={x:ar(t,"x","elu")};return Zs.runKernel(ie,e)}});function xi(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=t[a]||1;(e[e.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function vi(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],a=e.length-s-1,i=e[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function wi(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let a=e[e.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(s)}}return n}const ki=or({equal_:function(t,e){let n=ar(t,"a","equal"),s=ar(e,"b","equal");[n,s]=Us(n,s),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(ue,r)}}),_i=or({expandDims_:function(t,e=0){const n=ar(t,"x","expandDims","string_or_numeric");S(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:e};return Zs.runKernel(he,s,r)}}),Ii=or({tile_:function(t,e){const n=ar(t,"x","tile","string_or_numeric");S(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s={x:n},r={reps:e};return Zs.runKernel(qn,s,r)}}),Ni=or({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=Gr([t,e],s),a=t<=e?t:e;for(let t=0;t<a;++t)r.set(1,t,t);const i=Za(r.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Ii(_i(i,0),[n[0],1,1]);if(2===n.length)return Ii(_i(_i(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ii(_i(_i(_i(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ti(t,e,n){const s={shape:t,value:e,dtype:n};return Zs.runKernel(fe,{},s)}const Ci=or({floor_:function(t){const e={x:ar(t,"x","floor")};return Zs.runKernel(ge,e)}}),Si=or({gather_:function(t,e,n=0,s=0){const r={x:ar(t,"x","gather"),indices:ar(e,"indices","gather","int32")},a={axis:n,batchDims:s};return Zs.runKernel(xe,r,a)}}),$i=or({greater_:function(t,e){let n=ar(t,"a","greater"),s=ar(e,"b","greater");[n,s]=Us(n,s),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(we,r)}}),Ai=or({greaterEqual_:function(t,e){let n=ar(t,"a","greaterEqual"),s=ar(e,"b","greaterEqual");[n,s]=Us(n,s),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(ke,r)}}),Ei=or({leakyRelu_:function(t,e=.2){const n={x:ar(t,"x","leakyRelu")},s={alpha:e};return Zs.runKernel($e,n,s)}}),Ri=or({log_:function(t){const e={x:ar(t,"x","log")};return Zs.runKernel(De,e)}}),Di=or({exp_:function(t){const e={x:ar(t,"x","exp")};return Zs.runKernel(ce,e)}}),Oi=or({max_:function(t,e=null,n=!1){const s={x:ar(t,"x","max")},r={reductionIndices:e,keepDims:n};return Zs.runKernel(Ve,s,r)}}),Fi=or({mul_:function(t,e){let n=ar(t,"a","mul"),s=ar(e,"b","mul");[n,s]=Us(n,s);const r={a:n,b:s};return Zs.runKernel(Qe,r)}}),Mi=or({sub_:function(t,e){let n=ar(t,"a","sub"),s=ar(e,"b","sub");[n,s]=Us(n,s);const r={a:n,b:s};return Zs.runKernel(Wn,r)}}),Li=or({sum_:function(t,e=null,n=!1){let s=ar(t,"x","sum");"bool"===s.dtype&&(s=jr(s,"int32"));const r={x:s},a={axis:e,keepDims:n};return Zs.runKernel(Mn,r,a)}}),zi=or({logSoftmax_:function(t,e=-1){const n=ar(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Aa(((t,n)=>{const s=Oi(t,e,!0),r=Mi(t,s),a=Mi(jr(r,"float32"),Ri(Li(Di(r),e,!0)));return n([a]),{value:a,gradFunc:(t,n)=>{const[s]=n,r=Di(s);return Mi(t,Fi(Li(t,e,!0),r))}}}))(n)}}),Pi=or({logicalAnd_:function(t,e){const n=ar(t,"a","logicalAnd","bool"),s=ar(e,"b","logicalAnd","bool");wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(Fe,r)}}),Vi=or({maxPool_:function(t,e,n,s,r){const a=ar(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Za(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),S(Ka(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&S(O(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},c=Zs.runKernel(We,l,u);return o?Za(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Bi=or({maxPool3d_:function(t,e=[1,1,1],n,s,r,a="NDHWC"){const i=ar(t,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Za(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),S(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),S("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&S(O(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=Zs.runKernel(Ge,u,c);return l?Za(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Wi=or({maximum_:function(t,e){let n=ar(t,"a","maximum"),s=ar(e,"b","maximum");[n,s]=Us(n,s),"bool"===n.dtype&&(n=jr(n,"int32"),s=jr(s,"int32")),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(Be,r)}}),Ui=or({mean_:function(t,e=null,n=!1){const s={x:ar(t,"x","mean")},r={axis:e,keepDims:n};return Zs.runKernel(qe,s,r)}}),Gi=or({min_:function(t,e=null,n=!1){const s={x:ar(t,"x","min")},r={axis:e,keepDims:n};return Zs.runKernel(Xe,s,r)}}),ji=or({minimum_:function(t,e){let n=ar(t,"a","minimum"),s=ar(e,"b","minimum");[n,s]=Us(n,s),"bool"===n.dtype&&(n=jr(n,"int32"),s=jr(s,"int32")),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(Ke,r)}});function Hi(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function qi(t,e,n){const s=t.length+e.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[a++]):r.push(e[i++]);return r}function Xi(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function Ki(t,e){return qi(t,e.map((t=>1)),e)}function Yi(t,e,n){S(Hi(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function Zi(t,e){if(Hi(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function Ji(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Qi(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}const to=or({square_:function(t){const e=ar(t,"x","square");return Zs.runKernel("Square",{x:e},{})}}),eo=or({moments_:function(t,e=null,n=!1){const s=P(e,(t=ar(t,"x","moments")).shape),r=Ui(t,s,n);let a=r.shape;n||(a=Ki(r.shape,s));const i=to(Mi(jr(t,"float32"),Za(r,a)));return{mean:r,variance:Ui(i,s,n)}}}),no=or({neg_:function(t){const e={x:ar(t,"x","neg")};return Zs.runKernel(tn,e)}}),so=or({notEqual_:function(t,e){let n=ar(t,"a","notEqual"),s=ar(e,"b","notEqual");[n,s]=Us(n,s),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(en,r)}}),ro=or({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const r={indices:ar(t,"indices","oneHot","int32")},a={depth:e,onValue:n,offValue:s};return Zs.runKernel(on,r,a)}});function ao(t,e="float32"){if("complex64"===e){const e=ao(t,"float32"),n=ao(t,"float32");return lr(e,n)}const n=et(R(t),e);return Zs.makeTensor(n,t,e)}function io(t,e="float32"){if("complex64"===e){const e=io(t,"float32"),n=ao(t,"float32");return lr(e,n)}const n=tt(R(t),e);return Zs.makeTensor(n,t,e)}const oo=or({onesLike_:function(t){const e={x:ar(t,"x","onesLike")};return Zs.runKernel(an,e)}}),lo=or({pad_:function(t,e,n=0){const s=ar(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},a={x:s};return Zs.runKernel(un,a,r)}}),uo=or({prelu_:function(t,e){const n={x:ar(t,"x","prelu"),alpha:ar(e,"alpha","prelu")};return Zs.runKernel(hn,n)}});var co=n(129);class ho{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=co.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*s*i,e=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class po{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=co.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const fo=or({randomNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new ho(e,n,s,!1,r),i=Gr(t,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),mo=or({randomUniform_:function(t,e=0,n=1,s="float32",r){const a=Gr(t,s),i=new po(e,n,null,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),go=or({relu_:function(t){const e={x:ar(t,"x","relu")};return Zs.runKernel(gn,e)}}),yo=or({reverse_:function(t,e){const n={x:ar(t,"x","reverse")},s={dims:e};return Zs.runKernel(_n,n,s)}}),bo=or({selu_:function(t){const e={x:ar(t,"x","selu")};return Zs.runKernel(Sn,e)}}),xo=or({separableConv2d_:function(t,e,n,s,r,a=[1,1],i="NHWC"){const o=ar(t,"x","separableConv2d"),l=ar(e,"depthwiseFilter","separableConv2d"),u=ar(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Za(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");S(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),S(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),S(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),S(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),S(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];S(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=mi(c,l,s,r,i,a),m=ci(f,u,1,"valid",i);return h?Za(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),vo=or({sigmoid_:function(t){const e={x:ar(t,"x","sigmoid")};return Zs.runKernel(Dn,e)}}),wo=or({slice_:function(t,e,n){const s=ar(t,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:e,size:n};return Zs.runKernel($n,r,a)}}),ko=or({slice1d_:function(t,e,n){const s=ar(t,"x","slice1d");return S(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),wo(s,[e],[n])}}),_o=or({slice2d_:function(t,e,n){const s=ar(t,"x","slice2d");return S(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),wo(s,e,n)}}),Io=or({slice3d_:function(t,e,n){const s=ar(t,"x","slice3d");return S(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),wo(s,e,n)}}),No=or({slice4d_:function(t,e,n){const s=ar(t,"x","slice4d");return S(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),wo(s,e,n)}}),To=or({softmax_:function(t,e=-1){const n=ar(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return Zs.runKernel(Pn,s,r)}}),Co=or({softplus_:function(t){const e={x:ar(t,"x","softplus")};return Zs.runKernel(On,e)}}),So=or({split_:function(t,e,n=0){const s={x:ar(t,"x","split")},r={numOrSizeSplits:e,axis:n};return Zs.runKernel(zn,s,r)}}),$o=or({sqrt_:function(t){const e={x:ar(t,"x","sqrt")};return Zs.runKernel(Fn,e)}}),Ao=or({squeeze_:function(t,e){const n=ar(t,"x","squeeze");return Za(n,V(n.shape,e).newShape)}}),Eo=or({stack_:function(t,e=0){const n=ir(t,"tensors","stack","string_or_numeric");S(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&S(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:e};return Zs.runKernel(ln,s,r)}}),Ro=or({tanh_:function(t){const e={x:ar(t,"x","tanh")};return Zs.runKernel(Hn,e)}});function Do(t,e){A(t);const n=nr(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ur(t,null,n,e)}function Oo(t,e,n){if(A(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=nr(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ur(t,e,s,n)}const Fo=or({truncatedNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new ho(e,n,s,!0,r),i=Gr(t,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),Mo=or({unstack_:function(t,e=0){const n=ar(t,"x","unstack","string_or_numeric");S(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:e};return Zs.runKernel(Jn,s,r)}}),Lo=or({broadcastTo_:function(t,e){let n=ar(t,"broadcastTo","x");const s=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Za(n,t)}const r=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Hr(n);const i={x:n},o={reps:a};return Zs.runKernel(qn,i,o)}}),zo=or({where_:function(t,e,n){const s=ar(e,"a","where"),r=ar(n,"b","where"),a=ar(t,"condition","where","bool"),i=wi(s.shape,r.shape),o=Lo(s,i),l=Lo(r,i);1===a.rank&&S(a.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&$(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return Zs.runKernel(Cn,u)}}),Po=or({zerosLike_:function(t){const e={x:ar(t,"x","zerosLike")};return Zs.runKernel(ts,e)}}),Vo=or({transpose_:function(t,e){const n=ar(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),S(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{S(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:e};return Zs.runKernel(Yn,s,r)}}),Bo=or({dropout_:function(t,e,n,s){const r=ar(t,"x","dropout");if(S("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),S(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Rs?r.clone():r;const a=function(t,e){if(null==e)return t.shape.slice();if(D(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),i=1-e,o=yi(Ci(Oa(mo(a,0,1,"float32",s),i)),i);return Fi(r,o)}}),Wo=or({imag_:function(t){const e={input:ar(t,"input","imag")};return Zs.runKernel(Ne,e)}}),Uo=or({real_:function(t){const e={input:ar(t,"input","real")};return Zs.runKernel(fn,e)}}),Go=or({fft_:function(t){S("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Zs.runKernel(de,e)}}),jo=or({rfft_:function(t,e){S("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,r=wo(t,s,a),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=ai([t,ao(s)],t.shape.length-1),n=e}else r=t;const a=Po(r),i=Za(lr(r,a),[s,n]),o=Go(i),l=Math.floor(n/2)+1,u=Uo(o),c=Wo(o),h=So(u,[l,n-l],u.shape.length-1),p=So(c,[l,n-l],c.shape.length-1),d=r.shape.slice();return d[r.shape.length-1]=l,Za(lr(h[0],p[0]),d)}}),Ho=or({ifft_:function(t){S("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Zs.runKernel(Ie,e)}}),qo=or({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=Za(t,[n,e]);s=Ho(r)}else{const r=[n,2*(e-1)],a=Za(Uo(t),[n,e]),i=Za(Wo(t),[n,e]),o=yo(wo(a,[0,1],[n,e-2]),1),l=Fi(yo(wo(i,[0,1],[n,e-2]),1),Ea(-1)),u=ai([a,o],1),c=ai([i,l],1),h=Za(lr(u,c),[r[0],r[1]]);s=Ho(h)}if(s=Uo(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=Za(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}}),Xo=or({conv2DBackpropFilter_:function(t,e,n,s,r,a="NHWC",i){let o=t;3===t.rank&&(o=Za(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Za(e,[1,e.shape[0],e.shape[1],e.shape[2]])),S(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),S(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),S(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];S(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),S(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&S(O(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:o,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return Zs.runKernel(Bt,h,p)}}),Ko=or({relu6_:function(t){const e={x:ar(t,"x","relu6")};return Zs.runKernel(kn,e)}}),Yo=or({step_:function(t,e=0){const n={x:ar(t,"x","step")},s={alpha:e};return Zs.runKernel(es,n,s)}});function Zo(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Fi(t,Yo(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Jo(t,e){let n=e;const s=vi(t.shape,e.shape);return s.length>0&&(n=Li(n,s)),Za(n,t.shape)}function Qo(t,e,n,s){if("linear"===e)return t;if("relu"===e)return go(t);if("elu"===e)return bi(t);if("relu6"===e)return Ko(t);if("prelu"===e)return uo(t,n);if("leakyrelu"===e)return Ei(t,s);throw new Error(`Unknown fused activation ${e}.`)}const tl=(t,e)=>!(t>0)||"linear"===e,el=or({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===tl(Zs.state.gradientDepth,l)){let h=ci(t,e,n,s,r,a,i);return null!=o&&(h=Oa(h,o)),Qo(h,l,u,c)}const h=ar(t,"x","conv2d"),p=ar(e,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Za(h,[1,h.shape[0],h.shape[1],h.shape[2]])),S(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),S(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&S(O(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),S(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),S(Ka(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),S("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=Ba(d.shape,p.shape,n,a,s,i);let g,y;null!=o&&(g=ar(o,"bias","fused conv2d"),[g]=Us(g,h),wi(m.outShape,g.shape)),null!=u&&(y=ar(u,"prelu weights","fused conv2d"));const b=(t,e)=>{const[r,i,o,u]=e,c=Zo(t,o,l);S(Xa(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[pi(i.shape,c,r,n,s),Xo(i,c,r.shape,n,s)];if(null!=u){const t=Jo(u,c);h.push(t)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?Aa(((t,e,n)=>{let s=Zs.runKernel(as,x,v);return n([e,t,s]),f&&(s=Za(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p):Aa(((t,e,n,s)=>{let r=Zs.runKernel(as,x,v);return s([e,t,r,n]),f&&(r=Za(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p,g)}}),nl=or({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,r,a=[1,1],i){let o=t;3===t.rank&&(o=Za(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Za(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return Zs.runKernel(Qt,u,c)}}),sl=or({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,r,a=[1,1],i){let o=e,l=!1;3===e.rank&&(l=!0,o=Za(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:t},h=Zs.runKernel(te,u,c);return l?Za(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),rl=or({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===tl(Zs.state.gradientDepth,l)){let h=mi(t,e,n,s,r,a,i);return null!=o&&(h=Oa(h,o)),Qo(h,l,u,c)}const h=ar(t,"x","depthwiseConv2d"),p=ar(e,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=Za(h,[1,h.shape[0],h.shape[1],h.shape[2]])),S(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),S(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),S(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),S(Ka(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&S(O(s),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${s}.`));const m=Ba(d.shape,p.shape,n,a,s,i,!0);let g,y;null!=o&&(g=ar(o,"bias","fused conv2d"),[g]=Us(g,h),wi(m.outShape,g.shape)),null!=u&&(y=ar(u,"prelu weights","fused depthwiseConv2d"));const b=(t,e)=>{S(Xa(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=e,h=Zo(t,u,l),p=sl(o.shape,h,r,n,s,a,i),d=nl(o,h,r.shape,n,s,a,i);return null!=c?[p,d,Jo(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?Aa(((t,e,n)=>{let s=Zs.runKernel(is,x,v);return n([e,t,s]),f&&(s=Za(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p):Aa(((t,e,n,s)=>{let r=Zs.runKernel(is,x,v);return s([e,t,r,n]),f&&(r=Za(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p,g)}}),al=or({matMul_:function(t,e,n=!1,s=!1){let r=ar(t,"a","matMul"),a=ar(e,"b","matMul");[r,a]=Us(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return Zs.runKernel(Et,i,o)}}),il=or({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===tl(Zs.state.gradientDepth,a)){let l=al(t,e,n,s);return null!=r&&(l=Oa(l,r)),Qo(l,a,i,o)}let l=ar(t,"a","fused matMul"),u=ar(e,"b","fused matMul");[l,u]=Us(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=R(f),y=R(m);S(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),S(D(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),S(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=l.shape.slice(0,-2).concat([p,d]),x=Za(l,n?[g,c,p]:[g,p,c]),v=Za(u,s?[y,d,h]:[y,h,d]);let w,k;null!=r&&(w=ar(r,"bias","fused matMul"),[w]=Us(w,l),wi(b,w.shape)),null!=i&&(k=ar(i,"prelu weights","fused matMul"));const _=(t,e)=>{const[i,o,l,u]=e,c=Zo(Za(t,l.shape),l,a);let h,p;return n||s?!n&&s?(h=al(c,o,!1,!1),p=al(c,i,!0,!1)):n&&!s?(h=al(o,c,!1,!0),p=al(i,c,!1,!1)):(h=al(o,c,!0,!0),p=al(c,i,!0,!0)):(h=al(c,o,!1,!0),p=al(i,c,!0,!1)),null!=r?[h,p,Jo(u,c)]:[h,p]},I={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};return null==r?Aa(((t,e,n)=>{const s=Zs.runKernel(rs,I,N);return n([t,e,s]),{value:Za(s,b),gradFunc:_}}))(x,v):Aa(((t,e,n,s)=>{const r=Zs.runKernel(rs,I,N);return s([t,e,r,n]),{value:Za(r,b),gradFunc:_}}))(x,v,w)}});function ol(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+s-1);r[a]=e-n*Math.cos(i)}return Do(r,"float32")}or({hammingWindow_:function(t){return ol(t,.54,.46)}});const ll=or({hannWindow_:function(t){return ol(t,.5,.5)}}),ul=or({frame_:function(t,e,n,s=!1,r=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(wo(t,a,e)),a+=n;if(s)for(;a<t.size;){const s=a+e-t.size,o=ai([wo(t,a,e-s),Ti([s],r)]);i.push(o),a+=n}return 0===i.length?Oo([],[0,e]):Za(ai(i),[i.length,e])}});or({stft_:function(t,e,n,s,r=ll){var a;null==s&&(a=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=ul(t,e,n),o=Fi(i,r(e)),l=[];for(let t=0;t<i.shape[0];t++)l.push(jo(wo(o,[t,0],[1,e]),s));return ai(l)}});const cl=or({cropAndResize_:function(t,e,n,s,r="bilinear",a=0){const i=ar(t,"image","cropAndResize"),o=ar(e,"boxes","cropAndResize","float32"),l=ar(n,"boxInd","cropAndResize","int32"),u=o.shape[0];S(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),S(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),S(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),S(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),S(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),S("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return Zs.runKernel(Kt,c,h)}}),hl=or({flipLeftRight_:function(t){const e=ar(t,"image","flipLeftRight","float32");S(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Zs.runKernel(me,n,{})}}),pl=or({rotateWithOffset_:function(t,e,n=0,s=.5){const r=ar(t,"image","rotateWithOffset","float32");S(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:e,fillValue:n,center:s};return Zs.runKernel(ss,a,i)}});function dl(t,e,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),S(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),S(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),S(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),S(1===e.rank,(()=>"scores must be a 1D tensor")),S(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),S(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const fl=or({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=ar(t,"boxes","nonMaxSuppression"),i=ar(e,"scores","nonMaxSuppression"),o=dl(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Zs.runKernel(nn,{boxes:a,scores:i},l)}});function ml(t,e,n){const s=function(t,e,n){return function(t,e,n){let s=0,r=t.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(e,t[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(t,e,n||gl)}(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function gl(t,e){return t>e?1:t<e?-1:0}function yl(t,e,n,s,r){return vl(t,e,n,s,r,0)}function bl(t,e,n,s,r,a){return vl(t,e,n,s,r,0,!1,a,!0)}function xl(t,e,n,s,r,a){return vl(t,e,n,s,r,a,!0)}function vl(t,e,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>r&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(_l);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=wl(t,a,h[n]);if(i>=s){o=!0;break}if(e.score=e.score*kl(s,c,i),e.score<=r)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),p.push(e.score)):e.score>r&&ml(u,e,_l))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function wl(t,e,n){const s=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function kl(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function _l(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Il=or({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=ar(t,"boxes","nonMaxSuppression"),o=ar(e,"scores","nonMaxSuppression"),l=dl(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Zs.runKernel(rn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Nl=or({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=ar(t,"boxes","nonMaxSuppression"),o=ar(e,"scores","nonMaxSuppression"),l=dl(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Zs.runKernel(sn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Tl=or({resizeBilinear_:function(t,e,n=!1,s=!1){const r=ar(t,"images","resizeBilinear");S(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),S(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),S(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Za(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:e},u=Zs.runKernel(vn,o,l);return i?Za(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Cl=or({resizeNearestNeighbor_:function(t,e,n=!1,s=!1){const r=ar(t,"images","resizeNearestNeighbor");S(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),S(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),S("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),S(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Za(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:e},u=Zs.runKernel(bn,o,l);return i?Za(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Sl=or({transform_:function(t,e,n="nearest",s="constant",r=0,a){const i=ar(t,"image","transform","float32"),o=ar(e,"transforms","transform","float32");S(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),S(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),S(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return Zs.runKernel(Kn,l,u)}}),$l=or({lessEqual_:function(t,e){let n=ar(t,"a","lessEqual"),s=ar(e,"b","lessEqual");[n,s]=Us(n,s),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(Ee,r)}});function Al(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return Zs.runKernel(dn,{},r)}const El=or({bandPart_:function(t,e,n){S(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),S(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=ar(t,"a","bandPart");S(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=Za(Al(0,a,1,"int32"),[-1,1]),l=Al(0,i,1,"int32"),u=Mi(o,l),c=Pi($l(u,Ea(+e,"int32")),Ai(u,Ea(-n,"int32"))),h=ao([a,i],s.dtype);return Za(Eo(Mo(Za(s,[-1,a,i])).map((t=>zo(c,t,h)))),r)}}),Rl=or({pow_:function(t,e){let n=ar(t,"base","pow"),s=ar(e,"exp","pow");[n,s]=Us(n,s);const r={a:n,b:s};return Zs.runKernel(cn,r)}});function Dl(t,e,n=null){if(0===t.rank)return Da(t);if(1!==t.rank&&null===n)return Dl(Za(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Li(Da(t),n);if(e===1/0)return Oi(Da(t),n);if(e===-1/0)return Gi(Da(t),n);if("euclidean"===e||2===e)return $o(Li(Rl(Da(t),Ea(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Oi(Li(Da(t),n[0]),n[1]-1);if(e===1/0)return Oi(Li(Da(t),n[1]),n[0]);if(e===-1/0)return Gi(Li(Da(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return $o(Li(to(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ol=or({norm_:function(t,e="euclidean",n=null,s=!1){const r=Dl(t=ar(t,"x","norm"),e,n);let a=r.shape;if(s){const e=P(n,t.shape);a=Ki(r.shape,e)}return Za(r,a)}}),Fl=or({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,S(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)S(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=So(t,t.shape[0],0).map((t=>Ao(t,[0])));S(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(Zs.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=Fi(Li(Fi(n[s],t)),n[s]);t=Mi(t,e)}return yi(t,Ol(t,"euclidean"))})));return e?Eo(n,0):n}});function Ml(t,e=!1){return Zs.tidy((()=>{S(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=Ni(n),a=Hr(t);const i=Oo([[1]],[1,1]);let o=Hr(i);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=a,l=o,u=r;[o,a,r]=Zs.tidy((()=>{const e=wo(a,[t,t],[n-t,1]),l=Ol(e),u=wo(a,[t,t],[1,1]),c=zo($i(u,0),Oo([[-1]]),Oo([[1]])),h=Mi(u,Fi(c,l)),p=yi(e,h);o=1===p.shape[0]?Hr(i):ai([i,wo(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=no(yi(al(c,h),l)),f=wo(a,[t,0],[n-t,s]),m=Fi(d,o),g=Vo(o);if(0===t)a=Mi(f,al(m,al(g,f)));else{const e=Mi(f,al(m,al(g,f)));a=ai([wo(a,[0,0],[t,s]),e],0)}const y=Vo(m),b=wo(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=Mi(b,al(al(b,o),y));else{const e=Mi(b,al(al(b,o),y));r=ai([wo(r,[0,0],[n,t]),e],1)}return[o,a,r]})),Ta([e,l,u])}return!e&&n>s&&(r=wo(r,[0,0],[n,s]),a=wo(a,[0,0],[s,s])),[r,a]}))}const Ll=or({qr_:function(t,e=!1){if(S(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Ml(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=Mo(Za(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],a=[];return s.forEach((t=>{const[n,s]=Ml(t,e);r.push(n),a.push(s)})),[Za(Eo(r,0),t.shape),Za(Eo(a,0),t.shape)]}}});var zl;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(zl||(zl={}));const Pl=or({computeWeightedLoss_:function(t,e,n=zl.SUM_BY_NONZERO_WEIGHTS){const s=ar(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=ar(e,"weights","computeWeightedLoss"));const a=null==r?s:Fi(s,r);if(n===zl.NONE)return a;if(n===zl.SUM)return Li(a);if(n===zl.MEAN){if(null==r)return Ui(a);{const t=s.size/r.size,e=yi(Li(a),Li(r));return t>1?yi(e,Ea(t)):e}}if(n===zl.SUM_BY_NONZERO_WEIGHTS){if(null==r)return yi(Li(a),Ea(s.size));{const t=Fi(r,io(s.shape)),e=jr(Li(so(t,Ea(0))),"float32");return yi(Li(a),e)}}throw Error(`Unknown reduction: ${n}`)}});or({absoluteDifference_:function(t,e,n,s=zl.SUM_BY_NONZERO_WEIGHTS){const r=ar(t,"labels","absoluteDifference"),a=ar(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=ar(n,"weights","absoluteDifference")),$(r.shape,a.shape,"Error in absoluteDifference: ");const o=Da(Mi(r,a));return Pl(o,i,s)}}),or({cosineDistance_:function(t,e,n,s,r=zl.SUM_BY_NONZERO_WEIGHTS){const a=ar(t,"labels","cosineDistance"),i=ar(e,"predictions","cosineDistance");let o=null;null!=s&&(o=ar(s,"weights","cosineDistance")),$(a.shape,i.shape,"Error in cosineDistance: ");const l=Ea(1),u=Mi(l,Li(Fi(a,i),n,!0));return Pl(u,o,r)}}),or({hingeLoss_:function(t,e,n,s=zl.SUM_BY_NONZERO_WEIGHTS){let r=ar(t,"labels","hingeLoss");const a=ar(e,"predictions","hingeLoss");let i=null;null!=n&&(i=ar(n,"weights","hingeLoss")),$(r.shape,a.shape,"Error in hingeLoss: ");const o=Ea(1);r=Mi(Fi(Ea(2),r),o);const l=go(Mi(o,Fi(r,a)));return Pl(l,i,s)}}),or({huberLoss_:function(t,e,n,s=1,r=zl.SUM_BY_NONZERO_WEIGHTS){const a=ar(t,"labels","huberLoss"),i=ar(e,"predictions","huberLoss");let o=null;null!=n&&(o=ar(n,"weights","huberLoss")),$(a.shape,i.shape,"Error in huberLoss: ");const l=Ea(s),u=Da(Mi(i,a)),c=ji(u,l),h=Mi(u,c),p=Oa(Fi(Ea(.5),to(c)),Fi(l,h));return Pl(p,o,r)}}),or({logLoss_:function(t,e,n,s=1e-7,r=zl.SUM_BY_NONZERO_WEIGHTS){const a=ar(t,"labels","logLoss"),i=ar(e,"predictions","logLoss");let o=null;null!=n&&(o=ar(n,"weights","logLoss")),$(a.shape,i.shape,"Error in logLoss: ");const l=Ea(1),u=Ea(s),c=no(Fi(a,Ri(Oa(i,u)))),h=Fi(Mi(l,a),Ri(Oa(Mi(l,i),u))),p=Mi(c,h);return Pl(p,o,r)}});const Vl=or({squaredDifference_:function(t,e){let n=ar(t,"a","squaredDifference"),s=ar(e,"b","squaredDifference");[n,s]=Us(n,s),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(Vn,r,{})}});or({meanSquaredError_:function(t,e,n,s=zl.SUM_BY_NONZERO_WEIGHTS){const r=ar(t,"labels","meanSquaredError"),a=ar(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=ar(n,"weights","meanSquaredError")),$(r.shape,a.shape,"Error in meanSquaredError: ");const o=Vl(r,a);return Pl(o,i,s)}});const Bl=or({log1p_:function(t){const e={x:ar(t,"x","log1p")};return Zs.runKernel(Oe,e)}});or({sigmoidCrossEntropy_:function(t,e,n,s=0,r=zl.SUM_BY_NONZERO_WEIGHTS){let a=ar(t,"multiClassLabels","sigmoidCrossEntropy");const i=ar(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ar(n,"weights","sigmoidCrossEntropy")),$(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=Ea(s),e=Ea(1),n=Ea(.5);a=Oa(Fi(a,Mi(e,t)),Fi(n,t))}const l=function(t,e){const n=ar(t,"labels","sigmoidCrossEntropyWithLogits"),s=ar(e,"logits","sigmoidCrossEntropyWithLogits");$(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=go(s),a=Fi(s,n),i=Bl(Di(no(Da(s))));return Oa(Mi(r,a),i)}(a,i);return Pl(l,o,r)}});const Wl=or({logSumExp_:function(t,e=null,n=!1){const s=ar(t,"x","logSumExp"),r=P(e,s.shape),a=Oi(s,r,!0),i=Mi(s,a),o=Di(i),l=Li(o,r),u=Ri(l),c=Oa(Za(a,u.shape),u);if(n){const t=Ki(c.shape,r);return Za(c,t)}return c}});or({softmaxCrossEntropy_:function(t,e,n,s=0,r=zl.SUM_BY_NONZERO_WEIGHTS){let a=ar(t,"onehotLabels","softmaxCrossEntropy");const i=ar(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ar(n,"weights","softmaxCrossEntropy")),$(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const t=Ea(s),e=Ea(1),n=Ea(a.shape[1]);a=Oa(Fi(a,Mi(e,t)),yi(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Aa(((t,e,s)=>{const r=Wl(e,[n],!0),a=Mi(jr(e,"float32"),r);s([t,a]);const i=no(Fi(a,t));return{value:Li(i,[n]),gradFunc:(t,e)=>{const[s,r]=e,a=Ki(t.shape,[n]);return[Fi(Za(t,a),Mi(jr(s,"float32"),Di(r))),Fi(Za(t,a),Mi(Di(r),jr(s,"float32")))]}}}))(t,e)}(a,i);return Pl(l,o,r)}});const Ul={flipLeftRight:hl,resizeNearestNeighbor:Cl,resizeBilinear:Tl,rotateWithOffset:pl,cropAndResize:cl,nonMaxSuppression:fl,nonMaxSuppressionAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=ar(t,"boxes","nonMaxSuppressionAsync"),i=ar(e,"scores","nonMaxSuppressionAsync"),o=dl(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=yl(u,c,n,s,r);return a!==t&&a.dispose(),i!==e&&i.dispose(),Do(h,"int32")},nonMaxSuppressionWithScore:Il,nonMaxSuppressionWithScoreAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=ar(t,"boxes","nonMaxSuppressionAsync"),o=ar(e,"scores","nonMaxSuppressionAsync"),l=dl(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=xl(c,h,n,s,r,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Do(p,"int32"),selectedScores:Do(d)}},nonMaxSuppressionPadded:Nl,nonMaxSuppressionPaddedAsync:async function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=ar(t,"boxes","nonMaxSuppressionAsync"),o=ar(e,"scores","nonMaxSuppressionAsync"),l=dl(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=bl(p,d,u,c,h,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Do(f,"int32"),validOutputs:Ea(m,"int32")}},transform:Sl},Gl={bandPart:El,gramSchmidt:Fl,qr:Ll};class jl extends Ra{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Zs.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Zs.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Na((()=>Po(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Na((()=>Po(s).variable(!1)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Na((()=>{const t=Oa(Fi(a,this.rho),Fi(to(r),1-this.rho)),e=Fi(yi($o(Oa(i,this.epsilon)),$o(Oa(a,this.epsilon))),r),n=Oa(Fi(i,this.rho),Fi(to(e),1-this.rho));a.assign(t),i.assign(n);const o=Oa(Fi(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ta(this.accumulatedGrads.map((t=>t.variable))),Ta(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}jl.className="Adadelta",ka(jl);class Hl extends Ra{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Zs.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Na((()=>Ti(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=this.accumulatedGrads[n].variable;Na((()=>{const t=Oa(a,to(r));a.assign(t);const e=Oa(Fi(yi(r,$o(Oa(t,Zs.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ta(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Hl.className="Adagrad",ka(Hl);class ql extends Ra{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Na((()=>{this.accBeta1=Ea(e).variable(),this.accBeta2=Ea(n).variable()})),null==s&&(this.epsilon=Zs.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Na((()=>{const n=Mi(1,this.accBeta1),s=Mi(1,this.accBeta2);e.forEach(((e,r)=>{const a=Zs.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Na((()=>Po(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${e}/v`,variable:Na((()=>Po(a).variable(!1)))});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Oa(Fi(o,this.beta1),Fi(i,1-this.beta1)),c=Oa(Fi(l,this.beta2),Fi(to(i),1-this.beta2)),h=yi(u,n),p=yi(c,s);o.assign(u),l.assign(c);const d=Oa(Fi(yi(h,Oa($o(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Fi(this.accBeta1,this.beta1)),this.accBeta2.assign(Fi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ta(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Ta(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Na((()=>{this.accBeta1.assign(Rl(this.beta1,this.iterations_+1)),this.accBeta2.assign(Rl(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}ql.className="Adam",ka(ql);class Xl extends Ra{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Na((()=>{this.iteration=Ea(0).variable(),this.accBeta1=Ea(e).variable()})),null==s&&(this.epsilon=Zs.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Na((()=>{const n=Mi(1,this.accBeta1),s=yi(-this.learningRate,Oa(Fi(this.iteration,this.decay),1));e.forEach(((e,r)=>{const a=Zs.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Po(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${e}/v`,variable:Po(a).variable(!1)});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Oa(Fi(o,this.beta1),Fi(i,1-this.beta1)),c=Fi(l,this.beta2),h=Da(i),p=Wi(c,h);o.assign(u),l.assign(p);const d=Oa(Fi(yi(s,n),yi(u,Oa(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(Oa(this.iteration,1)),this.accBeta1.assign(Fi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ta(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Ta(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Xl.className="Adamax",ka(Xl);class Kl extends Ra{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=Zs.registeredVariables[e];Na((()=>{const t=Oa(Fi(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Ca(Ea(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Kl.className="SGD",ka(Kl);class Yl extends Kl{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Ea(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Zs.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Na((()=>Po(s).variable(t)))}}const r=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&Na((()=>{let t;const e=Oa(Fi(this.m,r),a);t=this.useNesterov?Oa(Fi(this.c,Oa(a,Fi(e,this.m))),s):Oa(Fi(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ta(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Yl.className="Momentum",ka(Yl);class Zl extends Ra{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Zs.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Zs.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Na((()=>Po(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Na((()=>Po(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Na((()=>Po(s).variable(r)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Na((()=>{const t=Oa(Fi(i,this.decay),Fi(to(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=Oa(Fi(e,this.decay),Fi(a,1-this.decay)),l=yi(Fi(a,this.learningRate),$o(Mi(t,Oa(to(r),this.epsilon)))),u=Oa(Fi(o,this.momentum),l);i.assign(t),e.assign(r),o.assign(u);const c=Mi(s,u);s.assign(c)}else{const t=Oa(Fi(i,this.decay),Fi(to(a),1-this.decay)),e=Oa(Fi(o,this.momentum),yi(Fi(a,this.learningRate),$o(Oa(t,this.epsilon))));i.assign(t),o.assign(e);const n=Mi(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ta(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ta(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Ta(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Zl.className="RMSProp",ka(Zl);class Jl{static sgd(t){return new Kl(t)}static momentum(t,e,n=!1){return new Yl(t,e,n)}static rmsprop(t,e=.9,n=0,s=null,r=!1){return new Zl(t,e,n,s,r)}static adam(t=.001,e=.9,n=.999,s=null){return new ql(t,e,n,s)}static adadelta(t=.001,e=.95,n=null){return new jl(t,e,n)}static adamax(t=.002,e=.9,n=.999,s=null,r=0){return new Xl(t,e,n,s,r)}static adagrad(t,e=.1){return new Hl(t,e)}}const Ql={sgd:Jl.sgd,momentum:Jl.momentum,adadelta:Jl.adadelta,adagrad:Jl.adagrad,rmsprop:Jl.rmsprop,adamax:Jl.adamax,adam:Jl.adam},tu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function eu(){return new Promise((t=>tu((()=>t()))))}function nu(t,e){const n=t[0].length;t.forEach(((t,e)=>{S(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),S(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=t[0];t.forEach(((t,r)=>{for(let a=0;a<n;a++)S(a===e||t[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function su(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}const ru=30;function au(t){return t<=ru?t:Y(t,Math.floor(Math.sqrt(t)))}function iu(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function ou(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)r=r.concat([t[s+1]/e[s],e[s]]);r=r.concat(t.slice(n+1))}return r}function lu(t,e,n=!0){const s=[];if(n){s.push(e);for(let n=e+1;n<t;++n)n<=2*e?(s.push(n),s.push(n-(e+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<t;++s)s>=2*e+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function uu(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?s?r.push(e[n-1]*t[n]):r.push(t[n]/e[n-1]):r.push(t[n]);return r}function cu(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function hu(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}function pu(t,e){const n=t.shape.length,s=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${n}`);if(0===R(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const r=e.shape,a=r[r.length-1];let i=1;for(let t=0;t<r.length-1;++t)i*=r[t];const o=t.shape,l=r.slice();l.pop();let u=1;for(let t=a;t<n;++t)u*=o[t],l.push(o[t]);const c=[...Z(t.shape).map((t=>t/u)),1].slice(0,a);return[l,i,u,c]}function du(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(a+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(a+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}function fu(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}du(n,e,t)}function mu(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,a=n.length;let i=1;for(let t=r;t<a;++t)i*=n[t];const o=r<1?1:r;return{sliceRank:r,numUpdates:R(e.shape)/o,sliceSize:i,strides:[...Z(n.slice(0,r)),1],outputSize:R(n)}}const gu=1.7580993408473768,yu=1.0507009873554805,bu=.3275911,xu=.254829592,vu=-.284496736,wu=1.421413741,ku=-1.453152027,_u=1.061405429;function Iu(...t){lt().getBool("IS_TEST")||console.warn(...t)}function Nu(...t){lt().getBool("IS_TEST")||console.log(...t)}function Tu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function Cu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function Su(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function $u(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Au(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Eu(t,e,n,s){t[2*s]=e,t[2*s+1]=n}function Ru(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const a=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function Du(t,e,n){const s=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(s),imag:Math.sin(s)}}function Ou(t,e,n=0){let s=[];if("number"==typeof e)S(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(e).fill(t.shape[n]/e);else{S(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const r=e.indexOf(-1);if(-1!==r){const s=e.reduce(((t,e)=>e>0?t+e:t));e[r]=t.shape[n]-s}S(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=e}return s}function Fu(t,e){let n,s=!1;for(t<=ru?(n=t,s=!0):n=Y(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=Y(t,n+1);return n}function Mu(t,e,n){const s=[],r=t.length;for(let a=0;a<r;a++)a!==e?s.push(t[a]):s.push(n);return s}function Lu(t,e,n,s){const r=e.shape.length,a=t.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const i=t.shape[n],o=[];let l=1,u=1,c=1;for(let e=0;e<s;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=s;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=s;t<r;t++)o.push(e.shape[t]);for(let e=n+1;e<a;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function zu(t){try{return t.map((t=>xs(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Pu(t){return t.map((t=>bs(t)))}function Vu(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=Gr(t,"int32"),r=Gr([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=s.indexToLoc(n[e]),i=e*t.length;r.values.set(a,i)}return r.toTensor()}const Bu={kernelName:dt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(t,Yo(jr(n,"float32"),-1))}}},Wu={kernelName:ft,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=to(jr(n,"float32")),s=$o(Mi(Ea(1),e));return no(yi(t,s))}}}},Uu={kernelName:mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=$o(Mi(to(jr(n,"float32")),1));return yi(t,e)}}}},Gu={kernelName:gt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=wi(n.shape,s.shape);return{a:()=>{let e=t;const s=vi(n.shape,r);return s.length>0&&(e=Li(e,s)),Za(e,n.shape)},b:()=>{let e=t;const n=vi(s.shape,r);return n.length>0&&(e=Li(e,n)),Za(e,s.shape)}}}},ju={kernelName:yt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}},Hu={kernelName:vt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Po(n)}}},qu={kernelName:wt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Po(n)}}},Xu={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,$o(Mi(Ea(1),to(jr(n,"float32")))))}}},Ku={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=$o(Oa(Ea(1),to(jr(n,"float32"))));return yi(t,e)}}}},Yu={kernelName:Tt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=wi(n.shape,s.shape);return{a:()=>{const e=Oa(to(n),to(s));let a=Fi(t,yi(s,e));const i=vi(n.shape,r);return i.length>0&&(a=Li(a,i)),Za(a,n.shape)},b:()=>{const e=Oa(to(n),to(s));let a=no(Fi(t,yi(n,e)));const i=vi(s.shape,r);return i.length>0&&(a=Li(a,i)),Za(a,s.shape)}}}},Zu={kernelName:It,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,Oa(to(jr(n,"float32")),1))}}},Ju={kernelName:Nt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,Mi(Ea(1),to(jr(n,"float32"))))}}},Qu=or({avgPool3dGrad_:function(t,e,n,s,r,a){const i=ar(t,"dy","avgPool3dGrad"),o=ar(e,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Za(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Za(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),S(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),S(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&S(O(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},d=Zs.runKernel(At,h,p);return c?Za(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),tc={kernelName:$t,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Qu(t,s,r,a,i,o)}}},ec=or({avgPoolGrad_:function(t,e,n,s,r){const a=ar(t,"dy","avgPoolGrad"),i=ar(e,"input","avgPoolGrad");S(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Za(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Za(a,[1,a.shape[0],a.shape[1],a.shape[2]])),S(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),S(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=Zs.runKernel(St,c,h);return u?Za(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),nc={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:a,pad:i}=n;return{x:()=>ec(t,s,r,a,i)}}},sc={kernelName:Et,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>al(t,r,!1,!1),b:()=>al(t,s,!0,!1)}:a&&!i?{a:()=>al(r,t,!1,!0),b:()=>al(s,t,!1,!1)}:{a:()=>al(r,t,!0,!0),b:()=>al(t,s,!0,!0)}:{a:()=>al(t,r,!1,!0),b:()=>al(s,t,!0,!1)}}},rc=or({spaceToBatchND_:function(t,e,n){const s=ar(t,"x","spaceToBatchND");S(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),S(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),S(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},a={blockShape:e,paddings:n};return Zs.runKernel(Ln,r,a)}}),ac={kernelName:Rt,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>rc(t,s,r)}}},ic={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let t=r.length-1;t>=0;t--)if(r[t]===a[t])i[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>Li(t,o,!0)}}},oc={kernelName:Ot,gradFunc:t=>({x:()=>t.clone()})},lc={kernelName:Ft,gradFunc:t=>({x:()=>Po(t)})},uc={kernelName:Mt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>zo(Pi(Ai(s,r),$l(s,a)),t,Po(t))}}},cc={kernelName:zt,inputsToSave:["x"],gradFunc:Bu.gradFunc},hc={kernelName:Pt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,a=P(r,e[0].shape)[0],i=s.map((t=>t[a]));return So(t,i,a).map((t=>()=>t))}},pc={kernelName:Vt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return S(Xa(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>pi(s.shape,t,r,i,o,l),filter:()=>Xo(s,t,r.shape,i,o,l)}}},dc={kernelName:Wt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ci(t,r,a,i,o,1,l),filter:()=>Xo(t,s,r.shape,a,i,o,l)}}},fc=or({conv3DBackpropFilter_:function(t,e,n,s,r){let a=t;4===t.rank&&(a=Za(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Za(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),S(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),S(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),S(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),S(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),S(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return Zs.runKernel(Gt,o,l)}}),mc=or({conv3DBackpropInput_:function(t,e,n,s,r){S(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=Za(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],u=i.shape[4];S(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),S(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),S(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),S(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),S(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},p=Zs.runKernel(jt,c,h);return o?Za(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),gc={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:a}=n;S(Xa(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=e;return{x:()=>mc(i.shape,t,o,r,a),filter:()=>fc(i,t,o.shape,r,a)}}},yc=or({sin_:function(t){const e={x:ar(t,"x","sin")};return Zs.runKernel(An,e)}}),bc={kernelName:Ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(no(yc(jr(n,"float32"))),t)}}},xc=or({sinh_:function(t){const e={x:ar(t,"x","sinh")};return Zs.runKernel(En,e)}}),vc={kernelName:qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(xc(jr(n,"float32")),t)}}},wc=or({cumsum_:function(t,e=0,n=!1,s=!1){const r={x:ar(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:s};return Zs.runKernel(Xt,r,a)}}),kc={kernelName:Xt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const e=Zi([r],s.rank);let n=wc(t,r,a,!i);return null!=e&&(n=Vo(n,e)),n}}}},_c={kernelName:Jt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;S(Xa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return S(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),S(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),S(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),S(Ka(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&S(O(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>sl(l.shape,t,u,r,a,s,i),filter:()=>nl(l,t,u.shape,r,a,s,i)}}},Ic={kernelName:ne,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,a={x:s,filter:r,dy:t},i={x:s,filter:r,dy:t};return{x:()=>Zs.runKernel(se,a,n),filter:()=>Zs.runKernel(re,i,n)}}},Nc={kernelName:ie,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s={dy:t,y:n};return{x:()=>Zs.runKernel(oe,s)}}},Tc={kernelName:le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Fi(Di(no(to(n))),2/Math.sqrt(Math.PI));return{x:()=>Fi(t,s)}}},Cc={kernelName:ce,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(t,n)}}},Sc={kernelName:he,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Za(t,n.shape)}}},$c={kernelName:pe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(t,Di(n))}}},Ac={kernelName:ge,gradFunc:t=>({x:()=>Po(t)})},Ec={kernelName:ye,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=wi(n.shape,s.shape);return{a:()=>{const e=yi(t,jr(s,"float32")),a=vi(n.shape,r);return a.length>0?Za(Li(e,a),n.shape):e},b:()=>{let e=Fi(t,jr(n,"float32"));const a=vi(s.shape,r);a.length>0&&(e=Za(Li(e,a),s.shape));const i=to(s);return no(yi(e,jr(i,"float32")))}}}},Rc=or({rsqrt_:function(t){const e={x:ar(t,"x","rsqrt")};return Zs.runKernel(Nn,e)}}),Dc={kernelName:be,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=e,l=null==o?Ea(1):o,u=vi(a.shape,r.shape),c=[];if(1===a.rank){for(let t=0;t<r.shape.length-1;++t)c.push(r.shape[t]);c.push(1)}const h=Mi(r,a),p=Fi(t,l),d=Rc(Oa(i,Ea(s))),f=Fi(Fi(Fi(d,d),d),Ea(-.5));return{x:()=>1===a.rank?Za(Fi(Fi(t,Ii(Za(d,[1,1,1,a.shape[0]]),c)),l),r.shape):Za(Fi(Fi(t,d),l),r.shape),mean:()=>{let t=Fi(Fi(d,Ea(-1)),p);return 1===a.rank&&(t=Li(t,u)),Za(t,a.shape)},variance:()=>{let t=Fi(Fi(f,h),p);return 1===a.rank&&(t=Li(t,u)),Za(t,a.shape)},scale:()=>{const e=Fi(h,d);let n=Fi(t,e);return 1===a.rank&&(n=Li(n,u)),Za(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=Li(e,u)),Za(e,a.shape)}}}},Oc=or({unsortedSegmentSum_:function(t,e,n){const s=ar(t,"x","unsortedSegmentSum"),r=ar(e,"segmentIds","unsortedSegmentSum","int32");S(O(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return Zs.runKernel(Qn,a,i)}}),Fc={kernelName:xe,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:a}=n,i=P(a,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,i),l=o.length,u=e.slice(a,e.length).slice(1),c=u.length,h=Mc(0,l),p=Mc(l+1,l+1+c),d=Lc([o,[n],u]),f=Za(t,d),m=Za(r,[n]),g=Lc([[l],h,p]),y=Vo(f,g);let b=Oc(y,m,s.shape[i]);const x=Ji(g);return b=Vo(b,x),b},indices:()=>r}}};function Mc(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function Lc(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const zc={kernelName:ke,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Po(n),b:()=>Po(s)}}},Pc={kernelName:_e,gradFunc:t=>({x:()=>jr(t,"float32")})},Vc={kernelName:Te,gradFunc:t=>({x:()=>Po(t)})},Bc={kernelName:Ce,gradFunc:t=>({x:()=>Po(t)})},Wc={kernelName:Se,gradFunc:t=>({x:()=>Po(t)})},Uc={kernelName:$e,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{alpha:r}=n,a=$i(s,0);return{x:()=>zo(a,t,Fi(t,r))}}},Gc={kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,Oa(n,1))}}},jc={kernelName:De,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,jr(n,"float32"))}}},Hc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=Di(s);return Mi(t,Fi(Li(t,r,!0),e))}}}},qc=or({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,a=1,i=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return Zs.runKernel(Pe,o,l)}}),Xc={kernelName:ze,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>qc(s,r,t,a,i,o,l)}}};function Kc(t,e,n,s){return e.rank<n.rank&&(e=Za(e,Ki(e.shape,s))),t.rank<n.rank&&(t=Za(t,Ki(t.shape,s))),{x:()=>Fi(t,jr(ki(n,e),t.dtype))}}const Yc={kernelName:Ve,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,a=e[0],i=Kc(t,e[1],a,P(r,a.shape));return{x:()=>i.x()}}},Zc=or({less_:function(t,e){let n=ar(t,"a","less"),s=ar(e,"b","less");[n,s]=Us(n,s),wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(Ae,r)}}),Jc={kernelName:Be,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Fi(t,jr(Ai(n,s),"float32")),b:()=>Fi(t,jr(Zc(n,s),"float32"))}}},Qc=or({maxPool3dGrad_:function(t,e,n,s,r,a,i){const o=ar(t,"dy","maxPool3dGrad"),l=ar(e,"input","maxPool3dGrad"),u=ar(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=Za(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Za(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Za(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),S(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),S(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),S(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=i&&S(O(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=Zs.runKernel(je,f,m);return d?Za(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),th={kernelName:Ge,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Qc(t,s,r,a,i,o,l)}}},eh=or({maxPoolGrad_:function(t,e,n,s,r,a,i){const o=ar(t,"dy","maxPoolGrad"),l=ar(e,"input","maxPoolGrad"),u=ar(n,"output","maxPoolGrad");S(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),S(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),S(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&S(O(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return Zs.runKernel(Ue,c,h)}}),nh={kernelName:We,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>eh(t,s,r,a,i,o)}}},sh={kernelName:qe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n,a=P(r,s.shape),i=R(Xi(s.shape,a)[1]);return{x:()=>{const e=s.shape.slice();a.forEach((t=>{e[t]=1}));const n=Za(t,e);return yi(Fi(n,io(s.shape,"float32")),i)}}}},rh={kernelName:Xe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[a,i]=e,o=Kc(t,i,a,P(r,a.shape));return{x:()=>o.x()}}},ah={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Fi(t,jr($l(n,s),"float32")),b:()=>Fi(t,jr($i(n,s),"float32"))}}},ih={kernelName:Ye,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,a=r.map((t=>t[0]));return{x:()=>wo(t,a,s.shape)}}},oh={kernelName:Ze,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=wi(n.shape,s.shape);return{a:()=>{const e=vi(n.shape,r);return e.length>0?Za(Li(t,e),n.shape):t},b:()=>{const e=Fi(t,no(Ci(yi(n,s)))),a=vi(s.shape,r);return a.length>0?Za(Li(e,a),s.shape):e}}}},lh={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=wi(n.shape,s.shape);return{a:()=>{const e=Fi(t,jr(s,"float32")),a=vi(n.shape,r);return a.length>0?Za(Li(e,a),n.shape):e},b:()=>{const e=Fi(t,jr(n,"float32")),a=vi(s.shape,r);return a.length>0?Za(Li(e,a),s.shape):e}}}},uh={kernelName:tn,gradFunc:t=>({x:()=>no(t)})},ch={kernelName:on,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>ao(n.shape,"float32")}}},hh={kernelName:an,gradFunc:t=>({x:()=>Po(t)})},ph={kernelName:ln,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:s}=n;return Mo(t,s).map((t=>()=>t))}},dh={kernelName:un,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,a=r.map((t=>t[0]));return{x:()=>wo(t,a,s.shape)}}},fh={kernelName:cn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,a=n,i=s,o=wi(a.shape,i.shape);return{a:()=>{const e=jr(i,"float32");let n=Fi(t,Fi(e,Rl(a,Mi(e,Ea(1)))));const s=vi(a.shape,o);return s.length>0&&(n=Li(n,s)),Za(n,a.shape)},b:()=>{const e=$i(a,0),n=zo(e,Ri(a),Po(a));let s=Fi(t,Fi(r,n));const l=vi(i.shape,o);return l.length>0&&(s=Li(s,l)),Za(s,i.shape)}}}},mh={kernelName:hn,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=$i(n,0);return{x:()=>zo(r,t,Fi(t,s)),alpha:()=>{let e=zo(r,Po(t),Fi(t,n));const a=vi(s.shape,t.shape);return a.length>0&&(e=Li(e,a)),Za(e,s.shape)}}}},gh={kernelName:ae,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=wi(n.shape,s.shape);return{a:()=>{const e=yi(t,jr(s,"float32")),a=vi(n.shape,r);return a.length>0?Za(Li(e,a),n.shape):e},b:()=>{let e=Fi(t,jr(n,"float32"));const a=vi(s.shape,r);a.length>0&&(e=Za(Li(e,a),s.shape));const i=to(s);return no(yi(e,jr(i,"float32")))}}}},yh={kernelName:mn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,no(to(n)))}}},bh={kernelName:kn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=Fi($l(n,6),Yo(n));return{x:()=>Fi(t,jr(s,"float32"))}}},xh={kernelName:gn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(t,jr(Yo(n),"float32"))}}},vh={kernelName:yn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Za(t,n.shape)}}},wh={kernelName:vn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>Zs.runKernel(wn,r,n)}}},kh={kernelName:bn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r={dy:t,images:s};return{images:()=>Zs.runKernel(xn,r,n)}}},_h={kernelName:_n,gradFunc:(t,e,n)=>{const{dims:s}=n,r=P(s,t.shape);return{x:()=>yo(t,r)}}},Ih={kernelName:In,gradFunc:t=>({x:()=>Po(t)})},Nh={kernelName:Nn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>no(yi(t,Fi(Rl(n,1.5),2)))}}},Th=or({logicalNot_:function(t){const e={x:ar(t,"x","logicalNot","bool")};return Zs.runKernel(Me,e)}}),Ch={kernelName:Cn,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>jr(Po(n),"float32"),t:()=>Fi(t,jr(n,t.dtype)),e:()=>Fi(t,jr(Th(n),t.dtype))}}},Sh={kernelName:Sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=$i(n,Ea(0)),s=Ea(gu),r=Ea(yu),a=Fi(t,r),i=Fi(Fi(t,s),Di(jr(n,"float32")));return zo(e,a,i)}}}},$h={kernelName:Dn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(t,Fi(n,Mi(Ea(1),n)))}}},Ah={kernelName:Rn,gradFunc:t=>({x:()=>Po(t)})},Eh=or({cos_:function(t){const e={x:ar(t,"x","cos")};return Zs.runKernel(Ht,e)}}),Rh={kernelName:An,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(Eh(jr(n,"float32")),t)}}},Dh=or({cosh_:function(t){const e={x:ar(t,"x","cosh")};return Zs.runKernel(qt,e)}}),Oh={kernelName:En,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(Dh(jr(n,"float32")),t)}}},Fh={kernelName:$n,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:a}=n,i=s.shape,[o,l]=ba(s,r,a),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],i[e]-o[e]-l[e]]);return{x:()=>lo(t,u)}}},Mh={kernelName:Pn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,a=Fi(t,s);return{logits:()=>Mi(a,Fi(Li(a,[r],!0),s))}}},Lh={kernelName:On,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(t,vo(n))}}},zh=or({batchToSpaceND_:function(t,e,n){const s=ar(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));S(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),S(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),S(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const a={x:s},i={blockShape:e,crops:n};return Zs.runKernel(Rt,a,i)}}),Ph={kernelName:Ln,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>zh(t,s,r)}}},Vh={kernelName:zn,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>ai(t,s)}}},Bh=[Bu,Wu,Uu,Gu,ju,Hu,qu,Xu,Ku,Yu,Zu,Ju,tc,nc,sc,ac,ic,oc,lc,uc,cc,hc,dc,pc,gc,bc,vc,kc,_c,Ic,gh,Nc,Tc,Cc,Sc,$c,Ec,Ac,Dc,Fc,zc,Pc,Vc,Bc,Wc,Uc,Gc,jc,Hc,Xc,Yc,Yc,Jc,th,nh,sh,rh,ah,ih,oh,lh,uh,ch,hh,ph,dh,dh,fh,mh,yh,bh,xh,vh,wh,kh,_h,Ih,Nh,Ch,Sh,$h,Ah,Rh,Oh,Fh,Mh,Lh,Ph,Ph,Vh,Vh,{kernelName:Fn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,Fi($o(jr(n,"float32")),2))}}},{kernelName:Vn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ea(2);return{a:()=>Fi(t,Fi(r,Mi(n,s))),b:()=>Fi(t,Fi(r,Mi(s,n)))}}},{kernelName:Bn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(t,Fi(jr(n,"float32"),2))}}},{kernelName:es,gradFunc:t=>({x:()=>Po(t)})},{kernelName:Wn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=wi(n.shape,s.shape);return{a:()=>{let e=t;const s=vi(n.shape,r);return s.length>0&&(e=Li(e,s)),Za(e,n.shape)},b:()=>{let e=t;const n=vi(s.shape,r);return n.length>0&&(e=Li(e,n)),Za(no(e),s.shape)}}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:a}=n;P(a,s.shape).forEach((t=>{r[t]=1}));const i=Za(t,r),o=Fi(i,io(s.shape,"float32"));return{x:()=>o}}},{kernelName:jn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(t,to(Eh(n)))}}},{kernelName:Hn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(Mi(Ea(1),to(n)),t)}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=Po(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=Oa(e,wo(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)e=Oa(e,wo(t,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)e=Oa(e,wo(t,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)e=Oa(e,wo(t,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:Yn,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,a=Ji(r);return{x:()=>Vo(t,a)}}},{kernelName:Jn,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>Eo(t,r)}}},{kernelName:Qn,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Wi(e,Po(e)),s=Si(t,n);let r=Ai(e,Ea(0,"int32"));const a=s.rank-r.rank;for(let t=0;t<a;++t)r=_i(r,t+1);r=Pi(r,io(s.shape,"bool"));const i=Po(s);return zo(r,s,i)}(t,n)}}},{kernelName:ts,gradFunc:t=>({x:()=>Po(t)})}];for(const t of Bh)ds(t);Ds().prototype.abs=function(){return this.throwIfDisposed(),Da(this)};const Wh=or({acos_:function(t){const e={x:ar(t,"x","acos")};return Zs.runKernel(ft,e)}});Ds().prototype.acos=function(){return this.throwIfDisposed(),Wh(this)};const Uh=or({acosh_:function(t){const e={x:ar(t,"x","acosh")};return Zs.runKernel(mt,e)}});Ds().prototype.acosh=function(){return this.throwIfDisposed(),Uh(this)},Ds().prototype.add=function(t){return this.throwIfDisposed(),Oa(this,t)},Ds().prototype.all=function(t,e){return this.throwIfDisposed(),Fa(this,t,e)},Ds().prototype.any=function(t,e){return this.throwIfDisposed(),Ma(this,t,e)},Ds().prototype.argMax=function(t){return this.throwIfDisposed(),La(this,t)};const Gh=or({argMin_:function(t,e=0){const n={x:ar(t,"x","argMin")},s={axis:e};return Zs.runKernel(wt,n,s)}});Ds().prototype.argMin=function(t){return this.throwIfDisposed(),Gh(this,t)},Ds().prototype.asScalar=function(){return this.throwIfDisposed(),S(1===this.size,(()=>"The array must have only 1 element.")),Za(this,[])},Ds().prototype.asType=function(t){return this.throwIfDisposed(),jr(this,t)},Ds().prototype.as1D=function(){return this.throwIfDisposed(),Za(this,[this.size])},Ds().prototype.as2D=function(t,e){return this.throwIfDisposed(),Za(this,[t,e])},Ds().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Za(this,[t,e,n])},Ds().prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),Za(this,[t,e,n,s])},Ds().prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),Za(this,[t,e,n,s,r])};const jh=or({asin_:function(t){const e={x:ar(t,"x","asin")};return Zs.runKernel(kt,e)}});Ds().prototype.asin=function(){return this.throwIfDisposed(),jh(this)};const Hh=or({asinh_:function(t){const e={x:ar(t,"x","asinh")};return Zs.runKernel(_t,e)}});Ds().prototype.asinh=function(){return this.throwIfDisposed(),Hh(this)};const qh=or({atan_:function(t){const e={x:ar(t,"x","atan")};return Zs.runKernel(It,e)}});Ds().prototype.atan=function(){return this.throwIfDisposed(),qh(this)};const Xh=or({atan2_:function(t,e){let n=ar(t,"a","atan2"),s=ar(e,"b","atan2");[n,s]=Us(n,s);const r={a:n,b:s};return Zs.runKernel(Tt,r)}});Ds().prototype.atan2=function(t){return this.throwIfDisposed(),Xh(this,t)};const Kh=or({atanh_:function(t){const e={x:ar(t,"x","atanh")};return Zs.runKernel(Nt,e)}});Ds().prototype.atanh=function(){return this.throwIfDisposed(),Kh(this)},Ds().prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),Ja(this,t,e,n,s)},Ds().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),zh(this,t,e)},Ds().prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),ti(this,t,e,n,s,r)},Ds().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Lo(this,t)},Ds().prototype.cast=function(t){return this.throwIfDisposed(),jr(this,t)};const Yh=or({ceil_:function(t){const e={x:ar(t,"x","ceil")};return Zs.runKernel(Ft,e)}});Ds().prototype.ceil=function(){return this.throwIfDisposed(),Yh(this)},Ds().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ri(this,t,e)},Ds().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Rs&&(t=[t]),ai([this,...t],e)},Ds().prototype.conv1d=function(t,e,n,s,r,a){return this.throwIfDisposed(),hi(this,t,e,n,s,r,a)},Ds().prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),di(this,t,e,n,s,r)},Ds().prototype.conv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),ci(this,t,e,n,s,r,a)},Ds().prototype.cos=function(){return this.throwIfDisposed(),Eh(this)},Ds().prototype.cosh=function(){return this.throwIfDisposed(),Dh(this)},Ds().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),wc(this,t,e,n)};const Zh=or({depthToSpace_:function(t,e,n="NHWC"){const s=ar(t,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];S(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),S(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),S(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return Zs.runKernel(Zt,o,l)}});Ds().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Zh(this,t,e)},Ds().prototype.depthwiseConv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),mi(this,t,e,n,s,r,a)};const Jh=or({dilation2d_:function(t,e,n,s,r=[1,1],a="NHWC"){const i=ar(t,"x","dilation2d"),o=ar(e,"filter","dilation2d");S(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),S(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),S("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Za(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},p=Zs.runKernel(ne,c,h);return u?Za(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});Ds().prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),Jh(this,t,e,n,s,r)};const Qh=or({divNoNan_:function(t,e){let n=ar(t,"a","div"),s=ar(e,"b","div");[n,s]=Us(n,s);const r=yi(n,s),a=Po(r),i=ki(s,a);return zo(i,a,r)}});Ds().prototype.divNoNan=function(t){return this.throwIfDisposed(),Qh(this,t)},Ds().prototype.div=function(t){return this.throwIfDisposed(),yi(this,t)};const tp=or({dot_:function(t,e){const n=ar(t,"t1","dot"),s=ar(e,"t2","dot");S(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(S(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const t=Za(n,[1,-1]),e=Za(s,[-1,1]),r=al(t,e);return Za(r,[])}if(1===n.rank&&2===s.rank){const t=Za(n,[1,-1]),e=Za(s,[s.shape[0],s.shape[1]]),r=al(t,e);return Za(r,[r.size])}if(2===n.rank&&1===s.rank){const t=Za(s,[-1,1]),e=al(n,t);return Za(e,[e.size])}{const t=Za(s,[s.shape[0],s.shape[1]]);return al(n,t)}}});Ds().prototype.dot=function(t){return this.throwIfDisposed(),tp(this,t)},Ds().prototype.elu=function(){return this.throwIfDisposed(),bi(this)},Ds().prototype.equal=function(t){return this.throwIfDisposed(),ki(this,t)};const ep=or({erf_:function(t){let e=ar(t,"x","erf");S("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=jr(e,"float32"));const n={x:e};return Zs.runKernel(le,n)}});Ds().prototype.erf=function(){return this.throwIfDisposed(),ep(this)},Ds().prototype.exp=function(){return this.throwIfDisposed(),Di(this)},Ds().prototype.expandDims=function(t){return this.throwIfDisposed(),_i(this,t)};const np=or({expm1_:function(t){const e={x:ar(t,"x","expm1")};return Zs.runKernel(pe,e)}});Ds().prototype.expm1=function(){return this.throwIfDisposed(),np(this)},Ds().prototype.fft=function(){return this.throwIfDisposed(),Go(this)},Ds().prototype.flatten=function(){return this.throwIfDisposed(),Za(this,[this.size])},Ds().prototype.floor=function(){return this.throwIfDisposed(),Ci(this)},Ds().prototype.floorDiv=function(t){return this.throwIfDisposed(),gi(this,t)},Ds().prototype.gather=function(t,e){return this.throwIfDisposed(),Si(this,t,e)},Ds().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ai(this,t)},Ds().prototype.greater=function(t){return this.throwIfDisposed(),$i(this,t)},Ds().prototype.ifft=function(){return this.throwIfDisposed(),Ho(this)},Ds().prototype.irfft=function(){return this.throwIfDisposed(),qo(this)};const sp=or({isFinite_:function(t){const e={x:ar(t,"x","isFinite")};return Zs.runKernel(Te,e)}});Ds().prototype.isFinite=function(){return this.throwIfDisposed(),sp(this)};const rp=or({isInf_:function(t){const e={x:ar(t,"x","isInf")};return Zs.runKernel(Ce,e)}});Ds().prototype.isInf=function(){return this.throwIfDisposed(),rp(this)};const ap=or({isNaN_:function(t){const e={x:ar(t,"x","isNaN")};return Zs.runKernel(Se,e)}});Ds().prototype.isNaN=function(){return this.throwIfDisposed(),ap(this)},Ds().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Ei(this,t)},Ds().prototype.lessEqual=function(t){return this.throwIfDisposed(),$l(this,t)},Ds().prototype.less=function(t){return this.throwIfDisposed(),Zc(this,t)};const ip=or({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const a=ar(t,"x","localResponseNormalization");S(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),S(O(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Za(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:s,beta:r},c=Zs.runKernel(ze,l,u);return o?Za(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Ds().prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),ip(this,t,e,n,s)};const op=or({logSigmoid_:function(t){const e=ar(t,"x","logSigmoid");return Aa((t=>({value:no(Co(no(t))),gradFunc:e=>Fi(e,vo(no(t)))})))(e)}});Ds().prototype.logSigmoid=function(){return this.throwIfDisposed(),op(this)},Ds().prototype.logSoftmax=function(t){return this.throwIfDisposed(),zi(this,t)},Ds().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Wl(this,t,e)},Ds().prototype.log=function(){return this.throwIfDisposed(),Ri(this)},Ds().prototype.log1p=function(){return this.throwIfDisposed(),Bl(this)},Ds().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Pi(this,t)},Ds().prototype.logicalNot=function(){return this.throwIfDisposed(),Th(this)};const lp=or({logicalOr_:function(t,e){const n=ar(t,"a","logicalOr","bool"),s=ar(e,"b","logicalOr","bool");wi(n.shape,s.shape);const r={a:n,b:s};return Zs.runKernel(Le,r)}});Ds().prototype.logicalOr=function(t){return this.throwIfDisposed(),lp(this,t)};const up=or({logicalXor_:function(t,e){const n=ar(t,"a","logicalXor","bool"),s=ar(e,"b","logicalXor","bool");return wi(n.shape,s.shape),Pi(lp(t,e),Th(Pi(t,e)))}});Ds().prototype.logicalXor=function(t){return this.throwIfDisposed(),up(this,t)},Ds().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),al(this,t,e,n)},Ds().prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),Vi(this,t,e,n,s)},Ds().prototype.max=function(t,e){return this.throwIfDisposed(),Oi(this,t,e)},Ds().prototype.maximum=function(t){return this.throwIfDisposed(),Wi(this,t)},Ds().prototype.mean=function(t,e){return this.throwIfDisposed(),Ui(this,t,e)},Ds().prototype.min=function(t,e){return this.throwIfDisposed(),Gi(this,t,e)},Ds().prototype.minimum=function(t){return this.throwIfDisposed(),ji(this,t)};const cp=or({mirrorPad_:function(t,e,n){S("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=ar(t,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");S(e.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`));const r="reflect"===n?1:0;for(let t=0;t<s.rank;t++)S(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),S(e[t][0]>=0&&e[t][0]<=s.shape[t]-r&&e[t][1]>=0&&e[t][1]<=s.shape[t]-r,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${s.shape[t]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:e,mode:n},i={x:s};return Zs.runKernel(Ye,i,a)}});Ds().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),cp(this,t,e)};const hp=or({mod_:function(t,e){let n=ar(t,"a","mod"),s=ar(e,"b","mod");[n,s]=Us(n,s);const r={a:n,b:s};return Zs.runKernel(Ze,r)}});Ds().prototype.mod=function(t){return this.throwIfDisposed(),hp(this,t)},Ds().prototype.mul=function(t){return this.throwIfDisposed(),Fi(this,t)},Ds().prototype.neg=function(){return this.throwIfDisposed(),no(this)},Ds().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Ol(this,t,e,n)},Ds().prototype.notEqual=function(t){return this.throwIfDisposed(),so(this,t)},Ds().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),ro(this,t,e,n)},Ds().prototype.onesLike=function(){return this.throwIfDisposed(),oo(this)},Ds().prototype.pad=function(t,e){return this.throwIfDisposed(),lo(this,t,e)};const pp=or({pool_:function(t,e,n,s,r,a){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=ar(t,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=Za(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S(Ka(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const u=Pa(o.shape,e,a,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),a=t.concat(s,r),i=e.map(((t,e)=>(t-a[e]%t)%t)),o=r.map(((t,e)=>t+i[e]));return[e.map(((t,e)=>[s[e],o[e]])),e.map(((t,e)=>[0,i[e]]))]}([u.inHeight,u.inWidth],c,h),m=p?s:"valid",g=p?o:rc(o,c,d),y=("avg"===n?()=>Ja(g,e,a,m):()=>Vi(g,e,a,m))(),b=p?y:zh(y,c,f);return l?Za(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Ds().prototype.pool=function(t,e,n,s,r){return this.throwIfDisposed(),pp(this,t,e,n,s,r)},Ds().prototype.pow=function(t){return this.throwIfDisposed(),Rl(this,t)},Ds().prototype.prelu=function(t){return this.throwIfDisposed(),uo(this,t)};const dp=or({prod_:function(t,e=null,n=!1){let s=ar(t,"x","prod");"bool"===s.dtype&&(s=jr(s,"int32"));const r={x:s},a={axis:e,keepDims:n};return Zs.runKernel(pn,r,a)}});Ds().prototype.prod=function(t,e){return this.throwIfDisposed(),dp(this,t,e)};const fp=or({reciprocal_:function(t){const e={x:ar(t,"x","reciprocal")};return Zs.runKernel(mn,e)}});Ds().prototype.reciprocal=function(){return this.throwIfDisposed(),fp(this)},Ds().prototype.relu=function(){return this.throwIfDisposed(),go(this)},Ds().prototype.relu6=function(){return this.throwIfDisposed(),Ko(this)},Ds().prototype.reshapeAs=function(t){return this.throwIfDisposed(),Za(this,t.shape)},Ds().prototype.reshape=function(t){return this.throwIfDisposed(),Za(this,t)},Ds().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Tl(this,t,e,n)},Ds().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Cl(this,t,e,n)},Ds().prototype.reverse=function(t){return this.throwIfDisposed(),yo(this,t)},Ds().prototype.rfft=function(){return this.throwIfDisposed(),jo(this)};const mp=or({round_:function(t){const e={x:ar(t,"x","round")};return Zs.runKernel(In,e)}});Ds().prototype.round=function(){return this.throwIfDisposed(),mp(this)},Ds().prototype.rsqrt=function(){return this.throwIfDisposed(),Rc(this)},Ds().prototype.selu=function(){return this.throwIfDisposed(),bo(this)},Ds().prototype.separableConv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),xo(this,t,e,n,s,r,a)},Ds().prototype.sigmoid=function(){return this.throwIfDisposed(),vo(this)};const gp=or({sign_:function(t){const e={x:ar(t,"x","sign")};return Zs.runKernel(Rn,e)}});Ds().prototype.sign=function(){return this.throwIfDisposed(),gp(this)},Ds().prototype.sin=function(){return this.throwIfDisposed(),yc(this)},Ds().prototype.sinh=function(){return this.throwIfDisposed(),xc(this)},Ds().prototype.slice=function(t,e){return this.throwIfDisposed(),wo(this,t,e)},Ds().prototype.softmax=function(t){return this.throwIfDisposed(),To(this,t)},Ds().prototype.softplus=function(){return this.throwIfDisposed(),Co(this)},Ds().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),rc(this,t,e)},Ds().prototype.split=function(t,e){return this.throwIfDisposed(),So(this,t,e)},Ds().prototype.sqrt=function(){return this.throwIfDisposed(),$o(this)},Ds().prototype.square=function(){return this.throwIfDisposed(),to(this)},Ds().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Vl(this,t)},Ds().prototype.squeeze=function(t){return this.throwIfDisposed(),Ao(this,t)},Ds().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Rs?[this,t]:[this,...t];return Eo(n,e)},Ds().prototype.step=function(t){return this.throwIfDisposed(),Yo(this,t)};const yp=or({stridedSlice_:function(t,e,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:ar(t,"x","stridedSlice")},c={begin:e,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Zs.runKernel(Gn,u,c)}});Ds().prototype.stridedSlice=function(t,e,n,s,r,a,i,o){return this.throwIfDisposed(),yp(this,t,e,n,s,r,a,i,o)},Ds().prototype.sub=function(t){return this.throwIfDisposed(),Mi(this,t)},Ds().prototype.sum=function(t,e){return this.throwIfDisposed(),Li(this,t,e)};const bp=or({tan_:function(t){const e={x:ar(t,"x","tan")};return Zs.runKernel(jn,e)}});Ds().prototype.tan=function(){return this.throwIfDisposed(),bp(this)},Ds().prototype.tanh=function(){return this.throwIfDisposed(),Ro(this)},Ds().prototype.tile=function(t){return this.throwIfDisposed(),Ii(this,t)},Ds().prototype.toBool=function(){return this.throwIfDisposed(),jr(this,"bool")},Ds().prototype.toFloat=function(){return this.throwIfDisposed(),jr(this,"float32")},Ds().prototype.toInt=function(){return this.throwIfDisposed(),jr(this,"int32")};const xp=or({topk_:function(t,e=1,n=!0){const s=ar(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const a={x:s},i={k:e,sorted:n},[o,l]=Zs.runKernel(Xn,a,i);return{values:o,indices:l}}});Ds().prototype.topk=function(t,e){return this.throwIfDisposed(),xp(this,t,e)},Ds().prototype.transpose=function(t){return this.throwIfDisposed(),Vo(this,t)};const vp=or({unique_:function(t,e=0){const n=ar(t,"x","unique","string_or_numeric");S(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:e},[a,i]=Zs.runKernel(Zn,s,r);return{values:a,indices:i}}});let wp;function kp(){return null==wp&&(wp=Zs.backend.epsilon()),wp}Ds().prototype.unique=function(t){return this.throwIfDisposed(),vp(this,t)},Ds().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Oc(this,t,e)},Ds().prototype.unstack=function(t){return this.throwIfDisposed(),Mo(this,t)},Ds().prototype.where=function(t,e){return this.throwIfDisposed(),zo(t,this,e)},Ds().prototype.zerosLike=function(){return this.throwIfDisposed(),Po(this)};class _p extends Error{constructor(t){super(t),Object.setPrototypeOf(this,_p.prototype)}}class Ip extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ip.prototype)}}class Np extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Np.prototype)}}class Tp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Tp.prototype)}}class Cp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Cp.prototype)}}function Sp(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function $p(t,e){if(!t)throw new Cp(e)}function Ap(t,e){let n=0;for(const s of t)s===e&&n++;return n}function Ep(t){return 1===t.length?t[0]:t}function Rp(t){return Array.isArray(t)?t:[t]}function Dp(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Op(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let Fp={};function Mp(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Lp(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Lp(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Lp(e):t[n]=e.value)}}}function zp(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let a;if(r in n)a=n[r];else if(r in Fp)a=Fp[r];else if(a=e[r],null==a)throw new Np(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new Np(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Fp?[o,l]=Fp.className:i in e&&([o,l]=e[i]),null==o)throw new Np(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Fp))t[e]=Fp[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},Fp);for(const t of Object.keys(n))Fp[t]=n[t];Lp(a.config);const s=l(o,a.config,n,r);return Fp=Object.assign({},e),s}{const t=Object.assign({},Fp);for(const t of Object.keys(n))Fp[t]=n[t];const e=new o(a.config);return Fp=Object.assign({},t),e}}}function Pp(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Vp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Bp(t){if(null==t)throw new Np(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Wp(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Np(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Up(t,e,n=0,s=1/0){return $p(n>=0),$p(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function Gp(t,e){Array.isArray(t)?(S(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Gp(t,`element ${n+1} of ${e}`)))):S(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${jp(t)}.`))}function jp(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>jp(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Hp(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function qp(t,e){return Na((()=>$o(Li(Fi(t,t),e,!0))))}class Xp extends va{getConfig(){return{}}}class Kp extends Xp{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Na((()=>{const e=qp(t,this.axis),n=ri(e,0,this.maxValue);return Fi(t,yi(n,Oa(kp(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Kp.className="MaxNorm",ka(Kp);class Yp extends Xp{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Na((()=>yi(t,Oa(kp(),qp(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Yp.className="UnitNorm",ka(Yp);class Zp extends Xp{apply(t){return go(t)}}Zp.className="NonNeg",ka(Zp);class Jp extends Xp{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Na((()=>{const e=qp(t,this.axis),n=Oa(Fi(this.rate,ri(e,this.minValue,this.maxValue)),Fi(1-this.rate,e));return Fi(t,yi(n,Oa(kp(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Jp.className="MinMaxNorm",ka(Jp);const Qp={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function td(t){return Mp(t)}function ed(t,e={}){return zp(t,wa.getMap().classNameMap,e,"constraint")}function nd(t){return null==t?null:"string"==typeof t?ed({className:t in Qp?Qp[t]:t,config:{}}):t instanceof Xp?t:ed(t)}const sd=["channelsFirst","channelsLast"],rd=["nearest","bilinear"],ad=["valid","same","causal"],id=["max","avg"],od=["sum","mul","concat","ave"],ld=new Map;function ud(t){Wp(sd,"DataFormat",t)}function cd(t){Wp(ad,"PaddingMode",t)}function hd(t){Wp(id,"PoolMode",t)}const pd=[];function dd(t,e){pd.push(t);try{const t=e();return pd.pop(),t}catch(t){throw pd.pop(),t}}function fd(t){if(!yd(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===pd.length?"":pd.join("/")+"/")+t}function md(t){if(!yd(t))throw new Error("Not a valid tensor name: '"+t+"'");ld.has(t)||ld.set(t,0);const e=ld.get(t);if(ld.set(t,ld.get(t)+1),e>0){const n=`${t}_${e}`;return ld.set(n,1),n}return t}const gd=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function yd(t){return!!t.match(gd)}function bd(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function xd(t){return Do(t=Array.isArray(t)?new Float32Array(t):t)}function vd(t){return Gi(xd(t)).dataSync()[0]}function wd(t){return Oi(xd(t)).dataSync()[0]}function kd(t,e){if(e<t)throw new Np(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}function _d(t,e){return t.asType(e)}function Id(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Nd(t,e,n){return Na((()=>{switch(t.rank){case 1:return ko(t,e,n);case 2:return _o(t,[e,0],[n,t.shape[1]]);case 3:return Io(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return No(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return wo(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return wo(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Np(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Td(t,e,n){return Na((()=>{switch(t.rank){case 1:return ko(t,e,n);case 2:return _o(t,[0,e],[t.shape[0],n]);case 3:return Io(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return No(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Np(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Cd(t,e,n,s){return Na((()=>{switch(t.rank){case 1:return ko(t,e,n);case 2:switch(s){case 1:return Nd(t,e,n);case 2:return Td(t,e,n);default:throw new Np(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Nd(t,e,n);case 2:return Io(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Td(t,e,n);default:throw new Np(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Nd(t,e,n);case 2:return No(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return No(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Td(t,e,n);default:throw new Np(`The axis is not within the rank of the tensor ${s}`)}default:throw new Np(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Sd(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),ai(t,e)}function $d(t,e){switch(t.rank){case 1:return ii([t,e]);case 2:return oi([t,e],0);case 3:return li([t,e],0);case 4:return ui([t,e],0);default:throw new Np(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Ad(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Np(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Ii(t,e)}function Ed(t,e=0,n=1,s,r){return fo(t,e,n,s,r)}function Rd(t,e,n,s){if(t.rank<2||e.rank<2)throw new Tp(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Tp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return il({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Fd(t.rank,s,"channelsLast"):null,activation:n});{const r=t.shape.slice(),a=r.pop();t=t.reshape([-1,a]);const i=e.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...r,...u];return il({a:t,b:e,transposeA:!1,transposeB:!1,bias:s?Fd(t.rank,s,"channelsLast"):null,activation:n}).reshape(h)}}function Dd(t,e,n){return Na((()=>(e=Array.isArray(e)?Do(e,"int32"):e.toInt(),Si(t,e,n))))}function Od(t){return Fi(t,t)}function Fd(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new Np(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(t<3)return e;throw new Np(`Unsupported input rank by biasAdd: ${e.rank}`)}function Md(t,e,n){return Na((()=>(null==n&&(n="channelsLast"),ud(n),t.add(Fd(t.rank,e,n)))))}function Ld(t,e,n,s){return Na((()=>Bo(t,e,n,s)))}function zd(t,e,n=!1){return n?t():e()}const Pd=["fanIn","fanOut","fanAvg"],Vd=["normal","uniform","truncatedNormal"];class Bd extends va{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Wd extends Bd{apply(t,e){return ao(t,e)}}Wd.className="Zeros",ka(Wd);class Ud extends Bd{apply(t,e){return io(t,e)}}Ud.className="Ones",ka(Ud);class Gd extends Bd{constructor(t){if(super(),"object"!=typeof t)throw new Np(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Np(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Na((()=>Fi(Ea(this.value),io(t,e))))}getConfig(){return{value:this.value}}}Gd.className="Constant",ka(Gd);class jd extends Bd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return mo(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}jd.className="RandomUniform",ka(jd);class Hd extends Bd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Tp(`randomNormal does not support dType ${e}.`);return Ed(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Hd.className="RandomNormal",ka(Hd);class qd extends Bd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Tp(`truncatedNormal does not support dType ${e}.`);return Fo(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}qd.className="TruncatedNormal",ka(qd);class Xd extends Bd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Na((()=>{if(2!==t.length||t[0]!==t[1])throw new Np("Identity matrix initializer can only be used for 2D square matrices.");return Fi(this.gain,Ni(t[0]))}))}getConfig(){return{gain:this.gain}}}Xd.className="Identity",ka(Xd);class Kd extends Bd{constructor(t){if(super(),t.scale<0)throw new Np(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Wp(Pd,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Wp(Vd,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(ud(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=bd(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=bd(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=bd(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Tp(`${this.getClassName()} does not support dType ${e}.`);return Fo(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return mo(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Kd.className="VarianceScaling",ka(Kd);class Yd extends Kd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Kd.className}}Yd.className="GlorotUniform",ka(Yd);class Zd extends Kd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Kd.className}}Zd.className="GlorotNormal",ka(Zd);class Jd extends Kd{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Kd.className}}Jd.className="HeNormal",ka(Jd);class Qd extends Kd{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Kd.className}}Qd.className="HeUniform",ka(Qd);class tf extends Kd{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Kd.className}}tf.className="LeCunNormal",ka(tf);class ef extends Kd{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Kd.className}}ef.className="LeCunNormal",ka(ef);class nf extends Bd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Tp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Na((()=>{if(t.length<2)throw new Tp("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Ed(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Gl.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Fi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}nf.className="Orthogonal",ka(nf);const sf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function rf(t,e={}){return zp(t,wa.getMap().classNameMap,e,"initializer")}function af(t){return Mp(t)}function of(t){if("string"==typeof t){const e=t in sf?sf[t]:t;if("GlorotNormal"===e)return new Zd;if("GlorotUniform"===e)return new Yd;if("HeNormal"===e)return new Jd;if("HeUniform"===e)return new Qd;if("LeCunNormal"===e)return new tf;if("LeCunUniform"===e)return new ef;{const t={};return t.className=e,t.config={},rf(t)}}return t instanceof Bd?t:rf(t)}let lf=0;function uf(){return lf++}const cf={};function hf(t=""){return t in cf||(cf[t]=0),cf[t]+=1,t+cf[t].toString()}function pf(t){return Array.isArray(t)&&Array.isArray(t[0])}function df(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function ff(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Np(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function mf(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Np(`Expected exactly 1 Shape; got ${t.length}`)}return t}function gf(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class yf{constructor(t,e="float32",n="Variable",s=!0,r=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=uf(),n=null==n?"Variable":n,this.originalName=fd(n),this.name=md(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(t,e=!0,n,s){return Zs.makeVariable(t,e,n,s)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function bf(t){return t.map((t=>t.read()))}function xf(t){t.forEach((t=>{t[0].write(t[1])}))}class vf{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class wf{constructor(t,e,n,s,r,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=uf(),null!=a&&(this.originalName=fd(a),this.name=md(this.originalName)),this.rank=e.length}}let kf=0;class _f{constructor(t,e){this.callArgs=e,this.id=kf++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let If=0;class Nf extends va{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=If++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Dp(t)+"_"+hf(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Ip(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Np(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Ep(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Ep(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new _p(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new _p(`Layer ${this.name} is not connected, no input to return.`);return Ep(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new _p(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new _p(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ep(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Rp(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Rp(this.inputSpec);if(t.length!==e.length)throw new Np(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Np(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Np(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Np(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Np(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),a=r.axes[e],i=s>=0?t[s]:t[t.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Np(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],a=s.shape[t];if(null!=e&&null!=a&&e!==a)throw new Np(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Rp(t);let s=!0;for(const t of n)if(!(t instanceof wf)){s=!1;break}let r=!0;for(const t of n)if(t instanceof wf){r=!1;break}if(s===r)throw new Np("Arguments to apply() must be all SymbolicTensors or all Tensors");return dd(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Rp(t))e.push(n.shape);this.build(Ep(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=Rp(s),a=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(s=Ep(a),null!=this.activityRegularizer)throw new Tp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=Rp(t);const e=[];for(const n of t)e.push(n.shape);return Ep(e)}(t),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new wf(a,n,this,Rp(t),e,this.name,s))):new wf(a,s,this,Rp(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new Tp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new _p(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new _p(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ip(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return gf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return bf(t?this.trainableWeights:this.weights)}setWeights(t){Na((()=>{const e=this.weights;if(e.length!==t.length)throw new Np(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=bf(e);for(let r=0;r<s.length;++r){const a=s[r],i=e[r],o=t[r];if(!D(a.shape,o.shape))throw new Np(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}xf(n)}))}addWeight(t,e,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Np(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=of("zeros"));const o=s.apply(e,n),l=new yf(o,n,t,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Rp(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,a,i=null){const o=Rp(t);e=Rp(e),n=Rp(n),s=Rp(s),r=df(r),a=df(a);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new _f({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Tf(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=Tf(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class Cf extends Nf{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:hf("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Np("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Np("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Np("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new wf(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new _f({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Np(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Sf(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const a=t[r];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];Ta(s)}}function $f(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var Af;Cf.className="InputLayer",ka(Cf),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(Af||(Af={}));class Ef{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Rf{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Df extends Ef{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const r=Na((()=>Oa(this.totals[t],Fi(s,n))));this.totals[t]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Na((()=>{const n=Fi(yi(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Ca(e[t])})))}}class Of extends Ef{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];t.push(i.data()),e.push(s),n.push(a)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}class Ff extends Ef{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");q(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,s=ys();return(...r)=>{const a=ys();return a-s<e||(s=a,n=t(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await Sf(n),s.push(this.yield(t,e,n))),s.push(eu()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Sf(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Sf(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(eu()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Sf(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Sf(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(eu()):q(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Sf(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Sf(t),await this.trainEnd(t))}}function Mf(t,e){return null==t&&(t={}),t instanceof Ef?[t]:Array.isArray(t)&&t[0]instanceof Ef?t:Rp(t).map((t=>new Ff(t,e)))}class Lf{constructor(){}static registerCallbackConstructor(t,e){S(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Lf.checkForDuplicate(e),null==Lf.constructors[t]&&(Lf.constructors[t]=[]),Lf.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Lf.constructors)Lf.constructors[+e].forEach((e=>{if(e===t)throw new Np("Duplicate callback constructor.")}))}static clear(){Lf.constructors={}}static createCallbacks(t){const e=[];for(const n in Lf.constructors){const s=+n;t>=s&&e.push(...Lf.constructors[s])}return e.map((t=>new t))}}function zf(t,e,n,s,r,a,i,o,l){const u=new Of,c=[new Df,...Lf.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new Rf(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Pf(t,e={},n=!1){return zp(t,wa.getMap().classNameMap,e,"layer",n)}function Vf(t,e){return Na((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Li(Od(t),e,!0),s=Ti(n.shape,kp()),r=$o(Wi(n,s));return yi(t,r)}))}function Bf(t,e){return Na((()=>Ui(Od(Mi(e,t)),-1)))}function Wf(t,e){return Na((()=>Ui(Da(Mi(e,t)),-1)))}function Uf(t,e){return Na((()=>{const n=Mi(t,e),s=ri(Da(t),kp(),Number.MAX_VALUE),r=Da(yi(n,s));return Fi(100,Ui(r,-1))}))}function Gf(t,e,n=!1){return Na((()=>{if(n)e=To(e);else{const t=Li(e,e.shape.length-1,!0);e=yi(e,t)}return e=ri(e,kp(),1-kp()),no(Li(Fi(t.toFloat(),Ri(e)),e.shape.length-1))}))}function jf(t,e,n=!1){return Na((()=>{const s=Ci(function(t){const e=[bd(t.shape)];return t.reshape(e)}(t)).toInt(),r=(e=ri(e,kp(),1-kp())).shape;return Gf(ro(s,r[r.length-1]).reshape(r),e,n)}))}function Hf(t,e){return Na((()=>{let n;return n=ri(e,kp(),1-kp()),n=Ri(yi(n,Mi(1,n))),Ui(function(t,e){if(!D(t.shape,e.shape))throw new Np(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Na((()=>{const n=e.relu(),s=e.abs().neg();return n.sub(e.mul(t)).add(s.exp().log1p())}))}(t,n),-1)}))}function qf(t,e){return Na((()=>{const n=Vf(t,-1),s=Vf(e,-1),r=Fi(n,s);return no(Li(r,-1))}))}Lf.constructors={};const Xf={meanSquaredError:Bf,meanAbsoluteError:Wf,meanAbsolutePercentageError:Uf,meanSquaredLogarithmicError:function(t,e){return Na((()=>{const n=ri(e,kp(),Number.MAX_VALUE),s=Ri(Oa(1,n)),r=ri(t,kp(),Number.MAX_VALUE),a=Ri(Oa(1,r));return Ui(Od(Mi(s,a)),-1)}))},squaredHinge:function(t,e){return Na((()=>{const n=Wi(0,Mi(1,Fi(t,e)));return Ui(Od(n),-1)}))},hinge:function(t,e){return Na((()=>{const n=Wi(0,Mi(1,Fi(t,e)));return Ui(n,-1)}))},categoricalHinge:function(t,e){return Na((()=>{const n=Li(Fi(t,e),-1),s=Oi(Fi(Mi(1,t),e),-1);return Wi(0,Oa(1,Mi(s,n)))}))},logcosh:function(t,e){return Na((()=>{const n=Math.log(2),s=Mi(e,t),r=Mi(Oa(s,Co(Fi(-2,s))),n);return Ui(r,-1)}))},categoricalCrossentropy:Gf,sparseCategoricalCrossentropy:jf,binaryCrossentropy:Hf,kullbackLeiblerDivergence:function(t,e){return Na((()=>{const n=ri(t,kp(),1),s=ri(e,kp(),1);return Li(Fi(t,Ri(yi(n,s))),-1)}))},poisson:function(t,e){return Na((()=>{const n=Ri(Oa(kp(),e));return Ui(Mi(e,Fi(t,n)),-1)}))},cosineProximity:qf};function Kf(t){if("string"==typeof t){if(t in Xf)return Xf[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Np(e)}return t}function Yf(t,e){return Na((()=>{const n=Fi(.5,oo(e)),s=_d($i(e,n),t.dtype);return Ui(ki(t,s),-1)}))}function Zf(t,e){return Na((()=>_d(ki(La(t,-1),La(e,-1)),"float32")))}function Jf(t,e){return Hf(t,e)}function Qf(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),ki(t,e).asType("float32")}const tm=Gf,em=jf,nm={binaryAccuracy:Yf,categoricalAccuracy:Zf,precision:function(t,e){return Na((()=>{const n=function(t,e){return Na((()=>Pi(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),s=function(t,e){return Na((()=>Pi(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),r=n.add(s);return zo($i(r,0),n.div(r),0).cast("float32")}))},categoricalCrossentropy:tm,sparseCategoricalCrossentropy:em,mse:Bf,MSE:Bf,mae:Wf,MAE:Wf,mape:Uf,MAPE:Uf,cosine:qf};function sm(t){if("string"==typeof t&&t in nm)return nm[t];if("string"!=typeof t&&null!=t)return t;throw new Np(`Unknown metric ${t}`)}function rm(t){if($p(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Xf))if(Xf[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(nm))if(nm[n]===t){e=n;break}return void 0!==e?e:t.name}}function am(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!im(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function im(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!im(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!im(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function om(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function lm(t,e,n){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}om([`${t.name} (${t.getClassName()})`,s,t.countParams().toString()],e,n)}function um(t,e,n,s){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];a.push(`${n}[${s}][${r}]`)}const i=t.name,o=t.getClassName(),l=0===a.length?"":a[0];om([`${i} (${o})`,r,t.countParams().toString(),l],e,s);for(let t=1;t<a.length;++t)om(["","","",a[t]],e,s)}function cm(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function hm(t,e){if(null===t)return null;if("string"==typeof t)return Op(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];cm(e,r,s)?n.push(s):n.push(hm(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=Op(n);e[t]=hm(s,t)}}return e}}function pm(t,e){if(null==t)return null;if("string"==typeof t)return Dp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];cm(e,r,s)?n.push(s):n.push(pm(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];e[Dp(n)]="name"!==n&&"className"!==n||"string"!=typeof s?pm(s,n):s}return e}}class dm{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof dm)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Np(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return jr(e,t.dtype)}catch(n){throw new Np(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof wf){if(null==this.id2Value[t.id])throw new Np(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Np(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof wf){if(null==this.id2Value[t.id])throw new Np(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Np(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Ta(this.id2Mask)}}const fm={},mm={};function gm(t,e,n,s){const r=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,p;if(null==fm[c]){const t=function(t,e){S(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=bm(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of t){const{sorted:t,recipientMap:i}=bm(a,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:ym(s)}}(i,e);h=t.sorted,p=t.recipientCounts,fm[c]=h,mm[c]=p}h=fm[c],p={},r||Object.assign(p,mm[c]);const d=new dm(e);for(let t=0;t<h.length;++t){if(null!=s){const t=Ia().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const a=h[t],i=a.sourceLayer;if(i instanceof Cf)continue;const u=[],c=[],f=[];let m=!1;for(const t of a.inputs){const n=d.getValue(t),s=d.getMask(t);u.push(n),c.push(s),null!=s&&(m=!0),r||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Rp(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=xm(a),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}r||Ta(f)}return d.disposeMasks(),a?l:l[0]}function ym(t){const e={};for(const n in t)e[n]=t[n].size;return e}function bm(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),s.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:s,recipientMap:r}}function xm(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class vm extends Nf{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=hf(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Vp(this.inputs).length!==this.inputs.length)throw new Np(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);Vp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;$p(0===n,"input layer has >1 nodes"),$p(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Cf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},a={},i=[],o=(t,e,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=t.sourceLayer,r=t.nodeIndex,l=t.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Ip(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(vm.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const s=u.inputTensors[t],r=u.inboundLayers[t],a=u.nodeIndices[t],i=u.tensorIndices[t];o(s,e,n,r,a,i)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const c=i.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];a=Math.max(a,i),s[t.outboundLayer.id]=a,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],i=t.nodeIndices[s],o=r.inboundNodes[i],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const t in e){const s=e[t];s in h||(h[s]=[]),h[s].push(n[t])}const p={};for(const t in s){const e=s[t];e in p||(p[e]=[]),p[e].push(r[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(Pp);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],s=a[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof vm&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(Pp);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ip(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new Ip(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new _f({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Np("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Np(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const s in t){let a=s;if(null==n[s]){const t=s.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])r.push([n[a],t[s]]);else if(e)throw new Np(`Provided weight data has no target variable: ${s}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Np(`${t.length} of ${s} weights are not set: ${t}`)}xf(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.3.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=pm(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Na((()=>{t=Rp(t);const n=new dm;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return gm(this.outputs,n,e)}))}computeMask(t,e){return Na((()=>{let n;return t=Rp(t),n=null==e?Sp(null,t.length):Rp(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=df(t);if(e.length!==this.inputLayers.length)throw new Np(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Pp);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=df(e.computeOutputShape(Ep(s))),a=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${a}_${t}`]=r[t]}}const r=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;a.push(r)}for(let t=0;t<a.length;t++){const e=a[t];$p(e in n),r.push(n[e])}return Ep(r)}runInternalGraph(t,e){null==e&&(e=Sp(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=t[s],i=e[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Pp);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,a=new Array;for(const t of s)t.id in n&&a.push(n[t.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=Rp(e.call(t,u)),l=Rp(e.computeMask(t,n)),s=[t],i=[n]}else s=a.map((t=>t[0])),i=a.map((t=>t[1])),null==u.mask&&(u.mask=i),o=Rp(e.call(s,u)),l=Rp(e.computeMask(s,i));if(e.activityRegularizer)throw new Tp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],a=l[t];n[e.id]=[s,a]}}}}const r=[],a=[],i=[];for(const t of this.outputs){$p(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];i.push(e.shape),r.push(e),a.push(s)}return[r,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof vm?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=vm.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Np(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Np("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Np(`No such layer: ${t}`)}calculateLosses(){return Na((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=vm.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=vm.nodeKey(t,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[vm.nodeKey(r,a)];null==l&&(l=0),t.push([r.name,l,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],a=vm.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,i,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],a=vm.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,i,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let s;for(const a of e){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(t,e);const c=r[o];if(c.inboundNodes.length<=l)return void i(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(Ep(n),s)}function l(t){const n=t.name,a=Pf(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Np(`Corrupted configuration, expected array for nodeData: ${t}`);i(a,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!Bp(a);)for(const t of c){const e=r[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],s=t[2];$p(e in r);const a=r[e].inboundNodes[n].outputTensors;h.push(a[s])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],s=t[2];$p(e in r);const a=r[e].inboundNodes[n].outputTensors;p.push(a[s])}return new t({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Np("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Na((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function wm(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function km(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Na((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());Ta(e);const r=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);r.push(n[t])})),Do(r,"float32")}return null}function _m(t,e){return Fi(t,e)}function Im(t,e){let n,s;const r=e;n=r.xs,s=r.ys,S(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const a=Nm("input",t.inputNames,n),i=Nm("output",t.outputNames,s),o=a[0].shape[0];S(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),S(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<a.length;e++)S(a[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<i.length;e++)S(i[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:a,ys:i}}function Nm(t,e,n){if(n instanceof Rs)return[n];if(Array.isArray(n))return S(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const s=[];for(const r of e){if(null==n[r])throw new Np(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function Tm(t){return"function"==typeof t.iterator}function Cm(t){S(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Sm(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Nd(t,e,n-e))):Nd(t,e,n-e)}function $m(t,e){return Na((()=>null==t?null:Array.isArray(t)?t.map((t=>$m(t,e))):Dd(t,"int32"===e.dtype?e:e.toInt())))}function Am(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function Em(t){const e=[];t instanceof Rs&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(Id(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Rm(t,e){if(null==t)return;const n=[];if(e instanceof Rs)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof Rs)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function Dm(t){return Array.isArray(t)}function Om(t){return!function(t){return t instanceof Rs}(t)&&!Dm(t)}function Fm(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Dm(t)&&t.length>0)e=!0;else if(Om(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Np(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(Om(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new Np(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if(Dm(t)){if((t=t).length!==e.length)throw new Np(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(t=t,e.length>1)throw new Np(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=Em(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Np(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[t].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l>=0&&o!==l)throw new Np(`Error when checking ${r}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function Mm(t,e,n,s=!0,r=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new Np(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new Np(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Np(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l!==o)throw new Np(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Lm extends vm{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Np("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}s("_".repeat(e)),om(a,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?lm(o[t],n,s):um(o[t],n,i,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?gf(t.collectedTrainableWeights):gf(t.trainableWeights),e}(t),u=gf(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Ql.adagrad(.01),Adadelta:()=>Ql.adadelta(1,.95,kp()),Adam:()=>Ql.adam(.001,.9,.999,kp()),Adamax:()=>Ql.adamax(.002,.9,.999,kp(),0),RMSProp:()=>Ql.rmsprop(.001,.9,0,kp()),SGD:()=>Ql.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Np(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Ra))throw new Np("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Np(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Kf(t)))}else{const n=Kf(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Np(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Kf(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],dd("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};dd("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,s,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Hf?-1!==["accuracy","acc"].indexOf(i)?s=Yf:-1!==["crossentropy","ce"].indexOf(i)&&(s=Jf):this.lossFunctions[t]===jf?-1!==["accuracy","acc"].indexOf(i)?s=Qf:-1!==["crossentropy","ce"].indexOf(i)&&(s=em):-1!==["accuracy","acc"].indexOf(i)?s=Zf:-1!==["crossentropy","ce"].indexOf(i)&&(s=tm),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const t=sm(i);a=t,n=""+rm(i)}let e;dd(n,(()=>{e=a})),r(t,n,e)}})(s[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;Cm(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Ep(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Rm(r[0],t),Rm(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,r=t.testFunction;let a=[];if(n.verbose>0)throw new Tp("Verbose mode is not implemented yet.");S(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!s||l<n.batches;){const e=await i.next();if(a=Na((()=>{if(e.value){const{xs:n,ys:s}=Im(t,e.value),i=n.concat(s),u=Na((()=>r(i)));if(Ta(i),0===l)for(let t=0;t<u.length;++t)a.push(Ea(0));const c=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=a[t];a[t]=Na((()=>Oa(a[t],Fi(c,e)))),l>0&&Ta(n)}Ta(u),o+=c,++l}return a})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=yi(a[t],o),Ta(e)}return Ep(a)}(this,t,e)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new Np(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Np(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Np("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],r=this.retrieveSymbolicTensors(s),a=new dm;if(t instanceof Rs&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Np(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Np(`No value is provided for the model's input ${e.name}`);a.add(e,n)}const i=gm(r,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=Sp(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((t=>t.name));for(let s=0;s<t.length;++s){const i=a.indexOf(t[s]);if(-1!==i&&(e[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new Np(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Na((()=>{const s=this.checkNumSamples(t);if(n)throw new Tp("Verbose predictLoop() is not implemented yet.");const r=Am(s,e),a=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e)Na((()=>{const n=r[e][0],s=r[e][1],a=Sm(t,n,s),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new dm(i);return gm(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)));return Ep(a.map((t=>ai(t,0))))}))}predict(t,e={}){const n=Em(t);Mm(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==e.batchSize?32:e.batchSize;return Cm(s),this.predictLoop(n,s)}finally{Rm(n,t)}}predictOnBatch(t){Mm(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new Ip("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===jf?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(t,e,n){const s=Vp(t.map((t=>t.shape[0])));s.sort();const r=Vp(e.map((t=>t.shape[0])));if(r.sort(),s.length>1)throw new Np(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(r.length>1)throw new Np(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(s.length>0&&r.length>0&&!D(s,r))throw new Np(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(t=Fm(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Fm(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const s=[Bf,Hf,Gf];for(let r=0;r<t.length;++r){const a=t[r],i=e[r],o=n[r];if(null!=i){if(i===Gf&&1===a.shape[a.shape.length-1])throw new Np(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new Np(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new Np(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=wm(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await km(o[e],null,t[e]))}return[i,o,l]}testLoop(t,e,n,s=0,r){return Na((()=>{const a=this.checkNumSamples(e,n,r,"steps"),i=[];if(s>0)throw new Tp("Verbose mode is not implemented yet.");if(null!=r)throw new Tp("steps mode in testLoop() is not implemented yet");{const s=Am(a,n),r=Do(kd(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=Nd(r,a,o-a),u=$m(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)i.push(Ea(0));for(let t=0;t<c.length;++t){const e=c[t];i[t]=Oa(i[t],Fi(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=yi(i[t],a)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;Ap(t,s)>1&&(r+=`_${Ap(t.slice(0,n),s)}`),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new dm(t),o=gm(this.outputs,i,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],o[t]);null!=r[t]&&(n=_m(n,r[t]));const a=Ui(n);e.push(a),l=0===t?n:Oa(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],r=this.metricsTensors[t][1];n=Ui(e(s[r],o[r]))}Ca(n),a.push(n)}return l=Ui(l),this.calculateLosses().forEach((t=>{l=Oa(l,t)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>Na((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:s[t]});const i=new dm(a),o=gm(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],a=Ui(s(r[t],o[t]));n=0===t?a:Oa(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],a=Ui(n(r[s],o[s]));e.push(a)}return e}))}async fit(t,e,n={}){return async function(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,l,u,c;t.isTraining=!0;try{const h=null==s.batchSize?32:s.batchSize;Cm(h);const p=!1,d=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,p,h);r=d[0],a=d[1],c=d[2];let f,m=!1;if(null!=s.validationData&&s.validationData.length>0){if(m=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Tp("validationData including sample weights is not supported yet."):new Np(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);i=s.validationData[0],o=s.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){m=!0;const t=Math.floor(r[0].shape[0]*(1-s.validationSplit)),e=r[0].shape[0];l=Sm(r,t,e),r=Sm(r,0,t),u=Sm(a,t,e),a=Sm(a,0,t),f=l.concat(u)}else null!=s.validationSteps&&(m=!0);const g=r.concat(a).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,v;m?(t.makeTestFunction(),x=t.testFunction,v=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],v=b.slice());const w=Mf(s.callbacks,s.yieldEvery);return await async function(t,e,n,s,r,a,i,o,l,u,c,h,p,d,f){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=t.checkNumSamples(n,r,d,"steps_per_epoch");let y;null!=g&&(y=kd(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=zf(o,i,a,p,g,d,r,m,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new Tp("batch shuffling is not implemneted yet");c&&N(y);const i=Do(y),o=Am(g,r);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Na((()=>{const p=o[c][0],d=o[c][1],f=Nd(i,p,d-p);h.batch=c,h.size=d-p;const g=$m(n,f),y=e(g);for(let t=0;t<s.length;++t){const e=s[t],n=y[t];h[e]=n,Ca(n)}if(c===o.length-1&&m){const e=t.testLoop(l,u,r);for(let t=0;t<s.length;++t){const n=s[t],r=e[t];Ca(r),a["val_"+n]=r}}})),await b.onBatchEnd(c,h),$f(h),t.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,b,h,s.epochs,s.verbose,w,x,f,s.shuffle,v,s.initialEpoch,null)}finally{t.isTraining=!1,Rm(r,e),Rm(a,n),Rm(l,i),Rm(u,o),null!=c&&Ta(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const s=null!=n.batchesPerEpoch;if(S(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),S(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),S(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),S(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),S(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Tm(n.validationData))S(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Tp("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=Mf(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=zf(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,r,u);p.setModel(t),t.history=d,await p.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await e.iterator());!s||c<n.batchesPerEpoch;){const e=await m.next();if(s&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:r}=Im(t,e.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const e=wm(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await km(r[t],null,e[t]))}const u=s.concat(r).concat(i),d=o(u);Ta(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];a[e]=n,Ca(n)}await p.onBatchEnd(h,a),$f(a),h++,c++}if(s?c>=n.batchesPerEpoch:e.done){if(r){let e;e=Tm(n.validationData)?Rp(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Rp(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return Ta(a),Ep(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Ia().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Ia().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Dp(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Dp(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=Dp(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Dp(rm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Dp(rm(t))));{const t={};for(const e in this.metrics)t[e]=Dp(rm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Pf(hm(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=Op(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Op(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Op(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>Op(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=Op(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=vr(t);if(0===e.length)throw new Np(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Np(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Np("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await pr(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.3.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await pr(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=gr([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;am(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,t.save(s)}setUserDefinedMetadata(t){am(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Lm.className="Model",ka(Lm);class zm extends Lm{}zm.className="Functional",ka(zm);class Pm extends Lm{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:hf("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Np(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Pm||t instanceof Lm;let n;if(e){if(n=t,1!==n.outputs.length)throw new Np("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Np("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Np("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Np("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Cf({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Np(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Np("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Tf(this.outputs[0])}this.inboundNodes=[],new _f({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Sp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(mf(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Lm({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Ip("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Ip("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Ip("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Ip("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let r,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Np("Legacy serialization format not supported yet.");r=e}else S(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof Pm))throw new Tp(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const t of r){const e=Pf(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new Np("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Np("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Pm.className="Sequential",ka(Pm);class Vm extends va{getConfig(){return{}}}class Bm extends Vm{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Tp(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return bi(t)}(t,e)}}Bm.className="elu",ka(Bm);class Wm extends Vm{apply(t){return bo(t)}}Wm.className="selu",ka(Wm);class Um extends Vm{apply(t){return go(t)}}Um.className="relu",ka(Um);class Gm extends Vm{apply(t){return Na((()=>ji(6,go(t))))}}Gm.className="relu6",ka(Gm);class jm extends Vm{apply(t){return t}}jm.className="linear",ka(jm);class Hm extends Vm{apply(t){return vo(t)}}Hm.className="sigmoid",ka(Hm);class qm extends Vm{apply(t){return function(t){return Na((()=>{const e=Oa(.5,Fi(.2,t));return ri(e,0,1)}))}(t)}}qm.className="hardSigmoid",ka(qm);class Xm extends Vm{apply(t){return Co(t)}}Xm.className="softplus",ka(Xm);class Km extends Vm{apply(t){return function(t){return Na((()=>yi(t,Da(t).add(1))))}(t)}}Km.className="softsign",ka(Km);class Ym extends Vm{apply(t){return Ro(t)}}Ym.className="tanh",ka(Ym);class Zm extends Vm{apply(t,e=-1){return To(t,e)}}Zm.className="softmax",ka(Zm);class Jm extends Vm{apply(t,e=-1){return zi(t,e)}}Jm.className="logSoftmax",ka(Jm);class Qm extends Vm{apply(t,e=1){return Na((()=>vo(t.mul(e)).mul(t)))}}function tg(t){return t.getClassName()}function eg(t,e={}){return zp(t,wa.getMap().classNameMap,e,"activation")}function ng(t){if(null==t){return eg({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},eg(e)}return t instanceof Vm?t:eg(t)}Qm.className="swish",ka(Qm);class sg extends va{}class rg extends sg{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Na((()=>{let e=ao([1]);return this.hasL1&&(e=Oa(e,Li(Fi(this.l1,Da(t))))),this.hasL2&&(e=Oa(e,Li(Fi(this.l2,Od(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}rg.className="L1L2",ka(rg);const ag={l1l2:"L1L2"};function ig(t){return Mp(t)}function og(t,e={}){return zp(t,wa.getMap().classNameMap,e,"regularizer")}function lg(t){return null==t?null:"string"==typeof t?og({className:t in ag?ag[t]:t,config:{}}):t instanceof sg?t:og(t)}class ug extends Nf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=ff(t);let n=go(t);return null!=this.maxValue&&(n=ri(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}ug.className="ReLU",ka(ug);class cg extends Nf{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ff(t);return Ei(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}cg.className="LeakyReLU",ka(cg);class hg extends Nf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=of(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=lg(t.alphaRegularizer),this.alphaConstraint=nd(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Np(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=mf(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new vf({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ff(t),uo(t,this.alpha.read())}getConfig(){const t={alphaInitializer:af(this.alphaInitializer),alphaRegularizer:ig(this.alphaRegularizer),alphaConstraint:td(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}hg.className="PReLU",ka(hg);class pg extends Nf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Tp(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ff(t);return bi(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}pg.className="ELU",ka(pg);class dg extends Nf{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=ff(t);return n.mul(_d(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}dg.className="ThresholdedReLU",ka(dg);class fg extends Nf{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Zm).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ff(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function mg(t,e,n){if("number"==typeof t)return Sp(t,e);if(t.length!==e)throw new Np(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const a=t[r];if((s=a)!==parseInt(s.toString(),10))throw new Np(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var s}function gg(t,e,n,s,r=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((a+s-1)/s)}function yg(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+wd([n-e,0]);else{if("same"!==s)throw new Np(`Unsupport padding mode: ${s}.`);t*=e}return t}function bg(t,e){return Na((()=>(ud(e),"channelsFirst"===e?Vo(t,[0,2,3,1]):t)))}function xg(t,e){return Na((()=>(ud(e),"channelsFirst"===e?Vo(t,[0,2,3,4,1]):t)))}function vg(t,e,n,s=[1,1],r="valid",a,i,o=null){return Na((()=>{if(null==a&&(a="channelsLast"),ud(a),3!==t.rank&&4!==t.rank)throw new Np(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Np(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=bg(t,a);if("causal"===r)throw new Tp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=el({x:l,filter:e,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Vo(l,[0,3,1,2])),l}))}fg.className="Softmax",ka(fg);class wg extends Nf{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",wg.verifyArgs(e),this.rank=t,Gp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Tp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=mg(e.kernelSize,t,"kernelSize"),this.strides=mg(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,cd(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ud(this.dataFormat),this.activation=ng(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=of(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=nd(e.biasConstraint),this.biasRegularizer=lg(e.biasRegularizer),this.activityRegularizer=lg(e.activityRegularizer),this.dilationRate=mg(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Np(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Np(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Np(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if($p("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Up(t.kernelSize,"number",1,3))throw new Np(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:tg(this.activation),useBias:this.useBias,biasInitializer:af(this.biasInitializer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),biasConstraint:td(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class kg extends wg{constructor(t,e){super(t,e),this.kernel=null,kg.verifyArgs(e),this.filters=e.filters,Gp(this.filters,"filters"),this.kernelInitializer=of(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=nd(e.kernelConstraint),this.kernelRegularizer=lg(e.kernelRegularizer)}build(t){t=mf(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Np(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Na((()=>{let e;t=ff(t);const n=null==this.bias?null:this.bias.read(),s=Hp(this.activation.getClassName());if(null!=s&&2===this.rank)e=vg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)e=function(t,e,n,s=1,r="valid",a,i=1){return Na((()=>{if(null==a&&(a="channelsLast"),ud(a),3!==t.shape.length)throw new Np(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Np(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Np(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===a&&(t=Vo(t,[0,2,1])),"causal"===r)throw new Tp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=hi(t,e,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=Md(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=vg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Tp("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,s=[1,1,1],r="valid",a,i){return Na((()=>{if(null==a&&(a="channelsLast"),ud(a),4!==t.rank&&5!==t.rank)throw new Np(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Np(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=xg(t,a);if("causal"===r)throw new Tp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=fi(o,e,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=Md(o,n)),"channelsFirst"===a&&(o=Vo(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=mf(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=gg(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:af(this.kernelInitializer),kernelRegularizer:ig(this.kernelRegularizer),kernelConstraint:td(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Np(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class _g extends kg{constructor(t){super(2,t),_g.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Up(t.kernelSize,"number",1,2))throw new Np(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}_g.className="Conv2D",ka(_g);class Ig extends kg{constructor(t){super(3,t),Ig.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Np(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Ig.className="Conv3D",ka(Ig);class Ng extends _g{constructor(t){if(super(t),this.inputSpec=[new vf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Np(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=mf(t)).length)throw new Np("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Np("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new vf({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Na((()=>{let e=ff(t);if(4!==e.shape.length)throw new Np(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,yg(i,c,l,this.padding),yg(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Vo(e,[0,2,3,1]));let d=di(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Vo(d,[0,3,1,2])),null!=this.bias&&(d=Md(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=mf(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=yg(e[s],o,a,this.padding),e[r]=yg(e[r],l,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Ng.className="Conv2DTranspose",ka(Ng);class Tg extends kg{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Np("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Np("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Np(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=of(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=lg(e.depthwiseRegularizer),this.depthwiseConstraint=nd(e.depthwiseConstraint),this.pointwiseInitializer=of(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=lg(e.pointwiseRegularizer),this.pointwiseConstraint=nd(e.pointwiseConstraint)}build(t){if((t=mf(t)).length<this.rank+2)throw new Np(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Np(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new vf({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Na((()=>{let e;if(t=ff(t),1===this.rank)throw new Tp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Vo(t,[0,2,3,1])),e=xo(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Md(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Vo(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=af(this.depthwiseInitializer),t.pointwiseInitializer=af(this.pointwiseInitializer),t.depthwiseRegularizer=ig(this.depthwiseRegularizer),t.pointwiseRegularizer=ig(this.pointwiseRegularizer),t.depthwiseConstraint=td(this.depthwiseConstraint),t.pointwiseConstraint=td(this.pointwiseConstraint),t}}Tg.className="SeparableConv";class Cg extends Tg{constructor(t){super(2,t)}}Cg.className="SeparableConv2D",ka(Cg);class Sg extends kg{constructor(t){super(1,t),Sg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Up(t.kernelSize,"number",1,1))throw new Np(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Sg.className="Conv1D",ka(Sg);class $g extends Nf{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Na((()=>{if(t=ff(t),"channelsLast"===this.dataFormat){const e=Cd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Cd(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Cd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Cd(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}$g.className="Cropping2D",ka($g);class Ag extends Nf{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ud(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Wp(rd,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Na((()=>{let e=ff(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Vo(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?e.resizeNearestNeighbor([t,s]):e.resizeBilinear([t,s]);return Vo(r,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,s]):e.resizeBilinear([t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ag.className="UpSampling2D",ka(Ag);class Eg extends wg{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=of(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=nd(t.depthwiseConstraint),this.depthwiseRegularizer=lg(t.depthwiseRegularizer)}build(t){if((t=mf(t)).length<4)throw new Np(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Np(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Na((()=>{let e=function(t,e,n=[1,1],s="valid",r,a){return Na((()=>{null==r&&(r="channelsLast"),ud(r);let i=bg(t,r);if(4!==t.rank)throw new Np(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Np(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=mi(i,e,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=Vo(i,[0,3,1,2])),i}))}(t=ff(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Md(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=mf(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=gg(e,this.kernelSize[0],this.padding,this.strides[0]),a=gg(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,a]:[t[0],r,a,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=af(this.depthwiseInitializer),t.depthwiseRegularizer=ig(this.depthwiseRegularizer),t.depthwiseConstraint=td(this.depthwiseRegularizer),t}}function Rg(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new Np("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function Dg(t,e,n,s=!1,r,a,i=!1,o=!1){return Na((()=>{const l=e.shape.length;if(l<3)throw new Np(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(kd(2,l));if(e=Vo(e,u),null!=a)throw new Tp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=_i(r,-1)),r=Vo(r,u)),s&&(e=yo(e,0),null!=r&&(r=yo(r,0)));const c=[];let h,p=n;const d=e.shape[0],f=Mo(e);let m,g;null!=r&&(m=Mo(r));for(let e=0;e<d;++e){const n=f[e],s=Na((()=>t(n,p)));if(null==r)h=s[0],p=s[1];else{const t=Na((()=>{const t=m[e],n=oo(t).sub(t);return{output:s[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,r)=>s[1][r].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}o&&c.push(h)}return o&&(g=Eo(c,1)),[h,g,p]}))}Eg.className="DepthwiseConv2D",ka(Eg);class Og extends Nf{constructor(t){let e;if(super(t),null==t.cell)throw new Np("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Wg({cells:t.cell}):t.cell,null==e.stateSize)throw new Np("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new vf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?kd(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){pf(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(t,e){return Na((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Tp("Constants support is not implemented in RNN yet.");pf(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new vf({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!D(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new Np(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((t=>new vf({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Na((()=>{if(!this.stateful)throw new _p("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Np("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ao([n,t]))):this.states_=[ao([n,this.cell.stateSize])];else if(null==t)Ta(this.states_),null!=this.keptStates&&(Ta(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ao([n,t]))):this.states_[0]=ao([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Np(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Ta(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,r];if(!D(s.shape,a))throw new Np(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>Ca(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=Rg(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new vf({shape:t.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(e.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof wf){const n=[t].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return Na((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=ff(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Np(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Dg(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return Na((()=>{let e=ao(t.shape);return e=Li(e,[1,2]),e=Id(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Ad(e,[1,t]):e)):this.cell.stateSize>1?[Ad(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Og.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const s=Pf(e.cell,n);return new t(Object.assign(e,{cell:s}))}}Og.className="RNN",ka(Og);class Fg extends Nf{}class Mg extends Fg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Gp(this.units,"units"),this.activation=ng(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=of(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=of(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=of(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=lg(t.kernelRegularizer),this.recurrentRegularizer=lg(t.recurrentRegularizer),this.biasRegularizer=lg(t.biasRegularizer),this.kernelConstraint=nd(t.kernelConstraint),this.recurrentConstraint=nd(t.recurrentConstraint),this.biasConstraint=nd(t.biasConstraint),this.dropout=vd([1,wd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=vd([1,wd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=mf(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Na((()=>{if(2!==(t=t).length)throw new Np(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ug({ones:()=>oo(t),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ug({ones:()=>oo(n),rate:this.recurrentDropout,training:s}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Rd(null!=a?Fi(t,a):t,this.kernel.read()),null!=this.bias&&(r=Md(r,this.bias.read())),null!=i&&(n=Fi(n,i));let o=Oa(r,Rd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tg(this.activation),useBias:this.useBias,kernelInitializer:af(this.kernelInitializer),recurrentInitializer:af(this.recurrentInitializer),biasInitializer:af(this.biasInitializer),kernelRegularizer:ig(this.kernelRegularizer),recurrentRegularizer:ig(this.recurrentRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:td(this.kernelConstraint),recurrentConstraint:td(this.recurrentConstraint),biasConstraint:td(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Mg.className="SimpleRNNCell",ka(Mg);class Lg extends Og{constructor(t){t.cell=new Mg(t),super(t)}call(t,e){return Na((()=>{null!=this.cell.dropoutMask&&(Ta(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ta(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return new t(e)}}Lg.className="SimpleRNN",ka(Lg);class zg extends Fg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Np("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Gp(this.units,"units"),this.activation=ng(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ng(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=of(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=of(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=of(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=lg(t.kernelRegularizer),this.recurrentRegularizer=lg(t.recurrentRegularizer),this.biasRegularizer=lg(t.biasRegularizer),this.kernelConstraint=nd(t.kernelConstraint),this.recurrentConstraint=nd(t.recurrentConstraint),this.biasConstraint=nd(t.biasConstraint),this.dropout=vd([1,wd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=vd([1,wd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=mf(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Na((()=>{if(2!==(t=t).length)throw new Np(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ug({ones:()=>oo(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ug({ones:()=>oo(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(t=Fi(t,r[0]));let u=Rd(t,this.kernel.read());this.useBias&&(u=Md(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Fi(s,a[0]));const c=this.recurrentKernel.read(),[h,p]=So(c,[2*this.units,this.units],c.rank-1),d=Rd(s,h),[f,m,g]=So(u,3,u.rank-1),[y,b]=So(d,2,d.rank-1);i=this.recurrentActivation.apply(Oa(f,y)),o=this.recurrentActivation.apply(Oa(m,b));const x=Rd(Fi(o,s),p);l=this.activation.apply(Oa(g,x));const v=Oa(Fi(i,s),Fi(Oa(1,no(i)),l));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tg(this.activation),recurrentActivation:tg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:af(this.kernelInitializer),recurrentInitializer:af(this.recurrentInitializer),biasInitializer:af(this.biasInitializer),kernelRegularizer:ig(this.kernelRegularizer),recurrentRegularizer:ig(this.recurrentRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:td(this.kernelConstraint),recurrentConstraint:td(this.recurrentConstraint),biasConstraint:td(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}zg.className="GRUCell",ka(zg);class Pg extends Og{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new zg(t),super(t)}call(t,e){return Na((()=>{null!=this.cell.dropoutMask&&(Ta(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ta(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Pg.className="GRU",ka(Pg);class Vg extends Fg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Gp(this.units,"units"),this.activation=ng(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ng(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=of(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=of(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=of(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=lg(t.kernelRegularizer),this.recurrentRegularizer=lg(t.recurrentRegularizer),this.biasRegularizer=lg(t.biasRegularizer),this.kernelConstraint=nd(t.kernelConstraint),this.recurrentConstraint=nd(t.recurrentConstraint),this.biasConstraint=nd(t.biasConstraint),this.dropout=vd([1,wd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=vd([1,wd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=mf(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends Bd{apply(e,s){const r=t.apply([n]),a=(new Ud).apply([n]),i=t.apply([2*n]);return $d($d(r,a),i)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Na((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Np(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ug({ones:()=>oo(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ug({ones:()=>oo(s),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(t=Fi(t,a[0]));let h=Rd(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Fi(s,i[0])),h=Oa(h,Rd(s,this.recurrentKernel.read())),this.useBias&&(h=Md(h,this.bias.read()));const[p,d,f,m]=So(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=Oa(Fi(l,r),Fi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Fi(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tg(this.activation),recurrentActivation:tg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:af(this.kernelInitializer),recurrentInitializer:af(this.recurrentInitializer),biasInitializer:af(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ig(this.kernelRegularizer),recurrentRegularizer:ig(this.recurrentRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:td(this.kernelConstraint),recurrentConstraint:td(this.recurrentConstraint),biasConstraint:td(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Vg.className="LSTMCell",ka(Vg);class Bg extends Og{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Vg(t),super(t)}call(t,e){return Na((()=>{null!=this.cell.dropoutMask&&(Ta(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ta(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Bg.className="LSTM",ka(Bg);class Wg extends Fg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Na((()=>{let n=(t=t).slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),r.push(a.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;pf(t)&&(t=t[0]),t=t,this.cells.forEach(((n,s)=>{dd(`RNNCell_${s}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(Pf(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return bf(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}xf(e)}}function Ug(t){const{ones:e,rate:n,training:s=!1,count:r=1}=t,a=()=>Ld(e(),n),i=()=>zd(a,e,s);return!r||r<=1?Ca(i().clone()):Array(r).fill(void 0).map(i).map((t=>Ca(t.clone())))}Wg.className="StackedRNNCells",ka(Wg);var Gg,jg;class Hg extends Og{constructor(t){if(t.unroll)throw new Tp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Tp("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new vf({ndim:5})]}call(t,e){return Na((()=>{if(null!=this.cell.dropoutMask&&(Ta(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ta(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Np("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Na((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),r=ao([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t,e=!1){Na((()=>{if(!this.stateful)throw new _p("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Np("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ao(r))):this.states_=[ao(r)];else if(null==t)Ta(this.states_),null!=this.keptStates&&(Ta(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ao(r))):this.states_[0]=ao(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Np(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Ta(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=r;if(!D(n.shape,s))throw new Np(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Ca(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=gg(l,s[0],r,a[0],i[0]),h=gg(u,s[1],r,a[1],i[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Hg.className="ConvRNN2D";class qg extends Vg{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,Gp(this.filters,"filters"),this.kernelSize=mg(n,2,"kernelSize"),this.kernelSize.forEach((t=>Gp(t,"kernelSize"))),this.strides=mg(s||1,2,"strides"),this.strides.forEach((t=>Gp(t,"strides"))),this.padding=r||"valid",cd(this.padding),this.dataFormat=a||"channelsLast",ud(this.dataFormat),this.dilationRate=mg(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>Gp(t,"dilationRate")))}build(t){var e;t=mf(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Np(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends Bd{apply(t,e){return Sd([n.apply([s]),io([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Na((()=>{if(3!==t.length)throw new Np(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,s=t[0],r=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ug({ones:()=>oo(s),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Fi(e[n],t):t;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ug({ones:()=>oo(r),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,v]=So(this.kernel.read(),4,3),[w,k,_,I]=this.useBias?So(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,_,this.padding),h=this.inputConv(h,v,I,this.padding);const[N,T,C,S]=So(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,S);const $=this.recurrentActivation.apply(Oa(l,d)),A=this.recurrentActivation.apply(Oa(u,f)),E=Oa(Fi(A,a),Fi($,this.activation.apply(Oa(c,m)))),R=Fi(this.recurrentActivation.apply(Oa(h,g)),this.activation.apply(E));return[R,R,E]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n}(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(t,e,n,s){const r=ci(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Md(r,n,this.dataFormat):r}recurrentConv(t,e){return ci(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}qg.className="ConvLSTM2DCell",ka(qg);class Xg extends Hg{constructor(t){const e=new qg(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Xg.className="ConvLSTM2D",ka(Xg);class Kg extends Nf{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Na((()=>{this.invokeCallHook(t,e);const n=ff(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return zd((()=>Ld(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Kg.className="Dropout",ka(Kg);class Yg extends Kg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Yg.className="SpatialDropout1D",ka(Yg);class Zg extends Nf{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Gp(this.units,"units"),this.activation=ng(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=of(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=of(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=nd(t.kernelConstraint),this.biasConstraint=nd(t.biasConstraint),this.kernelRegularizer=lg(t.kernelRegularizer),this.biasRegularizer=lg(t.biasRegularizer),this.activityRegularizer=lg(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=mf(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=mf(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Na((()=>{this.invokeCallHook(t,e);const n=ff(t),s=Hp(this.activation.getClassName());let r;return null!=s?r=Rd(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Rd(n,this.kernel.read()),null!=this.bias&&(r=Md(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:tg(this.activation),useBias:this.useBias,kernelInitializer:af(this.kernelInitializer),biasInitializer:af(this.biasInitializer),kernelRegularizer:ig(this.kernelRegularizer),biasRegularizer:ig(this.biasRegularizer),activityRegularizer:ig(this.activityRegularizer),kernelConstraint:td(this.kernelConstraint),biasConstraint:td(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Zg.className="Dense",ka(Zg);class Jg extends Nf{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=mf(t);for(const e of t.slice(1))if(null==e)throw new Np(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],bd(t,1)]}call(t,e){return Na((()=>{this.invokeCallHook(t,e);let n=ff(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Np(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],bd(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Jg.className="Flatten",ka(Jg);class Qg extends Nf{constructor(t){super(t),this.supportsMasking=!0,this.activation=ng(t.activation)}call(t,e){return Na((()=>{this.invokeCallHook(t,e);const n=ff(t);return this.activation.apply(n)}))}getConfig(){const t={activation:tg(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Qg.className="Activation",ka(Qg);class ty extends Nf{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Na((()=>{return t=ff(t),e=t,n=this.n,Na((()=>{if(2!==e.shape.length)throw new Np(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Ad(Id(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}ty.className="RepeatVector",ka(ty);class ey extends Nf{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,a=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==a)throw new Np("Can only specifiy one unknown dimension.");a=t}else r*=e}const i=bd(t);if(null!==a){if(0===r||i%r!=0)throw new Np(n);s[a]=i/r}else if(i!==r)throw new Np(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Na((()=>{this.invokeCallHook(t,e);const n=ff(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}ey.className="Reshape",ka(ey);class ny extends Nf{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=kd(1,t.dims.length+1);if(!D(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new vf({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=mf(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return Vo(ff(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}ny.className="Permute",ka(ny);class sy extends Nf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ff(t);return Ma(so(n,this.maskValue),-1)}call(t,e){return Na((()=>{this.invokeCallHook(t,e);const n=ff(t),s=Ma(so(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}sy.className="Masking",ka(sy);class ry extends Nf{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Rp(t.inputLength))}this.inputDim=t.inputDim,Gp(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Gp(this.outputDim,"outputDim"),this.embeddingsInitializer=of(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=lg(t.embeddingsRegularizer),this.activityRegularizer=lg(t.activityRegularizer),this.embeddingsConstraint=nd(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Na((()=>this.maskZero?(t=ff(t),so(t,Po(t))):null))}computeOutputShape(t){if(t=mf(t),null==this.inputLength)return[...t,this.outputDim];const e=Rp(this.inputLength);if(e.length!==t.length-1)throw new Np(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],a=t[s+1];if(null!=r&&null!=a&&r!==a)throw new Np(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==r&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Na((()=>{this.invokeCallHook(t,e);let n=ff(t);return"int32"!==n.dtype&&(n=_d(n,"int32")),Dd(this.embeddings.read(),n.as1D()).reshape(mf(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:af(this.embeddingsInitializer),embeddingsRegularizer:ig(this.embeddingsRegularizer),activityRegularizer:ig(this.activityRegularizer),embeddingsConstraint:td(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}ry.className="Embedding",ka(ry);class ay extends Nf{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Tp}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],a=e[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Np("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[mf(t)]),(t=t).length<2)throw new Np(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=Vp(e),e.length>1)throw new Np(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===Vp(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Na((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const s=wd(n);for(let n of t){const t=n.rank;for(let e=0;e<s-t;++e)n=Id(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],a=t.slice(1).concat([r]);let i=s.reshape([r].concat(bd(t.slice(1))));i=Vo(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const r=kd(1,t).concat([0]);e.push(Vo(s,r)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const r=s.rank;if(n)if(null==r){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=Vo(s.reshape([-1,e]),[1,0]).reshape(n)}else if(r>1){const t=[r-1].concat(kd(0,r-1));s=Vo(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=Vp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Na((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Np("`mask` should be an Array");if(!Array.isArray(t))throw new Np("`inputs` should be an Array");if(e.length!==t.length)throw new Np(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:_i(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Pi(n,e[t]);return n}))}}class iy extends ay{constructor(t){super(t)}mergeFunction(t){return Na((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Oa(e,t[n]);return e}))}}iy.className="Add",ka(iy);class oy extends ay{constructor(t){super(t)}mergeFunction(t){return Na((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Fi(e,t[n]);return e}))}}oy.className="Multiply",ka(oy);class ly extends ay{constructor(t){super(t)}mergeFunction(t){return Na((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Oa(e,t[n]);return Fi(1/t.length,e)}))}}ly.className="Average",ka(ly);class uy extends ay{constructor(t){super(t)}mergeFunction(t){return Na((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Wi(e,t[n]);return e}))}}uy.className="Maximum",ka(uy);class cy extends ay{constructor(t){super(t)}mergeFunction(t){return Na((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ji(e,t[n]);return e}))}}cy.className="Minimum",ka(cy);class hy extends ay{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Np("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let r=!1;for(const t of n)if(D(t,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new Np("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Na((()=>Sd(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Np("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Np("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Np("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Np(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Na((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(oo(t[n]).asType("bool")):e[n].rank<t[n].rank?s.push(_i(e[n],-1)):s.push(e[n]);const r=ai(s,this.axis);return Fa(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function py(t,e){for(;t<0;)t+=e;return t}hy.className="Concatenate",ka(hy);class dy extends ay{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){S(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Tp("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new Np(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Np(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>py(e,t[n].shape.length))):[py(this.axes,n.shape.length),py(this.axes,s.shape.length)],this.normalize&&(n=Vf(n,e[0]),s=Vf(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Tp("batchDot is not implemented for tensors of 4D or higher rank yet");if(S(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),S(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Tp("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,r=e.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return Na((()=>{let n,i;if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,s=a[1]===e.shape.length-1;i=t.matMul(e,n,s)}if(n>0){let t;t=s>r?s+r-3:s-1;const e=[];for(let s=t;s<t+n;++s)e.push(s);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[py(this.axes,t.length),py(this.axes,e.length)],n}computeOutputShape(t){S(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Tp("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}dy.className="Dot",ka(dy);class fy extends Nf{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Na((()=>{this.invokeCallHook(t,e);const n=ff(t);return zd((()=>Ed(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}fy.className="GaussianNoise",ka(fy);class my extends Nf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Na((()=>{this.invokeCallHook(t,e);const n=ff(t);return this.rate>0&&this.rate<1?zd((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ed(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}my.className="GaussianDropout",ka(my);class gy extends Nf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ff(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Na((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return zd((()=>{const e=ff(t),s=-1.7580993408473766;let r=Ai(mo(n),this.rate);r=_d(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate;return e.mul(r).add(r.add(-1).mul(s)).mul(a).add(i)}),(()=>ff(t)),e.training||!1)}return t}))}}function yy(t,e,n,s,r,a=.001){let i;if(2===t.rank)i=ei(t,e,n,s,r,a);else if(3===t.rank)i=ni(t,e,n,s,r,a);else{if(4!==t.rank)throw new Tp(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=si(t,e,n,s,r,a)}return i}gy.className="AlphaDropout",ka(gy);class by extends Nf{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=of(t.betaInitializer||"zeros"),this.gammaInitializer=of(t.gammaInitializer||"ones"),this.movingMeanInitializer=of(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=of(t.movingVarianceInitializer||"ones"),this.betaConstraint=nd(t.betaConstraint),this.gammaConstraint=nd(t.gammaConstraint),this.betaRegularizer=lg(t.betaRegularizer),this.gammaRegularizer=lg(t.gammaRegularizer)}build(t){t=mf(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Np(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new vf({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Na((()=>{const n=null!=e.training&&e.training,s=ff(t),r=s.shape,a=r.length,i=kd(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Sp(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!D(u,kd(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return yy(s,t,e,n,r,this.epsilon)}return yy(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(t,e,n,s,r=.001){return D(s.slice().sort(),kd(0,t.rank-1))?function(t,e,n,s,r=.001){return Na((()=>{const a=eo(t,s),i=a.mean,o=a.variance;return[yy(t,i,o,n,e,r),i,o]}))}(t,e,n,s,r):function(t,e,n,s,r=.001){return Na((()=>{const a=eo(t,s),i=a.mean,o=a.variance,l=[];for(const e of kd(0,t.rank))-1!==s.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=i.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),p=null==n?null:n.reshape(l);return[yy(t,u,c,p,h,r),i,o]}))}(t,e,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(t,e,n)=>{Na((()=>{const s=1-n,r=t.read(),a=r.sub(e).mul(s);t.write(r.sub(a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:af(this.betaInitializer),gammaInitializer:af(this.gammaInitializer),movingMeanInitializer:af(this.movingMeanInitializer),movingVarianceInitializer:af(this.movingVarianceInitializer),betaRegularizer:ig(this.betaRegularizer),gammaRegularizer:ig(this.gammaRegularizer),betaConstraint:td(this.betaConstraint),gammaConstraint:td(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}by.className="BatchNormalization",ka(by);class xy extends Nf{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=of(t.betaInitializer||"zeros"),this.gammaInitializer=of(t.gammaInitializer||"ones"),this.betaRegularizer=lg(t.betaRegularizer),this.gammaRegularizer=lg(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=mf(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==Vp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=ff(t),s=n.shape,r=s.length;return Na((()=>{let{mean:t,variance:e}=eo(n,this.axis,!0);const a=Sp(1,r);for(const t of this.axis)a[t]=s[t];const i=t=>null!=t&&t.shape.length!==r&&this.axis!==[r-1]?t.reshape(a):t;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let t=0;t<r;++t)-1!==this.axis.indexOf(t)?(u.push(s[t]),c.push(1)):(u.push(1),c.push(s[t]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),yy(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:af(this.betaInitializer),gammaInitializer:af(this.gammaInitializer),betaRegularizer:ig(this.betaRegularizer),gammaRegularizer:ig(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}xy.className="LayerNormalization",ka(xy);class vy extends Nf{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Np(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Np(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Np(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new vf({ndim:4})]}computeOutputShape(t){let e,n;return t=mf(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Na((()=>{return e=ff(t),n=this.padding,s=this.dataFormat,Na((()=>{if(4!==e.rank)throw new Np(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Np("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Np(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],lo(e,t)}));var e,n,s}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function wy(t,e,n,s,r,a){return Na((()=>{let i;ud(r),hd(a),cd(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),t=bg(t,r);const o="same"===s?"same":"valid";return i="max"===a?Vi(t,e,n,o):Ja(t,e,n,o),"channelsFirst"===r&&(i=Vo(i,[0,3,1,2])),i}))}function ky(t,e,n,s,r,a){return Na((()=>{let i;ud(r),hd(a),cd(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),t=xg(t,r);const o="same"===s?"same":"valid";return i="max"===a?Bi(t,e,n,o):Qa(t,e,n,o),"channelsFirst"===r&&(i=Vo(i,[0,4,1,2,3])),i}))}vy.className="ZeroPadding2D",ka(vy);class _y extends Nf{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Np(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Gp(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Np(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Gp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,cd(this.padding),this.inputSpec=[new vf({ndim:3})]}computeOutputShape(t){const e=gg((t=mf(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Na((()=>{this.invokeCallHook(t,e),t=Id(ff(t),2);const n=this.poolingFunction(ff(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ao(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Iy extends _y{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return ud(r),cd(s),wy(t,e,n,s,r,"max")}}Iy.className="MaxPooling1D",ka(Iy);class Ny extends _y{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return ud(r),cd(s),wy(t,e,n,s,r,"avg")}}Ny.className="AveragePooling1D",ka(Ny);class Ty extends Nf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Np(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Gp(this.poolSize,"poolSize"),Gp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ud(this.dataFormat),cd(this.padding),this.inputSpec=[new vf({ndim:4})]}computeOutputShape(t){t=mf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=gg(e,this.poolSize[0],this.padding,this.strides[0]),n=gg(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Na((()=>(this.invokeCallHook(t,e),this.poolingFunction(ff(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Cy extends Ty{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return ud(r),cd(s),wy(t,e,n,s,r,"max")}}Cy.className="MaxPooling2D",ka(Cy);class Sy extends Ty{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return ud(r),cd(s),wy(t,e,n,s,r,"avg")}}Sy.className="AveragePooling2D",ka(Sy);class $y extends Nf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Np(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Gp(this.poolSize,"poolSize"),Gp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ud(this.dataFormat),cd(this.padding),this.inputSpec=[new vf({ndim:5})]}computeOutputShape(t){t=mf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=gg(e,this.poolSize[0],this.padding,this.strides[0]),n=gg(n,this.poolSize[1],this.padding,this.strides[1]),s=gg(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return Na((()=>(this.invokeCallHook(t,e),this.poolingFunction(ff(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ay extends $y{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return ud(r),cd(s),ky(t,e,n,s,r,"max")}}Ay.className="MaxPooling3D",ka(Ay);class Ey extends $y{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return ud(r),cd(s),ky(t,e,n,s,r,"avg")}}Ey.className="AveragePooling3D",ka(Ey);class Ry extends Nf{constructor(t){super(t),this.inputSpec=[new vf({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Tp}}class Dy extends Ry{constructor(t){super(t||{})}call(t,e){return Na((()=>{const e=ff(t);return Ui(e,1)}))}}Dy.className="GlobalAveragePooling1D",ka(Dy);class Oy extends Ry{constructor(t){super(t||{})}call(t,e){return Na((()=>{const e=ff(t);return Oi(e,1)}))}}Oy.className="GlobalMaxPooling1D",ka(Oy);class Fy extends Nf{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ud(this.dataFormat),this.inputSpec=[new vf({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Tp}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class My extends Fy{call(t,e){return Na((()=>{const e=ff(t);return"channelsLast"===this.dataFormat?Ui(e,[1,2]):Ui(e,[2,3])}))}}My.className="GlobalAveragePooling2D",ka(My);class Ly extends Fy{call(t,e){return Na((()=>{const e=ff(t);return"channelsLast"===this.dataFormat?Oi(e,[1,2]):Oi(e,[2,3])}))}}Ly.className="GlobalMaxPooling2D",ka(Ly);class zy extends Nf{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=Pf(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class Py extends zy{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=mf(t)).length<3)throw new Np(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=mf(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return Na((()=>Dg(((t,n)=>[ff(this.layer.call(t,e)),[]]),t=ff(t),[],!1,null,null,!1,!0)[1]))}}Py.className="TimeDistributed",ka(Py);class Vy extends zy{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Pf(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=Pf(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,Wp(od,"BidirectionalMergeMode",r),t.weights)throw new Tp("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),e=r[0]):e=r[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):Ep(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=Rg(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new Np("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const s=n.map((t=>new vf({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),i.push(...s)}if(null!=s)throw new Tp("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof wf;for(const t of a)if(t instanceof wf!==o)throw new Np("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return Na((()=>{const n=e.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=yo(r,1)),"concat"===this.mergeMode?i=Sd([s,r]):"sum"===this.mergeMode?i=Oa(s,r):"ave"===this.mergeMode?i=Fi(.5,Oa(s,r)):"mul"===this.mergeMode?i=Fi(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){dd(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),dd(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Pf(e.layer);if(delete e.layer,null!=e.numConstants)throw new Tp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}Vy.className="Bidirectional",ka(Vy),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Gg||(Gg={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(jg||(jg={}));const By={};function Wy(t){return By[t]}function Uy(t,e,n,s,r){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return Gy(e.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return e.inputNames.slice(t,i).map((t=>Gy(t,n,s,r)));const o=Gy(e.inputNames.slice(t)[0],n,s,r),l=o.dataSync();return"number"===a.type?l[0]:Q(o.shape,l)}const i=e.attrParams[t];return i&&i.value}function Gy(t,e,n,s){const[r,a]=qy(t);if(null!=s){const t=s.getHashTableHandleByName(r);if(null!=t)return t}const i=n.currentContextIds.find((t=>!!e[Hy(r,t)]));return void 0!==i?e[Hy(r,i)][a]:void 0}function jy(t,e){const[n,s]=qy(t);return[Hy(n,e&&e.currentContextId),s]}function Hy(t,e){return e?`${t}-${e}`:t}function qy(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function Xy(t,e,n){let s=Uy("pad",t,e,n);if("explicit"===s){s=Uy("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)r[t][0]=s[2*t],r[t][1]=s[2*t+1];return r}return s}function Ky(t){return t.kept?t:Hr(t)}const Yy=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Zy=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Jy=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Qy=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],tb=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],eb=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nb=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],sb=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],rb=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],ab=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],ib=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ob=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lb=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],ub=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],cb=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],hb=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],pb=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class db{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[r,a,i,o,l,u,c,f,d,h,m,g,y,b,x,v,p].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,s=[],r=[],a=[],i=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?s.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t)),{});let o=[];const l=[];let u={},c={};null!=e&&(u=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach((t=>{const e=i[t];e.inputNames.forEach((t=>{const[n]=jy(t);e.inputs.push(i[n]),i[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=i[t];0===e.children.length&&l.push(e)})):Object.keys(c).forEach((t=>{const[e]=jy(t),n=i[e];null!=n&&(n.signatureKey=c[t],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((t=>{const[e]=jy(t),n=i[e];n&&(n.signatureKey=u[t],o.push(n))})):o=s;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:i,inputs:o,outputs:l,weights:r,placeholders:s,signature:e,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=Wy(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const s=n.type;let r;switch(n.type){case"string":r=mb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=Nb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Nb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=yb(t.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=yb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=Ib(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ib(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=gb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=Cb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Cb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=_b(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_b(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=Tb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Tb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=vb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=wb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=xb(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xb(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:r,type:s},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let s={};null!=e&&(s=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const r=[],a=[];t.signature.inputArg.forEach((t=>{const[e]=jy(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:bb(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,r.push(n),s[e]=n})),Object.keys(s).forEach((t=>{const e=s[t];e.inputNames.forEach((t=>{const[n]=jy(t);e.inputs.push(s[n]),s[n].children.push(e)}))}));const i=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=jy(i[t.name]),r=s[e];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(t);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function fb(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=lt().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function mb(t,e,n,s=!1){const r=t[e];return null!=r?fb(r.s,s):n}function gb(t,e,n){const s=t[e];return s?s.b:n}function yb(t,e,n){const s=t[e]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function bb(t){switch("string"==typeof t&&(t=Gg[t]),t){case Gg.DT_FLOAT:return"float32";case Gg.DT_INT32:case Gg.DT_INT64:case Gg.DT_INT8:case Gg.DT_UINT8:return"int32";case Gg.DT_BOOL:return"bool";case Gg.DT_DOUBLE:return"float32";case Gg.DT_STRING:return"string";default:return null}}function xb(t,e,n){const s=t[e];return s&&s.func?s.func.name:n}function vb(t,e,n){const s=t[e];return s&&s.type?bb(s.type):n}function wb(t,e,n){const s=t[e];return s&&s.list&&s.list.type?s.list.type.map((t=>bb(t))):n}function kb(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function _b(t,e,n){const s=t[e];return s&&s.shape?kb(s.shape):n}function Ib(t,e,n){const s=t[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function Nb(t,e,n,s=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map((t=>fb(t,s))):n}function Tb(t,e,n){const s=t[e];return s&&s.list&&s.list.shape?s.list.shape.map((t=>kb(t))):n}function Cb(t,e,n){const s=t[e];return s&&s.list&&s.list.b?s.list.b:n}class Sb{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return Gy(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Gy(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return yb(this.node.rawAttrs,t,e);if(null!=n.s)return mb(this.node.rawAttrs,t,e);if(null!=n.b)return gb(this.node.rawAttrs,t,e);if(null!=n.shape)return _b(this.node.rawAttrs,t,e);if(null!=n.type)return vb(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Ib(this.node.rawAttrs,t,e);if(null!=n.list.s)return Nb(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Tb(this.node.rawAttrs,t,e);if(null!=n.list.b)return Cb(this.node.rawAttrs,t,e);if(null!=n.list.type)return wb(this.node.rawAttrs,t,e)}return e}}const $b=or({addN_:function(t){S(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),S(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>ar(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!D(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=e;return Zs.runKernel(yt,s)}});function Ab(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){S(t.length===e.length,(()=>n+` Shapes ${t} and ${e} must match`));for(let s=0;s<t.length;s++){const r=t[s],a=e[s];S(r<0||a<0||r===a,(()=>n+` Shapes ${t} and ${e} must match`))}}}function Eb(t){return"number"!=typeof t&&!t.some((t=>t<0))}function Rb(t,e,n){let s=Db(t,n);const r=!Eb(s);if(r&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach((t=>{s=Db(t.shape,s)})),!Eb(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Db(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let s=0;s<t.length;++s){const r=t[s],a=e[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[s]=r>=0?r:a}return n}class Ob{constructor(t,e,n,s,r,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ea(0),Ca(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Ab(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Ca(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return cr([],[0].concat(this.elementShape));const n=this.readMany(t);return Ab(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Eo(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return cr([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return Ab(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ai(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Mo(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const s=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:e.size/n,a=[];Na((()=>{e=Za(e,[1,n,r]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,t[n],r];a[n]=Za(wo(e,i,o),this.elementShape)}return a}));const i=[];for(let e=0;e<t.length;e++)i[e]=e;this.writeMany(i,a)}}class Fb{constructor(t,e,n,s=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);Ab(e,t.shape,"TensorList shape mismatch: "),Ca(t)})),this.idTensor=Ea(0),this.maxNumElements=s,Ca(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Fb([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Ab(t,this.elementShape,"TensorList shape mismatch: ");const s=Rb(this.elementShape,this.tensors,t);return Na((()=>{const t=this.tensors.map((t=>Za(t,s)));return Eo(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Rb(this.elementShape,this.tensors,t),s=this.tensors.pop();return Ab(s.shape,t,"TensorList shape mismatch: "),Za(s,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Ab(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ca(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);Ab(this.tensors[t].shape,e,"TensorList shape mismatch: ");const s=Rb(this.elementShape,this.tensors,e);return Za(this.tensors[t],s)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Ab(this.elementShape,e.shape,"TensorList shape mismatch: "),Ca(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Ab(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const s=Rb(this.elementShape,this.tensors,n);return 0===t.length?cr([],[0].concat(s)):Na((()=>{const e=t.map((t=>Za(this.tensors[t],s)));return Eo(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Ab(this.elementShape,e,"TensorList shape mismatch: ");const n=Rb(this.elementShape,this.tensors,e);return 0===this.size()?cr([],[0].concat(n)):Na((()=>{const t=this.tensors.map((t=>Za(t,n)));return ai(t,0)}))}}const Mb=or({maxPoolWithArgmax_:function(t,e,n,s,r=!1){const a={x:ar(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:s,includeBatchInIndex:r},o=Zs.runKernel(He,a,i);return{result:o[0],indexes:o[1]}}});function Lb(t,e,n){const[s,r]=Uy("fusedOps",t,e,n),a="biasadd"===s,i="prelu"===r,o="fusedbatchnorm"===s,l=Uy("numArgs",t,e,n);if(a){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const u=Uy("strides",t,e,n),c=Xy(t,e,n),h=Uy("dataFormat",t,e,n).toUpperCase(),p=Uy("dilations",t,e,n),[d,f]=Uy("args",t,e,n);return{stride:u,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:r,leakyreluAlpha:Uy("leakyreluAlpha",t,e,n)}}function zb(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return Zs.runKernel(Re,{},s)}const Pb=or({multinomial_:function(t,e,n,s=!1){const r=ar(t,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Za(r,[1,-1]):r},l={numSamples:e,seed:n,normalized:s},u=Zs.runKernel(Je,o,l);return 1===i?Za(u,[u.size]):u}}),Vb=async function(t){const e=ar(t,"condition","whereAsync","bool"),n=await e.data(),s=Vu(e.shape,n);return t!==e&&e.dispose(),s};function Bb(t,e,n){return{boxes:Uy("boxes",t,e,n),scores:Uy("scores",t,e,n),maxOutputSize:Uy("maxOutputSize",t,e,n),iouThreshold:Uy("iouThreshold",t,e,n),scoreThreshold:Uy("scoreThreshold",t,e,n),softNmsSigma:Uy("softNmsSigma",t,e,n)}}class Wb{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Ea(0),this.tensorMap=new Map,Ca(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ea(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),Na((()=>{const t=Mo(e),s=n.length,r=t.length;S(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let e=0;e<s;e++){const s=n[e],r=t[e];Ca(r),this.tensorMap.set(s,r)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Na((()=>{const t=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,e);t.push(a)}return Eo(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}const Ub=or({sparseToDense_:function(t,e,n,s=0){const r=ar(t,"sparseIndices","sparseToDense","int32"),a=ar(e,"sparseValues","sparseToDense"),i=ar(s,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,s){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const r=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},l={outputShape:n};return Zs.runKernel(Un,o,l)}}),Gb=or({bincount_:function(t,e,n){const s=ar(t,"x","bincount"),r=ar(e,"weights","bincount");S("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),S(n>=0,(()=>`size must be non-negative, but got ${n}.`)),S(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return Zs.runKernel(Dt,a,i)}}),jb=or({denseBincount_:function(t,e,n,s=!1){const r=ar(t,"x","denseBincount"),a=ar(e,"weights","denseBincount");S("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),S(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),S(n>=0,(()=>`size must be non-negative, but got ${n}.`)),S(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return Zs.runKernel(Yt,i,o)}}),Hb=or({scatterND_:function(t,e,n){const s=ar(t,"indices","scatterND","int32"),r=ar(e,"updates","scatterND");fu(r,s,n);const a={indices:s,updates:r},i={shape:n};return Zs.runKernel(Tn,a,i)}}),qb=or({gatherND_:function(t,e){const n=ar(e,"indices","gatherND","int32"),s={params:ar(t,"x","gatherND"),indices:n};return Zs.runKernel(ve,s)}});function Xb(t,e,n,s){const r=((t,e,n)=>{switch(t.category){case"arithmetic":return Na((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[Oa(Uy("a",t,e,n),Uy("b",t,e,n))];case"AddN":return[$b(Uy("tensors",t,e,n))];case"FloorMod":case"Mod":return[hp(Uy("a",t,e,n),Uy("b",t,e,n))];case"Mul":return[Fi(Uy("a",t,e,n),Uy("b",t,e,n))];case"RealDiv":case"Div":return[yi(Uy("a",t,e,n),Uy("b",t,e,n))];case"DivNoNan":return[Qh(Uy("a",t,e,n),Uy("b",t,e,n))];case"FloorDiv":return[gi(Uy("a",t,e,n),Uy("b",t,e,n))];case"Sub":return[Mi(Uy("a",t,e,n),Uy("b",t,e,n))];case"Minimum":return[ji(Uy("a",t,e,n),Uy("b",t,e,n))];case"Maximum":return[Wi(Uy("a",t,e,n),Uy("b",t,e,n))];case"Pow":return[Rl(Uy("a",t,e,n),Uy("b",t,e,n))];case"SquaredDifference":return[Vl(Uy("a",t,e,n),Uy("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return Na((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Da(Uy("x",t,e,n))];case"Acos":return[Wh(Uy("x",t,e,n))];case"Acosh":return[Uh(Uy("x",t,e,n))];case"Asin":return[jh(Uy("x",t,e,n))];case"Asinh":return[Hh(Uy("x",t,e,n))];case"Atan":return[qh(Uy("x",t,e,n))];case"Atan2":return[Xh(Uy("x",t,e,n),Uy("y",t,e,n))];case"Atanh":return[Kh(Uy("x",t,e,n))];case"Ceil":return[Yh(Uy("x",t,e,n))];case"Complex":return[lr(Uy("real",t,e,n),Uy("imag",t,e,n))];case"Cos":return[Eh(Uy("x",t,e,n))];case"Cosh":return[Dh(Uy("x",t,e,n))];case"Elu":return[bi(Uy("x",t,e,n))];case"Erf":return[ep(Uy("x",t,e,n))];case"Exp":return[Di(Uy("x",t,e,n))];case"Expm1":return[np(Uy("x",t,e,n))];case"Floor":return[Ci(Uy("x",t,e,n))];case"Log":return[Ri(Uy("x",t,e,n))];case"Log1p":return[Bl(Uy("x",t,e,n))];case"Imag":return[Wo(Uy("x",t,e,n))];case"Neg":return[no(Uy("x",t,e,n))];case"Reciprocal":return[fp(Uy("x",t,e,n))];case"Real":return[Uo(Uy("x",t,e,n))];case"Relu":return[go(Uy("x",t,e,n))];case"Round":return[mp(Uy("x",t,e,n))];case"Selu":return[bo(Uy("x",t,e,n))];case"Sigmoid":return[vo(Uy("x",t,e,n))];case"Sin":return[yc(Uy("x",t,e,n))];case"Sign":return[gp(Uy("x",t,e,n))];case"Sinh":return[xc(Uy("x",t,e,n))];case"Softplus":return[Co(Uy("x",t,e,n))];case"Sqrt":return[$o(Uy("x",t,e,n))];case"Square":return[to(Uy("x",t,e,n))];case"Tanh":return[Ro(Uy("x",t,e,n))];case"Tan":return[bp(Uy("x",t,e,n))];case"ClipByValue":return[ri(Uy("x",t,e,n),Uy("clipValueMin",t,e,n),Uy("clipValueMax",t,e,n))];case"Relu6":return[Ko(Uy("x",t,e,n))];case"Rsqrt":return[Rc(Gy(t.inputNames[0],e,n))];case"Prod":return[dp(Uy("x",t,e,n),Uy("axes",t,e,n))];case"LeakyRelu":return[Ei(Uy("x",t,e,n),Uy("alpha",t,e,n))];case"Prelu":return[uo(Uy("x",t,e,n),Uy("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const s=Uy("thenBranch",t,e,n),r=Uy("elseBranch",t,e,n),a=Uy("cond",t,e,n),i=Uy("args",t,e,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=Uy("body",t,e,n),r=Uy("cond",t,e,n),a=Uy("args",t,e,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((t=>t.id));let l=await i[0].data();i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let u=a;for(;l[0];){const t=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const e=u.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return u}case"LoopCond":return[Ky(Uy("pred",t,e,n))];case"Switch":{const s=Uy("pred",t,e,n);let r=Uy("data",t,e,n);return r.kept||(r=Ky(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=t.inputNames.find((t=>void 0!==Gy(t,e,n)));return s?[Ky(Gy(s,e,n))]:void 0}case"Enter":{const s=Uy("frameName",t,e,n),r=Uy("tensor",t,e,n);return n.enterFrame(s),[Ky(r)]}case"Exit":{const s=Uy("tensor",t,e,n);return n.exitFrame(),[Ky(s)]}case"NextIteration":{const s=Uy("tensor",t,e,n);return n.nextIteration(),[Ky(s)]}case"TensorArrayV3":{const s=Uy("size",t,e,n),r=Uy("dtype",t,e,n),a=Uy("elementShape",t,e,n),i=Uy("dynamicSize",t,e,n),o=Uy("clearAfterRead",t,e,n),l=Uy("identicalElementShapes",t,e,n),u=Uy("name",t,e,n),c=new Ob(u,r,s,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Ea(1)]}case"TensorArrayWriteV3":{const s=Uy("tensorArrayId",t,e,n),r=Uy("index",t,e,n),a=Uy("tensor",t,e,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=Uy("tensorArrayId",t,e,n),r=Uy("index",t,e,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=Uy("tensorArrayId",t,e,n),r=Uy("indices",t,e,n),a=Uy("dtype",t,e,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=Uy("tensorArrayId",t,e,n),r=Uy("indices",t,e,n),a=Uy("tensor",t,e,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=Uy("tensorArrayId",t,e,n),r=n.getTensorArray(s.id),a=Uy("dtype",t,e,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=Uy("tensorArrayId",t,e,n),r=Uy("tensor",t,e,n),a=Uy("lengths",t,e,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=Uy("tensorArrayId",t,e,n);return[Ea(n.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=Uy("tensorArrayId",t,e,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=Uy("tensorListId",t,e,n),r=Uy("index",t,e,n),a=Uy("tensor",t,e,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=Uy("tensorListId",t,e,n),r=Uy("index",t,e,n),a=Uy("elementShape",t,e,n),i=Uy("elementDType",t,e,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=Uy("indices",t,e,n),r=function(t,e,n,s){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new Fb([],n,t.dtype,s),i=Mo(t,0);return e.forEach(((t,e)=>{a.setItem(t,i[e])})),a}(Uy("tensor",t,e,n),s,Uy("elementShape",t,e,n),Uy("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=Uy("elementShape",t,e,n),r=Uy("elementDType",t,e,n);let a;a="TensorListReserve"===t.op?"numElements":"maxNumElements";const i=function(t,e,n){return new Fb([],t,e,n)}(s,r,Uy(a,t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=Uy("tensorListId",t,e,n),r=Uy("indices",t,e,n),a=Uy("elementShape",t,e,n),i=Uy("elementDType",t,e,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=Uy("tensorListId",t,e,n),r=Uy("elementShape",t,e,n),a=Uy("elementDType",t,e,n),i=Uy("numElements",t,e,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(t,e,n){const s=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);Ab(t.shape.slice(1),e,"TensorList shape mismatch: ");const r=Mo(t);return new Fb(r,e,s)}(Uy("tensor",t,e,n),Uy("elementShape",t,e,n),Uy("elementDType",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const s=Uy("tensorListId",t,e,n),r=n.getTensorList(s.id),a=Uy("dtype",t,e,n),i=Uy("elementShape",t,e,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=Uy("tensorListId",t,e,n),r=Uy("tensor",t,e,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=Uy("tensorListId",t,e,n),r=Uy("elementShape",t,e,n),a=Uy("elementDType",t,e,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=Uy("tensor",t,e,n),r=Uy("elementShape",t,e,n),a=function(t,e,n){let s=0;const r=e.map((t=>(s+=t,s)));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${t.shape}`);const a=Db(t.shape.slice(1),n),i=0===s?0:t.size/s,o=Na((()=>{const n=[];t=Za(t,[1,s,i]);for(let s=0;s<e.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,e[s],i];n[s]=Za(wo(t,o,l),a)}return t.dispose(),n})),l=new Fb([],n,t.dtype,e.length);for(let t=0;t<o.length;t++)l.setItem(t,o[t]);return l}(s,Uy("lengths",t,e,n),r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return Na((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const s=Uy("stride",t,e,n),r=Uy("pad",t,e,n),a=Uy("dataFormat",t,e,n).toUpperCase(),i=Uy("dilation",t,e,n);return[hi(Uy("x",t,e,n),Uy("filter",t,e,n),s,r,a,i)]}case"Conv2D":{const s=Uy("strides",t,e,n),r=Xy(t,e,n),a=Uy("dataFormat",t,e,n).toUpperCase(),i=Uy("dilations",t,e,n);return[ci(Uy("x",t,e,n),Uy("filter",t,e,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Lb(t,e,n);return[el({x:Uy("x",t,e,n),filter:Uy("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Lb(t,e,n);return[rl({x:Uy("x",t,e,n),filter:Uy("filter",t,e,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Uy("outputShape",t,e,n),r=Uy("strides",t,e,n),a=Xy(t,e,n);return[di(Uy("x",t,e,n),Uy("filter",t,e,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Uy("strides",t,e,n),r=Xy(t,e,n),a=Uy("dilations",t,e,n),i=Uy("dataFormat",t,e,n).toUpperCase();return[mi(Uy("input",t,e,n),Uy("filter",t,e,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const s=Uy("strides",t,e,n),r=Uy("pad",t,e,n),a=Uy("dataFormat",t,e,n).toUpperCase(),i=Uy("dilations",t,e,n);return[fi(Uy("x",t,e,n),Uy("filter",t,e,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=Uy("strides",t,e,n),r=Uy("pad",t,e,n),a=Uy("kernelSize",t,e,n);return[Ja(Uy("x",t,e,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=Uy("strides",t,e,n),r=Uy("pad",t,e,n),a=Uy("kernelSize",t,e,n);return[Vi(Uy("x",t,e,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=Uy("strides",t,e,n),r=Uy("pad",t,e,n),a=Uy("kernelSize",t,e,n),i=Uy("includeBatchInIndex",t,e,n),{result:o,indexes:l}=Mb(Uy("x",t,e,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,l]}case"AvgPool3D":{const s=Uy("strides",t,e,n),r=Uy("pad",t,e,n),a=Uy("kernelSize",t,e,n);return[Qa(Uy("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=Uy("strides",t,e,n),r=Uy("pad",t,e,n),a=Uy("kernelSize",t,e,n);return[Bi(Uy("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=Uy("strides",t,e,n),r=Uy("pad",t,e,n),a=Uy("dilations",t,e,n),i=s[1],o=s[2],l=a[1],u=a[2];return[Jh(Uy("x",t,e,n),Uy("filter",t,e,n),[i,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return Na((()=>((t,e,n)=>{switch(t.op){case"Fill":{const s=Uy("shape",t,e,n),r=Uy("dtype",t,e,n);return[Ti(s,Uy("value",t,e,n),r)]}case"LinSpace":return[zb(Uy("start",t,e,n),Uy("stop",t,e,n),Uy("num",t,e,n))];case"Multinomial":{const s=Uy("logits",t,e,n),r=Uy("numSamples",t,e,n),a=Uy("seed",t,e,n);return[Pb(s,r,a)]}case"OneHot":{const s=Uy("indices",t,e,n),r=Uy("depth",t,e,n),a=Uy("onValue",t,e,n),i=Uy("offValue",t,e,n);return[ro(s,r,a,i)]}case"Ones":return[io(Uy("shape",t,e,n),Uy("dtype",t,e,n))];case"OnesLike":return[oo(Uy("x",t,e,n))];case"RandomUniform":return[mo(Uy("shape",t,e,n),Uy("minval",t,e,n),Uy("maxval",t,e,n),Uy("dtype",t,e,n))];case"Range":return[Al(Uy("start",t,e,n),Uy("stop",t,e,n),Uy("step",t,e,n),Uy("dtype",t,e,n))];case"TruncatedNormal":{const s=Uy("shape",t,e,n),r=Uy("mean",t,e,n),a=Uy("stdDev",t,e,n),i=Uy("seed",t,e,n);return[Fo(s,r,a,Uy("dtype",t,e,n),i)]}case"Zeros":return[ao(Uy("shape",t,e,n),Uy("dtype",t,e,n))];case"ZerosLike":return[Po(Uy("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=Bb(t,e,n),u=await Ul.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Bb(t,e,n),l=Uy("padToMaxOutputSize",t,e,n),u=await Ul.nonMaxSuppressionPaddedAsync(s,r,a,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Bb(t,e,n);return[await Ul.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{const s=jr(Uy("condition",t,e,n),"bool"),r=[await Vb(s)];return s.dispose(),r}case"ListDiff":return async function(t,e){const n=ar(t,"x","setdiff1d"),s=ar(e,"y","setdiff1d");S(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),S(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),S(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let t=0;t<r.length;t++)i.has(r[t])||o++;const l=new Ss([o],n.dtype),u=new Ss([o],"int32");for(let t=0,e=0;t<r.length;t++)i.has(r[t])||(l.values[e]=r[t],u.values[e]=t,e++);return[l.toTensor(),u.toTensor()]}(Uy("x",t,e,n),Uy("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return Na((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const s=Uy("x",t,e,n),r=Uy("k",t,e,n),a=Uy("sorted",t,e,n),i=xp(s,r,a);return[i.values,i.indices]}case"Unique":{const s=Uy("x",t,e,n),r=vp(s);return[r.values,r.indices]}case"UniqueV2":{const s=Uy("x",t,e,n),r=Uy("axis",t,e,n),a=vp(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return Na((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const s=Uy("images",t,e,n),r=Uy("size",t,e,n),a=Uy("alignCorners",t,e,n),i=Uy("halfPixelCenters",t,e,n);return[Ul.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const s=Uy("images",t,e,n),r=Uy("size",t,e,n),a=Uy("alignCorners",t,e,n),i=Uy("halfPixelCenters",t,e,n);return[Ul.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{const s=Uy("image",t,e,n),r=Uy("boxes",t,e,n),a=Uy("boxInd",t,e,n),i=Uy("cropSize",t,e,n),o=Uy("method",t,e,n),l=Uy("extrapolationValue",t,e,n);return[Ul.cropAndResize(s,r,a,i,o,l)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return Na((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=Uy("default",t,e,n);return[Gy(t.name,e,n)||s];case"Placeholder":return[Gy(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Ky(Uy("x",t,e,n))];case"IdentityN":return Uy("x",t,e,n).map((t=>Ky(t)));case"Snapshot":return[Ky(Uy("x",t,e,n))];case"Shape":return[Do(Uy("x",t,e,n).shape,"int32")];case"ShapeN":return Uy("x",t,e,n).map((t=>Do(t.shape)));case"Size":return[Ea(Uy("x",t,e,n).size,"int32")];case"Rank":return[Ea(Uy("x",t,e,n).rank,"int32")];case"NoOp":return[Ea(1)];case"Print":const r=Uy("x",t,e,n),a=Uy("data",t,e,n),i=Uy("message",t,e,n),o=Uy("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return Na((()=>((t,e,n)=>{switch(t.op){case"Equal":return[ki(Uy("a",t,e,n),Uy("b",t,e,n))];case"NotEqual":return[so(Uy("a",t,e,n),Uy("b",t,e,n))];case"Greater":return[$i(Uy("a",t,e,n),Uy("b",t,e,n))];case"GreaterEqual":return[Ai(Uy("a",t,e,n),Uy("b",t,e,n))];case"Less":return[Zc(Uy("a",t,e,n),Uy("b",t,e,n))];case"LessEqual":return[$l(Uy("a",t,e,n),Uy("b",t,e,n))];case"LogicalAnd":return[Pi(Uy("a",t,e,n),Uy("b",t,e,n))];case"LogicalNot":return[Th(Uy("a",t,e,n))];case"LogicalOr":return[lp(Uy("a",t,e,n),Uy("b",t,e,n))];case"Select":case"SelectV2":return[zo(Uy("condition",t,e,n),Uy("a",t,e,n),Uy("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return Na((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[al(Uy("a",t,e,n),Uy("b",t,e,n),Uy("transposeA",t,e,n),Uy("transposeB",t,e,n))];case"Transpose":return[Vo(Uy("x",t,e,n),Uy("perm",t,e,n))];case"_FusedMatMul":const[s,r]=Uy("fusedOps",t,e,n),a="biasadd"===s,i="prelu"===r,o=Uy("numArgs",t,e,n),l=Uy("leakyreluAlpha",t,e,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=Uy("args",t,e,n);return[il({a:Uy("a",t,e,n),b:Uy("b",t,e,n),transposeA:Uy("transposeA",t,e,n),transposeB:Uy("transposeB",t,e,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return Na((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ti(Uy("x",t,e,n),Uy("mean",t,e,n),Uy("variance",t,e,n),Uy("offset",t,e,n),Uy("scale",t,e,n),Uy("epsilon",t,e,n))];case"LRN":return[ip(Uy("x",t,e,n),Uy("radius",t,e,n),Uy("bias",t,e,n),Uy("alpha",t,e,n),Uy("beta",t,e,n))];case"Softmax":return[To(Uy("x",t,e,n))];case"LogSoftmax":return[zi(Uy("x",t,e,n))];case"SparseToDense":return[Ub(Uy("sparseIndices",t,e,n),Uy("outputShape",t,e,n),Uy("sparseValues",t,e,n),Uy("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return Na((()=>((t,e,n)=>{switch(t.op){case"Max":{const s=Uy("axis",t,e,n),r=Uy("keepDims",t,e,n);return[Oi(Uy("x",t,e,n),s,r)]}case"Mean":{const s=Uy("axis",t,e,n),r=Uy("keepDims",t,e,n);return[Ui(Uy("x",t,e,n),s,r)]}case"Min":{const s=Uy("axis",t,e,n),r=Uy("keepDims",t,e,n);return[Gi(Uy("x",t,e,n),s,r)]}case"Sum":{const s=Uy("axis",t,e,n),r=Uy("keepDims",t,e,n);return[Li(Uy("x",t,e,n),s,r)]}case"All":{const s=Uy("axis",t,e,n),r=Uy("keepDims",t,e,n);return[Fa(Uy("x",t,e,n),s,r)]}case"Any":{const s=Uy("axis",t,e,n),r=Uy("keepDims",t,e,n);return[Ma(Uy("x",t,e,n),s,r)]}case"ArgMax":{const s=Uy("axis",t,e,n);return[La(Uy("x",t,e,n),s)]}case"ArgMin":{const s=Uy("axis",t,e,n);return[Gh(Uy("x",t,e,n),s)]}case"Prod":{const s=Uy("axis",t,e,n),r=Uy("keepDims",t,e,n);return[dp(Uy("x",t,e,n),s,r)]}case"Cumsum":{const s=Uy("axis",t,e,n),r=Uy("exclusive",t,e,n),a=Uy("reverse",t,e,n);return[wc(Uy("x",t,e,n),s,r,a)]}case"Bincount":const s=Uy("x",t,e,n),r=Uy("weights",t,e,n),a=Uy("size",t,e,n);return[Gb(s,r,a)];case"DenseBincount":{const s=Uy("x",t,e,n),r=Uy("weights",t,e,n),a=Uy("size",t,e,n),i=Uy("binaryOutput",t,e,n);return[jb(s,r,a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return Na((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=Uy("n",t,e,n),r=Uy("axis",t,e,n);let a=Uy("tensors",t,e,n);return a=a.slice(0,s),[ai(a,r)]}case"Gather":{const s=Uy("x",t,e,n),r=Uy("indices",t,e,n);return[Si(s,jr(r,"int32"),0)]}case"GatherV2":{const s=Uy("axis",t,e,n),r=Uy("batchDims",t,e,n),a=Uy("x",t,e,n),i=Uy("indices",t,e,n);return[Si(a,jr(i,"int32"),s,r)]}case"Reverse":{const s=Uy("dims",t,e,n),r=[];for(let t=0;t<s.length;t++)s[t]&&r.push(t);const a=Uy("x",t,e,n);return[yo(a,r)]}case"ReverseV2":{const s=Uy("axis",t,e,n),r=Uy("x",t,e,n);return[yo(r,s)]}case"Slice":{const s=Uy("begin",t,e,n),r=Uy("size",t,e,n);return[wo(Uy("x",t,e,n),s,r)]}case"StridedSlice":{const s=Uy("begin",t,e,n),r=Uy("end",t,e,n),a=Uy("strides",t,e,n),i=Uy("beginMask",t,e,n),o=Uy("endMask",t,e,n),l=Uy("ellipsisMask",t,e,n),u=Uy("newAxisMask",t,e,n),c=Uy("shrinkAxisMask",t,e,n),h=Uy("x",t,e,n);return[yp(h,s,r,a,i,o,l,u,c)]}case"Pack":return Na((()=>{const s=Uy("axis",t,e,n),r=Uy("tensors",t,e,n),a=r[0].shape,i=Ao(r[0]).shape,o=r.map((t=>{const e=D(t.shape,a);if(!e&&!D(Ao(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:Za(t,a)}));return[Eo(o,s)]}));case"Unpack":{const s=Uy("axis",t,e,n),r=Uy("tensor",t,e,n);return Mo(r,s)}case"Tile":{const s=Uy("reps",t,e,n);return[Ii(Uy("x",t,e,n),s)]}case"Split":case"SplitV":{const s=Uy("axis",t,e,n),r=Uy("numOrSizeSplits",t,e,n),a=Uy("x",t,e,n);return So(a,r,s)}case"ScatterNd":{const s=Uy("indices",t,e,n),r=Uy("values",t,e,n),a=Uy("shape",t,e,n);return[Hb(s,r,a)]}case"GatherNd":{const s=Uy("x",t,e,n),r=Uy("indices",t,e,n);return[qb(s,r)]}case"SparseToDense":{const s=Uy("sparseIndices",t,e,n),r=Uy("outputShape",t,e,n),a=Uy("sparseValues",t,e,n),i=Uy("defaultValue",t,e,n);return[Ub(s,a,r,a.dtype===i.dtype?i:jr(i,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return Na((()=>((t,e,n)=>{switch(t.op){case"FFT":return[Go(Uy("x",t,e,n))];case"IFFT":return[Ho(Uy("x",t,e,n))];case"RFFT":return[jo(Uy("x",t,e,n))];case"IRFFT":return[qo(Uy("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return Na((()=>((t,e,n)=>{switch(t.op){case"Cast":return[jr(Uy("x",t,e,n),Uy("dtype",t,e,n))];case"ExpandDims":{const s=Uy("axis",t,e,n);return[_i(Uy("x",t,e,n),s)]}case"Squeeze":{const s=Uy("axis",t,e,n);return[Ao(Uy("x",t,e,n),s)]}case"Reshape":return[Za(Uy("x",t,e,n),Uy("shape",t,e,n))];case"MirrorPad":return[cp(Uy("x",t,e,n),Uy("padding",t,e,n),Uy("mode",t,e,n))];case"PadV2":case"Pad":return[lo(Uy("x",t,e,n),Uy("padding",t,e,n),Uy("constantValue",t,e,n))];case"SpaceToBatchND":{const s=Uy("blockShape",t,e,n),r=Uy("paddings",t,e,n);return[rc(Uy("x",t,e,n),s,r)]}case"BatchToSpaceND":{const s=Uy("blockShape",t,e,n),r=Uy("crops",t,e,n);return[zh(Uy("x",t,e,n),s,r)]}case"DepthToSpace":{const s=Uy("blockSize",t,e,n),r=Uy("dataFormat",t,e,n).toUpperCase();return[Zh(Uy("x",t,e,n),s,r)]}case"BroadcastTo":return[Lo(Uy("x",t,e,n),Uy("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,s)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=Uy("keyDType",t,e,n),a=Uy("valueDType",t,e,n),i=new Wb(r,a);return s.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=Uy("tableHandle",t,e,n,s),a=Uy("keys",t,e,n),i=Uy("values",t,e,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Uy("tableHandle",t,e,n,s),a=Uy("keys",t,e,n),i=Uy("defaultValue",t,e,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Uy("tableHandle",t,e,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,s);case"custom":const r=Wy(t.op);if(r&&r.customExecutor)return r.customExecutor(new Sb(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return it(r)?r.then((t=>[].concat(t))):[].concat(r)}class Kb{constructor(t={},e={},n={},s={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Yb(t,e,n,s){const r=new Set,a=[];let i=null,o=null;const l=new Set,u=Object.keys(t).map((t=>qy(t)[0]));let c=[];null!=s&&(c=s.map((t=>qy(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(tx(t)||ex(t)||nx(t))&&null==i&&(i=t,o=i.children.map((t=>t.name)).filter((t=>r.has(t)))),r.add(t.name),null==n[t.name]&&-1===u.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{l.has(t.name)||(l.add(t.name),h.push(t))})):a.push(t.name))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const Zb=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Jb=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Qb=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function tx(t){return Zb.indexOf(t.op)>=0}function ex(t){return Jb.indexOf(t.op)>=0}function nx(t){return Qb.indexOf(t.op)>=0}class sx{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new sx(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),s=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(t,e){const n=Yb(t,e,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=e.map((t=>t.name)),r=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(t,e,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((t=>qy(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;i.forEach((t=>{s.has(t.name)&&a.push(t)})),t.weights.forEach((t=>{s.has(t.name)&&a.push(t)})),null!=o&&o.forEach((t=>{s.has(t.name)&&a.push(t)}));const l=new Set,u=[];for(;a.length>0;){const t=a.pop();l.add(t.name),e[t.name]||u.push(t),t.children.forEach((t=>{!l.has(t.name)&&s.has(t.name)&&t.inputs.every((t=>l.has(t.name)))&&a.push(t)}))}return u}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const s=n.map((t=>this.graph.nodes[qy(t)[0]])),r=e.map((t=>qy(t)[0]));let a=r.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,a),this.compiledMap.set(i,o));const l={},u={};return Na((()=>{const n=new Kb(this.weightMap,l,u,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=qy(e),a=[];a[r]=t[e],s[n]=a}));const a=this.getFrozenTensorIds(s),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!s[e.name]){const t=Xb(e,s,n,this._resourceManager);if(it(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);s[e.name]=t,this.checkTensorForDisposal(e.name,e,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),e.map((t=>Gy(t,s,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,s,r,a,i){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[Hy(t,n.currentContextId)]}(t.name,n,s);null!=e&&e.forEach((t=>{if(t&&!r.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,s={},r={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new Kb(this.weightMap,s,r,this.functionExecutorMap),i=await this.executeWithControlFlow(t,a,e,n),o=e.map((t=>Gy(t,i,a))),l=o.map((t=>t.id)),u=Object.keys(t).map((e=>t[e].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach((t=>{i[t].forEach((t=>{!t||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(t,e,n){const s=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(s,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,s){const r=Object.keys(t),a=r.map((t=>this.graph.nodes[qy(t)[0]])),i=n.map((t=>qy(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=Yb(t,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=qy(e),r=[];r[s]=t[e],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(a,p,e,d,g,m,i,f,l);await Promise.all(t)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((t=>!tx(t)&&!Gy(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${t}`)}return d}processStack(t,e,n,s,r,a,i,o,l){const u=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&Uy("isConstant",t.node,s,n)&&([c]=jy(t.node.name,n)),null==s[t.node.name]){const h=Xb(t.node,s,n,this._resourceManager);c||([c]=jy(t.node.name,n));const p=n.currentContext;it(h)?u.push(h.then((u=>(s[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,t.node,s,n,a,i,o),this.processChildNodes(t.node,e,n,s,r,l),u)))):(s[c]=h,this.checkTensorForDisposal(c,t.node,s,n,a,i,o),this.processChildNodes(t.node,e,n,s,r,l))}else this.processChildNodes(t.node,e,n,s,r,l)}return u}processChildNodes(t,e,n,s,r,a){t.children.forEach((t=>{const[i]=jy(t.name,n);!r[i]&&a.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!Gy(t,s,n)))&&(r[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!Gy(t,s,n)))&&(r[i]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[s]=qy(e),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const t=r.attrParams.shape.value;S(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&S(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=qy(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=qy(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class rx{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class ax{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new rx}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=ea(t,this.loadOptions);else{const s=(e=t,n=this.loadOptions,xr.getLoadHandlers(e,n));if(0===s.length)s.push(ea(t,this.loadOptions));else if(s.length>1)throw new Error(`Found more than one (${s.length}) load handlers for URL '${[t]}'`);this.handler=s[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const s=function(t,e){const n={};let s,r=0;for(const a of e){const e=a.name,i=a.dtype,o=a.shape,l=R(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=hr[n.dtype],c=t.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=br()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}r+=l*o}else if("string"===i){const e=R(a.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(r,r+4))[0];r+=4;const n=new Uint8Array(t.slice(r,r+e));u.push(n),r+=e}}else{const s=hr[i],a=t.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);{u=new Float32Array(a);const t=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],s[e]=u[2*e+1];const r=cr(t,o,"float32"),i=cr(s,o,"float32");n[e]=lr(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[e]=cr(u,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new sx(db.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=db.Instance.transformGraph(t.modelInitializer);this.initializer=new sx(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=vr(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof Rs||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,s)=>(e[n]=t[s],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}var ix,ox,lx=n(377);function ux(t,e,n=new Map,s=new Set){if(null==t)return null;if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(dx(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const a in t){const i=ux(t[a],e,n,s);r[a]=i}return s.delete(t),r}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,r.value),r.value}function cx(t,e=px){return hx(t,e)}function hx(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(dx(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=hx(t.map((t=>t[a])),e,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function px(t){return null===t?null:dx(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function dx(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Rs))}function fx(t){return ux(t,mx)}function mx(t){return t instanceof Rs?{value:t.clone(),recurse:!1}:dx(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class gx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class yx extends gx{constructor(){super(yx.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}yx.INITIAL_CAPACITY=32;class bx{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Cx(this,t)}filter(t){return new Nx(this,t)}map(t){return new Tx(this,t)}mapAsync(t){return new Sx(this,t)}serialMapAsync(t){return new Sx(this,t).serial()}flatmap(t){return new Ax(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Ix(this,t,e)}columnMajorBatch(t,e=!0,n=px){return this.rowMajorBatch(t,e).map((t=>cx(t,n)))}concatenate(t,e){return new Ex(new xx([this,t]),e)}take(t){return t<0||null==t?this:new _x(this,t)}skip(t){return t<0||null==t?this:new kx(this,t)}prefetch(t){return new Rx(this,t)}shuffle(t,e){return new Dx(this,t,e)}serial(){return new wx(this)}}class xx extends bx{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:fx(t),done:!1}}}class vx extends bx{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class wx extends bx{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class kx extends bx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Ta(t.value)}return this.upstream.next()}}class _x extends bx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Ix extends bx{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Nx extends bx{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Ta(t.value)}}}class Tx extends bx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=js(t.value),n=this.transform(t.value),s=js(n);for(const t of e)Gs(t,s)||t.dispose();return{value:n,done:!1}}}class Cx extends bx{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Sx extends bx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=js(t.value),n=await this.transform(t.value),s=js(n);for(const t of e)Gs(t,s)||t.dispose();return{value:n,done:!1}}}class $x extends bx{constructor(){super(),this.outputQueue=new yx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ax extends $x{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=js(t.value),n=this.transform(t.value),s=js(n);this.outputQueue.pushAll(n);for(const t of e)Gs(t,s)||t.dispose();return!0}}class Ex extends bx{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(ox=ix||(ix={}))[ox.FAIL=0]="FAIL",ox[ox.SHORTEST=1]="SHORTEST",ox[ox.LONGEST=2]="LONGEST";class Rx extends bx{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new gx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Dx extends Rx{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=lx.alea(n||ys().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Ox{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return S(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Fx((async()=>(await n.iterator()).columnMajorBatch(t,e,Mx)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Fx((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Fx((async()=>(await e.iterator()).filter((e=>Na((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Fx((async()=>(await e.iterator()).map((e=>Na((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Fx((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Fx((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Fx((async()=>{return n=(r=async()=>({value:await e.iterator(),done:!1}),new vx(r)).take(t),new Ex(n,s);var n,s,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Fx((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=lx.alea(e||ys().toString());return Fx((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Fx((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Fx(t,e=null){return new class extends Ox{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Mx(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Rs||G(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Rs?Eo(t):cr(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function Lx(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&S("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}Ox.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const zx=Vu;class Px extends _{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new k(this,_a())}nextDataId(){return Px.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,lt().get("IS_NODE")&&Iu("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&H(n[0])){const r=n.map((t=>bs(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return{dataId:s,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,s,r){this.data.set(t,{values:e,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Tu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>xs(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Gr(t.shape,t.dtype,n)}makeOutput(t,e,n){const s=this.write(t,e,n);return _a().makeTensorFromDataId(s,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=ys();return t(),{kernelMs:ys()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Lx([t],"where");const e=this.readSync(t.dataId);return zx(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Vx(t,e,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(Lx(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=R(i.shape),c=n||i.dtype,h=W(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],r);return o.makeTensorInfo(i.shape,c,h)}}function Bx(t,e,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(Lx(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=e(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}Px.nextDataId=0,$a("cpu",(()=>new Px),1);const Wx=Vx(ie,(t=>t>=0?t:Math.exp(t)-1)),Ux={kernelName:ie,backendName:"cpu",kernelFunc:Wx};function Gx(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const jx={kernelName:_e,backendName:"cpu",kernelFunc:Gx};function Hx(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:a}=s;Lx([r],"leakyRelu");const i=R(r.shape),o=n.data.get(r.dataId).values,l=B("float32",i);for(let t=0;t<o.length;t++)l[t]=o[t]<0?a*o[t]:o[t];return n.makeTensorInfo(r.shape,"float32",l)}const qx={kernelName:$e,backendName:"cpu",kernelFunc:Hx};function Xx(t){return(e,n,s,r,a)=>{const i=wi(e,n),o=i.length,l=Z(i),u=B(a,R(i)),c=e.length,h=n.length,p=Z(e),d=Z(n),f=xi(e,i),m=xi(n,i);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(s[e%s.length],r[e%r.length]);else for(let e=0;e<u.length;++e){const n=at(e,o,l),a=n.slice(-c);f.forEach((t=>a[t]=0));const i=rt(a,c,p),g=n.slice(-h);m.forEach((t=>g[t]=0));const y=rt(g,h,d);u[e]=t(s[i],r[y])}return[u,i]}}const Kx=Xx(((t,e)=>t<0?e*t:t));function Yx(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;Lx([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=Kx(s.shape,r.shape,a,i,s.dtype);return n.makeTensorInfo(l,s.dtype,o)}const Zx={kernelName:hn,backendName:"cpu",kernelFunc:Yx},Jx=Vx(gn,(t=>Math.max(0,t))),Qx={kernelName:gn,backendName:"cpu",kernelFunc:Jx},tv=Vx(kn,(t=>Math.min(Math.max(0,t),6))),ev={kernelName:kn,backendName:"cpu",kernelFunc:tv};function nv(t,e,n,s,r){if("linear"===n)return Gx({inputs:{x:e},backend:t});if("relu"===n)return Jx({inputs:{x:e},backend:t});if("elu"===n)return Wx({inputs:{x:e},backend:t});if("relu6"===n)return tv({inputs:{x:e},backend:t});if("prelu"===n)return Yx({inputs:{x:e,alpha:s},backend:t});if("leakyrelu"===n)return Hx({inputs:{x:e},backend:t,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function sv(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const rv={kernelName:Lt,backendName:"cpu",kernelFunc:sv};function av(t,e,n="float32"){if("complex64"===n)return sv({inputs:{real:av(t,e,"float32"),imag:av(t,e,"float32")},backend:t});const s=et(R(e),n);return t.makeTensorInfo(e,n,s)}function iv(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const ov={kernelName:fn,backendName:"cpu",kernelFunc:iv};function lv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return Gx({inputs:{x:r},backend:n});const t=av(n,r.shape,r.dtype),e=lv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=sv({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),s}if("complex64"===r.dtype){const t=iv({inputs:{input:r},backend:n}),e=lv({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!U(r.dtype,a)){const t=Gx({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(r.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(r.shape,"int32",e)}if("bool"===a){const t=n.data.get(r.dataId).values,e=gs([0],r.dtype),[s,a]=Xx(((t,e)=>t!==e?1:0))(r.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const uv={kernelName:Ot,backendName:"cpu",kernelFunc:lv};function cv(t,e,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;Lx([a,i],t);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=s||a.dtype,[h,p]=e(a.shape,i.shape,l,u,c);return o.makeTensorInfo(p,c,h)}:({inputs:t,backend:r})=>{const{a,b:i}=t,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const t=lv({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),s=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=lv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=sv({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=e(a.shape,i.shape,t,n,r);return o.makeTensorInfo(u,r,l)}}}function hv(t){return(e,n,s,r,a,i)=>{const o=wi(e,n),l=R(o),u=o.length,c=Z(o),h=B("float32",l),p=B("float32",l),d=xi(e,o),f=xi(n,o),m=Tu(s,r),g=Tu(a,i),y=e.length,b=Z(e),x=n.length,v=Z(n);if(d.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,s=e%g.length,r=t(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[e]=r.real,p[e]=r.imag}else for(let e=0;e<h.length;e++){const n=at(e,u,c),s=n.slice(-y);d.forEach((t=>s[t]=0));const r=rt(s,y,b),a=n.slice(-x);f.forEach((t=>a[t]=0));const i=rt(a,x,v),o=t(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[e]=o.real,p[e]=o.imag}return[h,p,o]}}const pv=Xx(((t,e)=>t+e)),dv=hv(((t,e,n,s)=>({real:t+n,imag:e+s}))),fv=cv(gt,pv,dv),mv={kernelName:gt,backendName:"cpu",kernelFunc:fv};function gv(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:a}=s,i=R(r.shape),o=z(a,i),l=R(o);S(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const yv={kernelName:yn,backendName:"cpu",kernelFunc:gv};function bv(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a}=e,{transposeA:i,transposeB:o}=s;Lx([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=R(f),y=R(m);S(l>=2&&u>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?r.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,d]);S(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=gv({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=gv({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],_=i?v.shape[2]:v.shape[1],I=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,$=Z(v.shape),A=Z(w.shape),[E,D,O]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,M,L]=o?[1,A[1],A[0]]:[A[1],1,A[0]],z=_*I,P=Gr([N,_,I],v.dtype),V=P.values,B=n.blockSize;for(let t=0;t<N;t++)for(let e=0;e<_;e+=B)for(let n=0;n<I;n+=B)for(let s=0;s<k;s+=B){const r=Math.min(e+B,_),a=Math.min(n+B,I),i=Math.min(s+B,k);for(let o=e;o<r;o++)for(let e=n;e<a;e++){let n=0;for(let r=s;r<i;r++){const s=Math.min(t,g-1)*E,a=Math.min(t,y-1)*L;n+=T[s+o*D+r*O]*C[r*F+e*M+a]}V[t*z+(o*I+e)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,P.dtype,P.values)}const xv={kernelName:Et,backendName:"cpu",kernelFunc:bv},vv={kernelName:rs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=bv({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=fv({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=nv(n,p,c,o,h),m.push(p),p=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return p}};function wv(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const kv={kernelName:dt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Lx(e,"abs");let s=new Float32Array(R(e.shape));return s=wv(n.data.get(e.dataId).values),n.makeOutput(s,e.shape,"float32")}},_v=Vx(ft,(t=>Math.acos(t))),Iv={kernelName:ft,backendName:"cpu",kernelFunc:_v},Nv=Vx(mt,(t=>Math.acosh(t))),Tv={kernelName:mt,backendName:"cpu",kernelFunc:Nv},Cv={kernelName:yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,s=e;Lx(e,"addN");const r=s.map((t=>n.data.get(t.dataId).values)),a=Gr(s[0].shape,s[0].dtype),i=a.values;for(let t=0;t<s.length;t++){const e=r[t];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Sv(t,e,n,s,r){const a=e.length,i=R(e),o=Z(e),l=Z(r),u=B(n,R(r));for(let e=0;e<i;++e){const n=at(e,a,o),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[s[t]];u[rt(r,a,l)]=t[e]}return u}function $v(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:a}=n;Lx(r,"transpose");const i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[a[t]];const l=Sv(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const Av={kernelName:Yn,backendName:"cpu",kernelFunc:$v},Ev={kernelName:bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;Lx(r,"all");const o=P(a,r.shape);let l=o;const u=Zi(l,r.shape.length);let c=r;null!=u&&(c=$v({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Qi(l.length,r.shape.length)),Yi("all",l,c.shape.length);const[h,p]=Xi(c.shape,l),d=R(p),f=et(R(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];n=n&&s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const t=gv({inputs:{x:g},backend:n,attrs:{shape:Ki(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Rv={kernelName:xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;Lx(r,"any");const o=P(a,r.shape);let l=o;const u=Zi(l,r.shape.length);let c=r;null!=u&&(c=$v({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Qi(l.length,r.shape.length)),Yi("any",l,c.shape.length);const[h,p]=Xi(c.shape,l),d=R(p),f=et(R(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];n=n||s}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const t=gv({inputs:{x:g},backend:n,attrs:{shape:Ki(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Dv={kernelName:vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;Lx(r,"argMax");let i=P(a,r.shape);const o=Zi(i,r.shape.length);let l=r;const u=[];null!=o&&(l=$v({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Qi(i.length,l.shape.length)),i=[i[0]],Yi("argMax",i,l.shape.length);const[c,h]=Xi(l.shape,i),p=et(R(c),"int32"),d=R(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],s=0;for(let t=0;t<d;++t){const r=f[e+t];r>n&&(n=r,s=t)}p[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},Ov={kernelName:wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;Lx(r,"argMin");let i=P(a,r.shape);const o=Zi(i,r.shape.length);let l=r;const u=[];null!=o&&(l=$v({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Qi(i.length,l.shape.length)),i=[i[0]],Yi("argMin",i,l.shape.length);const[c,h]=Xi(l.shape,i),p=et(R(c),"int32"),d=R(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],s=0;for(let t=0;t<d;++t){const r=f[e+t];r<n&&(n=r,s=t)}p[t]=s}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},Fv=Vx(kt,(t=>Math.asin(t))),Mv={kernelName:kt,backendName:"cpu",kernelFunc:Fv},Lv=Vx(_t,(t=>Math.asinh(t))),zv={kernelName:_t,backendName:"cpu",kernelFunc:Lv},Pv=Vx(It,(t=>Math.atan(t))),Vv={kernelName:It,backendName:"cpu",kernelFunc:Pv},Bv=Xx(((t,e)=>Math.atan2(t,e))),Wv=cv(Tt,Bv),Uv={kernelName:Tt,backendName:"cpu",kernelFunc:Wv},Gv=Vx(Nt,(t=>Math.atanh(t))),jv={kernelName:Nt,backendName:"cpu",kernelFunc:Gv};function Hv(t,e,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Gr(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let e=0;e<r.batchSize;++e){const n=e*y,m=e*s[0];for(let e=0;e<r.inChannels;++e)for(let y=0;y<r.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),_=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(r.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const r=m+n*s[1];for(let n=c;n<p;n+=u){const i=t[r+n*s[2]+e];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[_+n*x+e]="avg"===a?b/v:y}}}return m}function qv(t,e,n,s,r=!1,a=!1){const i=Gr(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=Gr(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(t,n,o,e);u>v&&(v=u,w=r?a?((t*s.inHeight+n)*s.inWidth+o)*s.inChannels+e:(n*s.inWidth+o)*s.inChannels+e:i*p+l)}}i.set(w,t,n,o,e)}}return i}function Xv(t,e,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Gr(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let e=0;e<r.batchSize;++e){const n=e*w,x=e*s[0];for(let e=0;e<r.inChannels;++e)for(let w=0;w<r.outDepth;++w){const N=w*i-m;let T=N;for(;T<0;)T+=u;const C=Math.min(r.inDepth,p+N),S=n+w*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+i),w=S+n*_;for(let n=0;n<r.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+i),g=w+n*I;let k=b,_=0,N=0;for(let n=T;n<C;n+=u){const r=x+n*s[1];for(let n=p;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<d;n+=h){const r=t[i+n*s[3]+e];if("max"===a&&r>k?k=r:"avg"===a&&(_+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+e]="avg"===a?_/N:k}}}}return x}const Kv={kernelName:Ct,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Lx(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;S(Ka(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pa(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&D(u.inShape,u.outShape))c=Gx({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=Z(r.shape),s=Hv(t,r.shape,r.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},Yv={kernelName:$t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Lx(r,"avgPool3d");const c=Va(r.shape,a,i,1,o,l,u),h=Xv(n.data.get(r.dataId).values,r.shape,r.dtype,Z(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Zv={kernelName:At,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Lx([r,a],"avgPool3DGrad");const c=Va(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,_=v-1-c.padInfo.front,I=k-1-c.padInfo.left,N=w-1-c.padInfo.top,T=Gr(a.shape,"float32"),C=1/(f*m*g),S=n.bufferSync(r);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-_,i=s-N,o=r-I;let l=0;for(let n=0;n<v;n+=y){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<w;n+=b){const r=(i+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=S.get(t,s,r,a,e))}}}T.set(l*C,t,n,s,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},Jv={kernelName:St,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a;Lx([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Pa(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Gr(i.shape,"float32"),k=1/(d*f),_=n.data.get(r.dataId).values,I=Gr(r.shape,"float32",_);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-v,a=s-x;let i=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(a+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=I.get(t,s,r,e))}}w.set(i*k,t,n,s,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Qv={kernelName:be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,scale:a,offset:i,mean:o,variance:l}=e;S(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),S(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),S(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Lx([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,_=0;for(let t=0;t<c.length;++t)m[t]=f[v++]+(c[t]-h[w++])*d[k++]/Math.sqrt(p[_++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),_>=b&&(_=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function tw(t,e,n,s,r){const a=ga(s,e,n),i=R(n),o=Z(s);if(a){const n=ya(e,o);return"string"===r?t.slice(n,n+i):t.subarray(n,n+i)}const l=Gr(s,r,"string"===r?zu(t):t),u=Gr(n,r);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),s=n.map(((t,n)=>t+e[n]));u.set(l.get(...s),...n)}return"string"===r?Pu(u.values):u.values}function ew(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,size:i}=s;Lx(r,"slice");const[o,l]=ba(r,a,i);ra(r,o,l);const u=tw(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const nw={kernelName:$n,backendName:"cpu",kernelFunc:ew},sw={kernelName:Rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,crops:i}=s;Lx([r],"batchToSpaceND");const o=a.reduce(((t,e)=>t*e)),l=ou(r.shape,a,o),u=lu(l.length,a.length),c=uu(r.shape,a,o),h=cu(i,a.length),p=hu(c,i,a.length),d=gv({inputs:{x:r},backend:n,attrs:{shape:l}}),f=$v({inputs:{x:d},backend:n,attrs:{perm:u}}),m=gv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ew({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function rw(t,e,n,s,r){const a=R(s),i=et(r,n);for(let n=0;n<t.length;n++){const s=t[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?e[n]:1)}return i}function aw(t,e,n,s=!1){const r=t.shape[0],a=t.shape[1],i=Gr([r,n],e.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=t.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):e.size>0?i.set(i.get(o,a)+e.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const iw={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i}=s,o=rw(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function ow(t){return(e,n,s)=>{const r=B(n,e.length);for(let n=0;n<e.length;++n)r[n]=t(e[n],s);return r}}const lw=ow((t=>Math.ceil(t))),uw=Bx(Ft,lw),cw={kernelName:Ft,backendName:"cpu",kernelFunc:uw},hw=Vx(Mt,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),pw={kernelName:Mt,backendName:"cpu",kernelFunc:hw},dw={kernelName:zt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,s=new Float32Array(R(e.shape)),r=n.data.get(e.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];s[t]=Math.hypot(e,n)}return n.makeOutput(s,e.shape,"float32")}};function fw(t,e,n,s){const r=W(n,R(e));if(s&&"string"!==n){let e=0;t.forEach((t=>{const n=R(t.shape);r.set(t.vals,e),e+=n}))}else{let s=0;t.forEach((t=>{const a="string"===n?zu(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+s;for(let e=0;e<t.shape[1];++e)r[o+e]=a[i++]}s+=t.shape[1]}))}return r}function mw(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const gw={kernelName:Ne,backendName:"cpu",kernelFunc:mw};function yw(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,a=P(r,e[0].shape)[0];let i=su(e.map((t=>t.shape)),a);if(0===R(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>R(t.shape)>0));if(1===o.length)return Gx({inputs:{x:o[0]},backend:n});if(nu(o.map((t=>t.shape)),a),"complex64"===o[0].dtype){const t=o.map((t=>iv({inputs:{input:t},backend:n}))),e=o.map((t=>mw({inputs:{input:t},backend:n}))),s=yw({inputs:t,backend:n,attrs:{axis:a}}),r=yw({inputs:e,backend:n,attrs:{axis:a}}),i=sv({inputs:{real:s,imag:r},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((t=>{const e=R(t.shape.slice(a));return gv({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));i=su(l.map((t=>t.shape)),1);const c=1===l[0].shape[0],h=fw(u,i,e[0].dtype,c),p=su(o.map((t=>t.shape)),a),d=n.makeTensorInfo(p,e[0].dtype,h);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}const bw={kernelName:Pt,backendName:"cpu",kernelFunc:yw};function xw(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Lx([r,a],"conv2d");const h=Ya(l),p=Ba(r.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new Ss(p.outShape,r.dtype),w=Z(r.shape),k=Z(a.shape),_=w[0],I=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],C=v.strides[0],S=x?v.strides[1]:v.strides[2],$=x?v.strides[2]:1,A=x?1:v.strides[1],E=n.data.get(r.dataId).values,R=n.data.get(a.dataId).values,D=v.values;for(let t=0;t<p.batchSize;++t){const e=t*_,n=t*C;for(let t=0;t<p.outHeight;++t){const s=n+t*S,r=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],i=e+n*I;for(let t=0;t<p.outWidth;++t){const e=s+t*$,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const s=n+t*g;if(s<0||s>=p.inWidth)continue;const r=i+s*N;let o=a+t*k[1];for(let t=0;t<p.inChannels;++t){const n=E[r+t*T];for(let t=0;t<p.outChannels;++t)D[e+t*A]+=n*R[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const vw={kernelName:Vt,backendName:"cpu",kernelFunc:xw},ww={kernelName:Bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Lx([r,a],"conv2dBackpropFilter");const h=Ya(l),p=Ba(r.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Ss(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,_=new Ss(r.shape,r.dtype,w),I=new Ss(a.shape,a.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((v-t)/d)),n=Math.min(p.outHeight,(p.inHeight+v-t)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(p.outWidth,(p.inWidth+x-s)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*d-v;for(let t=r;t<a;++t){const n=s+t*f-x;l+=y?_.get(u,e,n,i)*I.get(u,c,t,o):_.get(u,i,e,n)*I.get(u,o,c,t)}}b.set(l,t,s,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},kw={kernelName:Wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;Lx([r,a],"conv2dBackpropInput");const h=Z(a.shape),p=Z(r.shape);let d=Ya(u);const f=Ba(i,a.shape,o,1,l,c,!1,d),m=new Ss(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:_,filterWidth:I,inChannels:N,inHeight:T,inWidth:C,outChannels:S,outHeight:$,outWidth:A,strideHeight:E,strideWidth:R}=f;d=f.dataFormat;const D=_-1-f.padInfo.top,O=I-1-f.padInfo.left,F="channelsLast"===d,M=m.strides[0],L=F?m.strides[1]:m.strides[2],z=F?m.strides[2]:1,P=F?1:m.strides[1],V=p[0],B=F?p[1]:p[2],W=F?p[2]:1,U=F?1:p[1];for(let t=0;t<k;++t)for(let e=0;e<N;++e)for(let n=0;n<T;++n){const s=n-D,r=Math.max(0,Math.ceil(s/E)),a=Math.min($,(_+s)/E);for(let i=0;i<C;++i){const o=i-O,l=Math.max(0,Math.ceil(o/R)),u=Math.min(A,(I+o)/R);let c=0;for(let n=r;n<a;++n){const r=n*E-s;for(let s=l;s<u;++s){const a=V*t+B*n+W*s,i=x*(_-1-r)+v*(I-1-(s*R-o))+w*e;for(let t=0;t<S;++t)c+=y[a+U*t]*b[i+t]}}g[M*t+L*n+z*i+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},_w={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l}=s;Lx([r,a],"conv3d");const u=Wa(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Ss(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,_=v.values,I=Z(r.shape),N=Z(a.shape);for(let t=0;t<u.batchSize;++t){const e=t*I[0],n=t*v.strides[0];for(let t=0;t<u.outDepth;++t){const s=n+t*v.strides[1],r=t*u.strideDepth-y;for(let t=0;t<c;++t){const n=r+t*d;if(n<0||n>=u.inDepth)continue;const a=t*N[0],i=e+n*I[1];for(let t=0;t<u.outHeight;++t){const e=s+t*v.strides[2],n=t*u.strideHeight-x;for(let t=0;t<h;++t){const s=n+t*f;if(s<0||s>=u.inHeight)continue;const r=a+t*N[1],o=i+s*I[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,s=t*u.strideWidth-b;for(let t=0;t<p;++t){const e=s+t*m;if(e<0||e>=u.inWidth)continue;const a=r+t*N[2],i=o+e*u.inChannels;let l=a;for(let t=0;t<u.inChannels;++t){const e=w[i+t];for(let t=0;t<u.outChannels;++t)_[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Iw={kernelName:Gt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,filterShape:l}=s;Lx([r,a],"conv3dBackpropFilterV2");const u=Z(r.shape),c=Z(a.shape),h=Wa(r.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ss(h.filterShape,"float32"),x=b.values,[v,w,k,_]=b.strides,I=n.data.get(a.dataId).values,[N,T,C,S]=c,$=n.data.get(r.dataId).values,[A,E,R,D]=u,O=h.padInfo.front,F=h.padInfo.left,M=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((O-t)/p)),n=Math.min(h.outDepth,(h.inDepth+O-t)/p),s=t*v;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/d)),i=Math.min(h.outHeight,(h.inHeight+M-r)/d),o=r*w+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((F-s)/f)),u=Math.min(h.outWidth,(h.inWidth+F-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const m=o*_+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*N;for(let m=e;m<n;++m){const e=(t+m*p-O)*E+h,n=m*T+y;for(let t=a;t<i;++t){const a=(r+t*d-M)*R+e,i=t*C+n;for(let t=l;t<u;++t){const e=t*S+i;g+=$[(s+t*f-F)*D+a+o]*I[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Nw={kernelName:jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{pad:i,strides:o,inputShape:l}=s;Lx([r],"conv3dBackpropInputV2");const u=Z(r.shape),c=Z(a.shape),h=Wa(l,a.shape,o,1,i),p=new Ss(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=u,_=n.data.get(a.dataId).values,[I,N,T,C]=c,{batchSize:S,filterDepth:$,filterHeight:A,filterWidth:E,inChannels:R,inDepth:D,inHeight:O,inWidth:F,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:V,strideHeight:B,strideWidth:W}=h,U=$-1-h.padInfo.front,G=A-1-h.padInfo.top,j=E-1-h.padInfo.left;for(let t=0;t<S;++t)for(let e=0;e<R;++e)for(let n=0;n<D;++n){const s=n-U,r=Math.max(0,Math.ceil(s/V)),a=Math.min(L,($+s)/V);for(let i=0;i<O;++i){const o=i-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min(z,(A+o)/B);for(let c=0;c<F;++c){const h=c-j,p=Math.max(0,Math.ceil(h/W)),S=Math.min(P,(E+h)/W);let R=0;for(let n=r;n<a;++n){const r=n*V-s;for(let s=l;s<u;++s){const a=s*B-o;for(let i=p;i<S;++i){const o=x*t+v*n+w*s+k*i,l=I*($-1-r)+N*(A-1-a)+T*(E-1-(i*W-h))+C*e;for(let t=0;t<M;++t)R+=b[o+t]*_[l+t]}}}d[f*t+m*n+g*i+y*c+e]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Tw=Vx(Ht,(t=>Math.cos(t))),Cw={kernelName:Ht,backendName:"cpu",kernelFunc:Tw},Sw=Vx(qt,(t=>Math.cosh(t))),$w={kernelName:qt,backendName:"cpu",kernelFunc:Sw},Aw={kernelName:Kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:a,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,p,d]=r.shape,f=a.shape[0],[m,g]=o,y=Gr([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,w=Z(r.shape),k=Z(y.shape);for(let t=0;t<f;t++){const e=4*t,n=b[e],s=b[e+1],r=b[e+2],a=b[e+3],i=x[t];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(p-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<d;s++){const r=s+n*k[2]+e*k[1]+t*k[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(p-1)+l*f:.5*(s+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const s=n+l*k[2]+e*k[1]+t*k[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<d;s++){let a=s+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=s+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=s+h*w[2]+r*w[1]+i*w[0];const p=v[a];a=s+m*w[2]+r*w[1]+i*w[0];const d=u+(c-u)*b,f=p+(v[a]-p)*b;a=s+l*k[2]+e*k[1]+t*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(p-1)+n*f:.5*(s+a)*(p-1);if(r<0||r>p-1){for(let s=0;s<d;s++){const r=s+n*k[2]+e*k[1]+t*k[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<d;s++){const r=s+o*w[2]+l*w[1]+i*w[0],a=s+n*k[2]+e*k[1]+t*k[0];y.values[a]=v[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ew={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,exclusive:i,reverse:o}=s;Lx(r,"cumsum");const l=Zi([a],r.shape.length);let u=r;null!=l&&(u=$v({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Qi(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Bs(u.dtype,"int32"),p=et(R(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<d.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)p[n]=i?0:d[n];else{const s=m(t,e-1);p[n]=i?d[s]+p[s]:d[n]+p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const t=$v({inputs:{x:g},backend:n,attrs:{perm:Ji(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},Rw={kernelName:Yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const t=rw(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,t)}if(2===r.shape.length){const t=aw(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(t.shape,a.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},Dw={kernelName:Zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:a,dataFormat:i}=s;S("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),S(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let t=0;t<o;++t)for(let e=0;e<h;++e){const n=Math.floor(e/a),s=e%a;for(let e=0;e<p;++e){const r=Math.floor(e/a),i=(s*a+e%a)*d;for(let e=0;e<d;++e){const s=e+i+c*(r+u*(n+l*t));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function Ow(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;Lx([r,a],"depthwiseConv2DNative");const c=Z(r.shape),h=Z(a.shape);let p=l;null==p&&(p=[1,1]),S(Ka(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=Ba(r.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new Ss(d.outShape,r.dtype),_=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,N=k.values;for(let t=0;t<d.batchSize;++t){const e=t*c[0],n=t*k.strides[0];for(let t=0;t<d.outHeight;++t){const s=n+t*k.strides[1],r=t*d.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let t=0;t<d.outWidth;++t){const e=s+t*k.strides[2],n=t*d.strideWidth-v;for(let t=0;t<m;++t){const s=n+t*y;if(s<0||s>=d.inWidth)continue;const r=a+t*h[1],o=i+s*d.inChannels;let l=e,u=r;for(let t=0;t<d.inChannels;++t){const e=_[o+t];for(let t=0;t<w;++t)N[l+t]+=e*I[u+t];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Fw={kernelName:Jt,backendName:"cpu",kernelFunc:Ow},Mw={kernelName:Qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;Lx([r,a],"depthwiseConv2dNativeBackpropFilter");const h=Ba(r.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Ss(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new Ss(r.shape,r.dtype,v),k=n.data.get(a.dataId).values,_=new Ss(a.shape,a.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/d)),a=Math.min(h.outWidth,(h.inWidth+y-s)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=r;t<a;++t){const n=s+t*d-y;u+=w.get(l,e,n,o)*_.get(l,c,t,i)}}g.set(u,t,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Lw={kernelName:te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;Lx([r,a],"depthwiseConv2DNativeBackpropInput");const h=Z(r.shape),p=Z(a.shape),d=Ba(c,a.shape,i,o,l,u,!0),f=new Ss(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,_=n.data.get(a.dataId).values,[I,N,T]=p,{batchSize:C,filterHeight:S,filterWidth:$,inChannels:A,inHeight:E,inWidth:R,outChannels:D,outHeight:O,outWidth:F,strideHeight:M,strideWidth:L}=d,z=S-1-d.padInfo.top,P=$-1-d.padInfo.left,V=D/A;for(let t=0;t<C;++t)for(let e=0;e<A;++e)for(let n=0;n<E;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),a=Math.min(O,(S+s)/M);for(let i=0;i<R;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(F,($+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=l;s<u;++s){const a=v*t+w*n+k*s,i=I*(S-1-r)+N*($-1-(s*L-o))+T*e;for(let t=0;t<V;++t)c+=x[a+(e*V+t)]*_[i+t]}}m[g*t+y*n+b*i+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},zw={kernelName:ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=R(s.shape),a=n.data.get(s.dataId).values,i=Gr([r,r],s.dtype),o=i.values;for(let t=0;t<a.length;t++)o[t*r+t]=a[t];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Pw={kernelName:ne,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r}=t,{strides:a,pad:i,dilations:o}=n,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:_,dilationHeight:I,dilationWidth:N,outShape:T}=za(s.shape,r.shape,a,i,"NHWC",o),C=R(T),S=T.length,$=W(s.dtype,C);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*v-x.top;for(let a=0;a<b;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const a=n+e*I;if(a>=0&&a<f)for(let n=0;n<_;++n){const d=i+n*N;if(d>=0&&d<m){const i=rt([t,a,d,o],c,Z(s.shape)),f=rt([e,n,o],p,Z(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}$[rt([t,e,a,o],S,Z(T))]=l}}}return{dataId:l.write(gs($,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},Vw={kernelName:re,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:a}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=Q(s.shape,u.data.get(s.dataId).values),h=Q(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:_,dilationWidth:I,outShape:N}=za(s.shape,r.shape,i,o,"NHWC",l);S(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=Q(N,u.data.get(a.dataId).values),C=nt(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<w;++e){const s=n+e*_;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*I;if(u>=0&&u<f){const r=c[t][s][u][a]+h[e][n][a];r>i&&(i=r,o=e,l=n)}}}C[o][l][a]+=T[t][e][s][a]}}}return{dataId:u.write(gs(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Bw={kernelName:se,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:r,dy:a}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=Q(s.shape,u.data.get(s.dataId).values),h=Q(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:_,dilationWidth:I,outShape:N}=za(s.shape,r.shape,i,o,"NHWC",l);S(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=Q(N,u.data.get(a.dataId).values),C=nt(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let e=0;e<w;++e){const s=n+e*_;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*I;if(u>=0&&u<f){const r=c[t][s][u][a]+h[e][n][a];r>i&&(i=r,o=s,l=u)}}}C[t][o][l][a]+=T[t][e][s][a]}}}return{dataId:u.write(gs(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ww={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:s,y:r}=e;Lx([s,r],"eluGrad");const a=new Float32Array(R(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let t=0;t<i.length;++t){const e=i[t];a[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(r.shape,"float32",a)}},Uw=Xx(((t,e)=>t===e?1:0)),Gw=cv(ue,Uw,null,"bool"),jw={kernelName:ue,backendName:"cpu",kernelFunc:Gw},Hw=bu,qw=xu,Xw=vu,Kw=wu,Yw=ku,Zw=_u,Jw=Vx(le,(t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+Hw*n);return e*(1-((((Zw*s+Yw)*s+Kw)*s+Xw)*s+qw)*s*Math.exp(-n*n))})),Qw={kernelName:le,backendName:"cpu",kernelFunc:Jw},tk=ow((t=>Math.exp(t))),ek=Bx(ce,tk),nk={kernelName:ce,backendName:"cpu",kernelFunc:ek};function sk(t){const{inputs:e,backend:n,attrs:s}=t,{input:r}=e,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(S(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),gv({inputs:{x:r},backend:n,attrs:{shape:o}})}const rk={kernelName:he,backendName:"cpu",kernelFunc:sk},ak=ow((t=>Math.expm1(t))),ik=Bx(pe,ak),ok={kernelName:pe,backendName:"cpu",kernelFunc:ik},lk=Xx(((t,e)=>t*e)),uk=hv(((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n}))),ck=cv(Qe,lk,uk),hk={kernelName:Qe,backendName:"cpu",kernelFunc:ck},pk=Xx(((t,e)=>t/e)),dk=cv(ae,pk),fk={kernelName:ae,backendName:"cpu",kernelFunc:dk},mk=Xx(((t,e)=>t-e)),gk=hv(((t,e,n,s)=>({real:t-n,imag:e-s}))),yk=cv(Wn,mk,gk),bk={kernelName:Wn,backendName:"cpu",kernelFunc:yk};function xk(t,e,n){const s=t.shape,r=s[0],a=s[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=R(u),h=B("float32",c),p=B("float32",c);for(let t=0;t<r;t++){const s=ew({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,a]}}),r=ew({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,a]}}),i=sv({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=vk(i,e,n),d=Tu(u,c);for(let e=0;e<a;e++){const n=Au(d,e);h[t*a+e]=n.real,p[t*a+e]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=sv({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function vk(t,e,n){const s=R(t.shape),r=n.data.get(t.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=wk(a,i,s,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",r.real),e=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",ms(s,"float32")),i=Gx({inputs:{x:a},backend:n}),l=fk.kernelFunc({inputs:{a:t,b:a},backend:n}),u=fk.kernelFunc({inputs:{a:e,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}return Cu(function(t,e,n){const s=new Float32Array(2*e);for(let r=0;r<e;r++){let a=0,i=0;for(let s=0;s<e;s++){const o=Du(r*s,e,n),l=Au(t,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=e,i/=e),Eu(s,a,i,r)}return s}(Tu(a,i),s,e));var o}function wk(t,e,n,s,r){if(1===n)return{real:t,imag:e};const a=Tu(t,e),i=n/2,o=Su(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),d=sv({inputs:{real:h,imag:p},backend:r}),f=$u(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=sv({inputs:{real:b,imag:x},backend:r}),w=wk(l,u,i,s,r),k=w.real,_=w.imag,I=[k.length],N=r.makeTensorInfo(I,"float32",k),T=r.makeTensorInfo(I,"float32",_),C=sv({inputs:{real:N,imag:T},backend:r}),S=wk(m,g,i,s,r),$=S.real,A=S.imag,E=[$.length],R=r.makeTensorInfo(E,"float32",$),D=r.makeTensorInfo(E,"float32",A),O=sv({inputs:{real:R,imag:D},backend:r}),F=Ru(n,s),M=[F.real.length],L=r.makeTensorInfo(M,"float32",F.real),z=r.makeTensorInfo(M,"float32",F.imag),P=sv({inputs:{real:L,imag:z},backend:r}),V=ck({inputs:{a:P,b:O},backend:r}),B=fv({inputs:{a:C,b:V},backend:r}),W=yk({inputs:{a:C,b:V},backend:r}),U=iv({inputs:{input:B},backend:r}),G=iv({inputs:{input:W},backend:r}),j=mw({inputs:{input:B},backend:r}),H=mw({inputs:{input:W},backend:r}),q=yw({inputs:[U,G],backend:r,attrs:{axis:0}}),X=yw({inputs:[j,H],backend:r,attrs:{axis:0}}),K=r.data.get(q.dataId).values,Y=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:K,imag:Y}}const kk={kernelName:de,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=R(s.shape),a=s.shape[s.shape.length-1],i=gv({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=xk(i,!1,n),l=gv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function _k(t){const{backend:e,attrs:n}=t,{shape:s,value:r,dtype:a}=n,i=a||X(r),o=W(i,R(s));return function(t,e,n){t.fill(e)}(o,r),e.makeTensorInfo(s,i,o)}const Ik={kernelName:fe,backendName:"cpu",kernelFunc:_k},Nk={kernelName:me,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,r=n,a=B(s.dtype,R(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let t=0;t<i;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let s=0;s<l;s++){const r=s*u;for(let o=0;o<u;o++){const h=[i,t,s,o][2],p=Math.round(l-h),d=e+n+r+o;let f=c[d];p>=0&&p<l&&(f=c[e+n+p*u+o]),a[d]=f}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Tk=ow((t=>Math.floor(t))),Ck=Bx(ge,Tk),Sk={kernelName:ge,backendName:"cpu",kernelFunc:Ck},$k=Xx(((t,e)=>Math.floor(t/e))),Ak=cv(ye,$k,null,"int32"),Ek={kernelName:ye,backendName:"cpu",kernelFunc:Ak},Rk={kernelName:as,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=xw({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=m;m=fv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=nv(n,m,d,o,f),n.disposeIntermediateTensorInfo(t)}return m}},Dk={kernelName:is,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=Ow({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=m;m=fv({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=nv(n,m,d,o,f),n.disposeIntermediateTensorInfo(t)}return m}},Ok={kernelName:ve,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,a=R(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=pu(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=Gr([u,c],s.dtype),d=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=[];let n=0;for(let s=0;s<o;s++){const r=d[t*o+s];n+=r*h[s],e.push(r)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${e} does not index into ${s.shape}`);for(let e=0;e<c;e++)p.values[t*c+e]=f[n*c+e]}return n.makeTensorInfo(l,p.dtype,p.values)}};function Fk(t,e,n){const s=Gr(n,t.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=e.locToIndex([a,i]);r[2]=e.values[o];const l=t.locToIndex(r);s.values[n]=t.values[l]}return s}const Mk={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:a}=e,{axis:i,batchDims:o}=s;Lx([r,a],"gatherV2");let l=o;null==o&&(l=0);const u=R(a.shape),c=Lu(r,a,P(i,r.shape)[0],l),h=gv({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=gv({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),d=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(p),m=Fk(n.bufferSync(h),f,d);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},Lk=Xx(((t,e)=>t>e?1:0)),zk=cv(we,Lk,null,"bool"),Pk={kernelName:we,backendName:"cpu",kernelFunc:zk},Vk=Xx(((t,e)=>t>=e?1:0)),Bk=cv(ke,Vk,null,"bool"),Wk={kernelName:ke,backendName:"cpu",kernelFunc:Bk},Uk={kernelName:Ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,r=R(s.shape),a=s.shape[s.shape.length-1],i=gv({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=xk(i,!0,n),l=gv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},Gk=Vx(Te,(t=>Number.isFinite(t)?1:0),"bool"),jk={kernelName:Te,backendName:"cpu",kernelFunc:Gk},Hk=Vx(Ce,(t=>Math.abs(t)===1/0?1:0),"bool"),qk={kernelName:Ce,backendName:"cpu",kernelFunc:Hk},Xk=Vx(Se,(t=>Number.isNaN(t)?1:0),"bool"),Kk={kernelName:Se,backendName:"cpu",kernelFunc:Xk},Yk=Xx(((t,e)=>t<e?1:0)),Zk=cv(Ae,Yk,null,"bool"),Jk={kernelName:Ae,backendName:"cpu",kernelFunc:Zk},Qk=Xx(((t,e)=>t<=e?1:0)),t_=cv(Ee,Qk,null,"bool"),e_={kernelName:Ee,backendName:"cpu",kernelFunc:t_};function n_(t,e,n){const s=(e-t)/(n-1),r=et(n,"float32");r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+s;return r}const s_={kernelName:Re,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:a}=n,i=n_(s,r,a);return e.makeTensorInfo([i.length],"float32",i)}},r_=ow((t=>Math.log(t))),a_=Bx(De,r_),i_={kernelName:De,backendName:"cpu",kernelFunc:a_},o_=Vx(Oe,(t=>Math.log1p(t))),l_={kernelName:Oe,backendName:"cpu",kernelFunc:o_},u_=Xx(((t,e)=>t&&e)),c_=cv(Fe,u_,null,"bool"),h_={kernelName:Fe,backendName:"cpu",kernelFunc:c_},p_=Vx(Me,(t=>t?0:1),"bool"),d_={kernelName:Me,backendName:"cpu",kernelFunc:p_},f_=Xx(((t,e)=>t||e)),m_=cv(Le,f_,null,"bool"),g_={kernelName:Le,backendName:"cpu",kernelFunc:m_},y_={kernelName:ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:a,bias:i,alpha:o,beta:l}=s;Lx(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,p=R(r.shape),d=new Float32Array(p);function f(t){const e=t%u;let n=t-e+Math.max(0,e-a);const s=t-e+Math.min(e+a,c);let r=0;for(;n<=s;n++){const t=h[n];r+=t*t}return r}for(let t=0;t<p;t++){const e=f(t),n=h[t]*Math.pow(i+o*e,-l);d[t]=n}return n.makeTensorInfo(r.shape,r.dtype,d)}},b_={kernelName:Pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,y:a,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s;Lx(i,"LRNGrad");const h=R(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let t=0;t<y;t++){const e=t%p,n=t-e+Math.max(0,e-o),s=t-e+Math.min(p,e+o+1);let r=0;for(let t=n;t<s;t++)r+=Math.pow(f[t],2);r=u*r+l;for(let e=n;e<s;e++){let n=-2*u*c*f[e]*m[t]/r;t===e&&(n+=Math.pow(r,-c)),n*=d[t],g[e]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function x_(t,e,n,s){const r=B(s,R(n));for(let n=0;n<r.length;++n){const s=n*e;let a=t[s];for(let n=0;n<e;++n){const e=t[s+n];e>a&&(a=e)}r[n]=a}return r}function v_(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=P(a,l);let h=c;const p=Zi(h,u);let d=o.data.get(r.dataId).values;if(null!=p){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[p[e]];d=Sv(d,l,r.dtype,p,t),h=Qi(h.length,u),l=t}Lx(r,"max"),Yi("max",h,u);const[f,m]=Xi(l,h),g=x_(d,R(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=Ki(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const w_={kernelName:Ve,backendName:"cpu",kernelFunc:v_},k_=Xx(((t,e)=>Math.max(t,e))),__=cv(Be,k_),I_={kernelName:Be,backendName:"cpu",kernelFunc:__},N_={kernelName:We,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;Lx(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;S(Ka(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pa(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&D(u.inShape,u.outShape))c=Gx({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=Z(r.shape),s=Hv(t,r.shape,r.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},T_={kernelName:Ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Lx(r,"maxPool3d");const c=Va(r.shape,a,i,1,o,l,u),h=Xv(n.data.get(r.dataId).values,r.shape,r.dtype,Z(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},C_={kernelName:je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Lx([r,a],"maxPool3DGrad");const c=Va(a.shape,i,o,1,l,u),h=function(t,e){const n=Gr(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=i;const v=Math.min(e.inDepth,u+b);for(let s=0;s<e.outHeight;++s){const u=s*r-d;let p=u;for(;p<0;)p+=o;const w=Math.min(e.inHeight,c+u);for(let r=0;r<e.outWidth;++r){const d=r*a-f;let k=d;for(;k<0;)k+=l;const _=Math.min(e.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,N=-1;for(let e=x;e<v;e+=i){const n=e-b;for(let s=p;s<w;s+=o){const r=s-u;for(let a=k;a<_;a+=l){const i=a-d,o=t.get(m,e,s,a,g);o>=I&&(I=o,N=n*c*h+r*c+i)}}}n.set(N,m,y,s,r,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,_=x-1-c.padInfo.top,I=Gr(a.shape,"float32"),N=n.bufferSync(r);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-w,i=s-_,o=r-k;let l=0;for(let n=0;n<b;n+=m){const s=(a+n)/p;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*v-1-h.get(t,s,a,u,e)===n*x*v+r*v+i?1:0;0!==p&&(l+=N.get(t,s,a,u,e)*p)}}}I.set(l,t,n,s,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},S_={kernelName:Ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a,output:i}=e,o=a;Lx([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Pa(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=Gr(p.outShape,o.dtype,qv(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,_=Gr(o.shape,"float32"),I=n.data.get(r.dataId).values,N=Gr(r.shape,"float32",I);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-k,a=s-w;let i=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=b){const o=(a+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(t,s,o,e)===n*v+r?1:0;0!==l&&(i+=N.get(t,s,o,e)*l)}}_.set(i,t,n,s,e)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},$_={kernelName:He,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;Lx(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Pa(s.shape,r,a,[1,1],i),[h,p]=function(t,e,n,s,r){const a=Hv(t,0,n,Z(e),r,"max"),i=qv(t,e,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),d=l.write(h,c.outShape,s.dtype),f=l.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function A_(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;let o;Lx(r,"sum"),o="bool"===r.dtype?lv({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Gx({inputs:{x:r},backend:n});const l=o.shape.length,u=P(a,o.shape),c=Zi(u,l);let h=u,p=o;null!=c&&(p=$v({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Qi(h.length,l)),Yi("sum",h,p.shape.length);const[d,f]=Xi(p.shape,h);let m=av(n,d,Bs(p.dtype,"int32"));const g=R(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let t=0;t<y.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=b[e+t];y[t]=n}if(i){const t=m;m=gv({inputs:{x:m},backend:n,attrs:{shape:Ki(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const E_={kernelName:Mn,backendName:"cpu",kernelFunc:A_},R_={kernelName:qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=P(a,r.shape),l=R(Xi(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=lv({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=dk({inputs:{a:h,b:c},backend:n});u.push(p);const d=A_({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},D_={kernelName:Xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;Lx(r,"min");const o=P(a,r.shape);let l=o;const u=Zi(l,r.shape.length);let c=r;null!=u&&(c=$v({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Qi(l.length,r.shape.length)),Yi("min",l,c.shape.length);const[h,p]=Xi(c.shape,l),d=R(p),f=et(R(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const s=m[e+t];s<n&&(n=s)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const t=gv({inputs:{x:g},backend:n,attrs:{shape:Ki(h,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},O_=Xx(((t,e)=>Math.min(t,e))),F_=cv(Ke,O_),M_={kernelName:Ke,backendName:"cpu",kernelFunc:F_},L_={kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:a,mode:i}=s;Lx(r,"mirrorPad");const o=a.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=a.map((t=>t[0])),u=a.map(((t,e)=>t[0]+r.shape[e])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=Z(r.shape),f=R(o),m=o.length,g=Z(o),y=B(r.dtype,f);for(let t=0;t<f;t++){let e=at(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=rt(e,p,d);y[t]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},z_=Xx(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),P_=cv(Ze,z_),V_={kernelName:Ze,backendName:"cpu",kernelFunc:P_};var B_=n(948);function W_(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=P([o],r.shape),u=v_({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ki(u.shape,l),h=gv({inputs:{x:u},backend:n,attrs:{shape:c}}),p=yk({inputs:{a:r,b:h},backend:n}),d=ek({inputs:{x:p},backend:n}),f=A_({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=gv({inputs:{x:f},backend:n,attrs:{shape:c}}),g=dk({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const U_={kernelName:Pn,backendName:"cpu",kernelFunc:W_},G_={kernelName:Je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:a,seed:i,normalized:o}=s;Lx(r,"multinomial");const l=o?r:W_({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=et(R(p),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const s=B_.alea(i.toString()),r=t*a;for(let t=0;t<a;++t){const e=s();d[r+t]=n.length;for(let s=0;s<n.length;s++)if(e<n[s]){d[r+t]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function j_(t,e,n){const s=ms(-1,n);return lk([],e,s,t,n)}const H_={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;Lx(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=j_(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},q_=yl,X_={kernelName:nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;Lx(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=q_(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},K_=bl,Y_={kernelName:sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;Lx(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=K_(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Z_=xl,J_={kernelName:rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;Lx(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Z_(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Q_=Xx(((t,e)=>t!==e?1:0)),tI=cv(en,Q_,null,"bool"),eI={kernelName:en,backendName:"cpu",kernelFunc:tI},nI={kernelName:on,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{depth:a,onValue:i,offValue:o}=s;Lx(r,"oneHot");const l=R(r.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(r.dataId).values;for(let t=0;t<l;++t)c[t]>=0&&c[t]<a&&(u[t*a+c[t]]=i);return n.makeTensorInfo([...r.shape,a],"int32",u)}};function sI(t){const{inputs:e,backend:n}=t,{x:s}=e;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const t=iv({inputs:{input:s},backend:n}),e=sI({inputs:{x:t},backend:n}),r=mw({inputs:{input:s},backend:n}),a=sI({inputs:{x:r},backend:n}),i=sv({inputs:{real:e,imag:a},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return _k({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const rI={kernelName:ts,backendName:"cpu",kernelFunc:sI},aI={kernelName:an,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=iv({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),a=mw({inputs:{input:r},backend:s}),i=sI({inputs:{x:a},backend:s}),o=sv({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return _k({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function iI(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return sk({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const a=e[0].shape,i=e[0].dtype;e.forEach((t=>{$(a,t.shape,"All tensors passed to stack must have matching shapes"),S(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=yw({inputs:e.map((t=>{const e=sk({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const oI={kernelName:ln,backendName:"cpu",kernelFunc:iI},lI={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:a,constantValue:i}=s;Lx(r,"pad");const o=a.map(((t,e)=>t[0]+r.shape[e]+t[1])),l=a.map((t=>t[0])),u=n.data.get(r.dataId).values,c=R(r.shape),h=r.shape.length,p=Z(r.shape),d=R(o),f=o.length,m=Z(o),g=B(r.dtype,d);0!==i&&g.fill(i);for(let t=0;t<c;t++)g[rt(at(t,h,p).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},uI=Xx(((t,e)=>Math.pow(t,e))),cI=cv(cn,uI),hI={kernelName:cn,backendName:"cpu",kernelFunc:cI};function pI(t,e,n,s){const[r,a]=Xi(t,s),i=Bs(e,"int32"),o=et(R(r),i),l=R(a);for(let t=0;t<o.length;++t){const e=t*l;let s=1;for(let t=0;t<l;++t)s*=n[e+t];o[t]=s}return{outVals:o,outShape:r,outDtype:i}}const dI={kernelName:pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;Lx(r,"prod");const o=r.shape.length,l=P(a,r.shape),u=Zi(l,o);let c=l,h=r;const p=[];null!=u&&(h=$v({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),c=Qi(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=pI(h.shape,h.dtype,d,c);let y=m;return i&&(y=Ki(m,l)),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,f)}};function fI(t,e,n,s){if(t===e||t<e&&n<0||e<t&&n>1)return et(0,s);const r=et(Math.abs(Math.ceil((e-t)/n)),s);e<t&&1===n&&(n=-1),r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+n;return r}const mI={kernelName:dn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,dtype:a,step:i}=n,o=fI(s,r,i,a);return e.makeTensorInfo([o.length],a,o)}},gI=Vx(mn,(t=>1/t)),yI={kernelName:mn,backendName:"cpu",kernelFunc:gI},bI={kernelName:vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s;Lx(r,"resizeBilinear");const l=Z(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(R([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=i?v*(e+.5)-.5:v*e;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(p-1,Math.ceil(n)),o=t*l[0]+s*l[1],u=t*l[0]+a*l[1];for(let t=0;t<c;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),s=e-n,a=Math.min(d-1,Math.ceil(e)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],a=e+(m[p+t]-e)*s,i=a+(n+(m[y+t]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},xI={kernelName:wn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s;Lx([a,r],"resizeBilinearGrad");const o=Z(r.shape),[l,u,c,h]=r.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<p;t++){const n=t*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=e+s*o[1],i=e+r*o[1],l=n-s,p=1-l;for(let t=0;t<d;t++){const e=t*b,n=Math.floor(e),s=Math.min(Math.ceil(e),c-1),r=e-n,u=1-r,d=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],w=p*u,k=p*r,_=l*u,I=l*r;for(let t=0;t<h;t++){const e=x[v++];f[d+t]+=e*w,f[m+t]+=e*k,f[g+t]+=e*_,f[y+t]+=e*I}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},vI={kernelName:bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s;Lx(r,"resizeNearestNeighbor");const l=Z(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let s=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=e+s*l[1];for(let t=0;t<c;t++){const e=i?v*(t+.5):v*t;let n=Math.min(d-1,a?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let t=0;t<f;t++){const e=m[s+t];g[w++]=e}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},wI={kernelName:xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s;Lx([a,r],"resizeNearestNeighborGrad");const o=Z(r.shape),l=Z(a.shape),[u,c,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,_=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*w),r=Math.floor(s-_/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<_;a++){const u=a+r;if(u<0||u>=d)continue;const p=e+u*l[1],m=u*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let t=0;t<I;t++){const e=t+y;if(e<0||e>=f)continue;const r=p+e*l[2],a=e*v;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},kI={kernelName:_n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:a}=s;Lx(r,"reverse");const i=r.shape.length,o=P(a,r.shape);if(0===i)return Gx({inputs:{x:r},backend:n});const l=new Ss(r.shape,r.dtype),u=n.bufferSync(r);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=r.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},_I={kernelName:ss,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:a,center:i}=e,o=n,l=B(s.dtype,R(s.shape)),[u,c,h,p]=s.shape,[d,f]=iu(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let i=0;i<p;i++){const o=[u,t,s,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[e+w*(h*p)+v*p+i]),l[e+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},II=Vx(In,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),NI={kernelName:In,backendName:"cpu",kernelFunc:II},TI=ow((t=>1/Math.sqrt(t))),CI=Bx(Nn,TI),SI={kernelName:Nn,backendName:"cpu",kernelFunc:CI};function $I(t,e,n,s,r,a,i,o,l,u){const c=[s/r,r],h=t.values,p=e.values;if(0===s)return Gr(n,e.dtype);const d=Gr(c,e.dtype);d.values.fill(l);for(let t=0;t<a;t++){const a=[];let l=0;for(let e=0;e<i;e++){const n=h[t*i+e];a.push(n),l+=n*o[e]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?d.values[l*r+n]+=p[t*r+n]:d.values[l*r+n]=0===e.rank?p[0]:p[t*r+n]}return d}const AI={kernelName:Tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:a}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=mu(0,r,i),p=$I(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},EI={kernelName:Cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:a}=e;Lx([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Bs(r.dtype,a.dtype),h=et(R(r.shape),c);let p=0;const d=0===i||i>1||1===r.shape.length?1:R(r.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<d;e++)1===o[t]?h[p++]=l[t]:h[p++]=u[t];return n.makeTensorInfo(r.shape,c,h)}},RI=gu,DI=yu,OI=Vx(Sn,(t=>t>=0?DI*t:RI*(Math.exp(t)-1))),FI={kernelName:Sn,backendName:"cpu",kernelFunc:OI},MI=Vx(Dn,(t=>1/(1+Math.exp(-t)))),LI={kernelName:Dn,backendName:"cpu",kernelFunc:MI},zI=Vx(Rn,(t=>t<0?-1:t>0?1:0)),PI={kernelName:Rn,backendName:"cpu",kernelFunc:zI},VI=Vx(An,(t=>Math.sin(t))),BI={kernelName:An,backendName:"cpu",kernelFunc:VI},WI=Vx(En,(t=>Math.sinh(t))),UI={kernelName:En,backendName:"cpu",kernelFunc:WI},GI=Math.log(1.1920928955078125e-7)+2,jI=Vx(On,(t=>{const e=t>-GI,n=t<GI,s=Math.exp(t);let r;return r=n?s:e?t:Math.log(1+s),r})),HI={kernelName:On,backendName:"cpu",kernelFunc:jI},qI={kernelName:Ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,paddings:i}=s;Lx([r],"spaceToBatchND");const o=R(a),l=[[0,0]];l.push(...i);for(let t=1+a.length;t<r.shape.length;++t)l.push([0,0]);const u=lI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=ou(u.shape,a,o,!1),h=lu(c.length,a.length,!1),p=uu(u.shape,a,o,!1),d=gv({inputs:{x:u},backend:n,attrs:{shape:c}}),f=$v({inputs:{x:d},backend:n,attrs:{perm:h}}),m=gv({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},XI={kernelName:Un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:a,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=mu(0,r,o),d=$I(n.bufferSync(r),n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},KI={kernelName:zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:a,axis:i}=s,o=P(i,r.shape)[0],l=Ou(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const s=ew({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,s}))}},YI=Vx(Fn,(t=>Math.sqrt(t))),ZI={kernelName:Fn,backendName:"cpu",kernelFunc:YI},JI={kernelName:Bn,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;Lx(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let t=0;t<r.length;++t){const e=r[t];a[t]=e*e}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},QI=Xx(((t,e)=>{const n=t-e;return n*n})),tN=cv(Vn,QI),eN={kernelName:Vn,backendName:"cpu",kernelFunc:tN},nN=Vx(es,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),sN={kernelName:es,backendName:"cpu",kernelFunc:nN};function rN(t,e,n,s){const r=Gr(t,e.dtype);for(let t=0;t<r.size;t++){const a=r.indexToLoc(t),i=new Array(a.length);for(let t=0;t<i.length;t++)i[t]=a[t]*n[t]+s[t];r.set(e.get(...i),...a)}return r}const aN={kernelName:Gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;Lx(r,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=xa(r.shape,a,i,o,l,u,c,h,p),x=gv({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(d){const t=ew({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=gv({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else{const t=rN(b,n.bufferSync(x),m,f);v=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=gv({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},iN=Vx(jn,(t=>Math.tan(t))),oN={kernelName:jn,backendName:"cpu",kernelFunc:iN},lN=Vx(Hn,(t=>Math.tanh(t)));function uN(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const s=Gr(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const a=t.locToIndex(r);s.values[e]=t.values[a]}return s}function cN(t,e,n,s,r){const a=e[e.length-1],[i,o]=[t.length/a,a],l=B(n,i*s),u=B("int32",i*s);for(let e=0;e<i;e++){const n=e*o,r=t.subarray(n,n+o),a=[];for(let t=0;t<r.length;t++)a.push({value:r[t],index:t});a.sort(((t,e)=>e.value-t.value));const i=e*s,c=l.subarray(i,i+s),h=u.subarray(i,i+s);for(let t=0;t<s;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=s,[Gr(c,n,l),Gr(c,"int32",u)]}function hN(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return T(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return T(0,n,e-1)}(t,e);case"nearest":return function(t,e){return T(0,t,e-1)}(t,e);case"constant":default:return function(t,e){return t}(t)}}function pN(t,e,n,s,r,a,i,o,l,u,c){return 0<=o&&o<e&&0<=l&&l<n?t[i*s+o*r+l*a+u]:c}function dN(t,e,n,s,r,a,i,o,l,u,c){return pN(t,e,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function fN(t,e,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*pN(t,e,n,s,r,a,i,h,p,u,c)+(l-p)*pN(t,e,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*pN(t,e,n,s,r,a,i,d,p,u,c)+(l-p)*pN(t,e,n,s,r,a,i,d,f,u,c))}function mN(t,e,n,s){const r=P(e,n)[0],a=[1,n[0],1];for(let t=0;t<r;t++)a[0]*=n[t];a[1]=n[r];for(let t=r+1;t<n.length;t++)a[2]*=n[t];const i={},o=new Int32Array(n[r]),l=new Ss(a,s,t),u=[],c=1===a[0]&&1===a[2];for(let e=0;e<n[r];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)t.push(l.get(n,e,s));n=t.join(",")}if(void 0!==i[n])o[e]=i[n];else{const t=Object.keys(i).length;i[n]=t,o[e]=t,u.push(e)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new Ss(h,s);u.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)p.set(l.get(n,t,s),n,e,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const gN=[vv,kv,Iv,Tv,mv,Cv,Ev,Rv,Dv,Ov,Mv,zv,Vv,Uv,jv,Kv,Yv,Zv,Jv,xv,Qv,sw,iw,uv,cw,pw,rv,dw,bw,ww,kw,vw,Iw,Nw,_w,Cw,$w,Aw,Ew,Rw,Dw,Fw,Mw,Lw,zw,Pw,Bw,Vw,fk,Ux,Ww,jw,Qw,nk,rk,ok,kk,Ik,Nk,Sk,Ek,Rk,Dk,Ok,Mk,Pk,Wk,jx,Uk,gw,jk,qk,Kk,qx,Jk,e_,s_,i_,l_,h_,d_,g_,y_,b_,I_,N_,T_,C_,S_,$_,w_,R_,D_,M_,L_,V_,G_,hk,H_,X_,Y_,J_,eI,nI,aI,oI,lI,hI,Zx,dI,mI,ov,yI,Qx,ev,yv,bI,xI,vI,wI,kI,_I,NI,SI,AI,EI,FI,LI,PI,BI,UI,nw,U_,HI,qI,XI,KI,ZI,JI,eN,sN,aN,bk,E_,oN,{kernelName:Hn,backendName:"cpu",kernelFunc:lN},{kernelName:qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:a}=s;Lx(r,"tile");const i=uN(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:a,sorted:i}=s;Lx(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=cN(o,r.shape,r.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},Av,{kernelName:Kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{image:r,transforms:a}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=Z(r.shape),b=y[0],x=y[1],v=y[2],w=B(r.dtype,R(g));w.fill(l);const k=s.data.get(r.dataId).values,_=s.data.get(a.dataId).values;for(let t=0;t<c;++t){const e=1===a.shape[0]?_:_.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<d;++r){let a;const u=e[6]*s+e[7]*n+1;if(0===u)continue;const c=(e[0]*s+e[1]*n+e[2])/u,d=(e[3]*s+e[4]*n+e[5])/u,f=hN(c,p,o),m=hN(d,h,o);switch(i){case"nearest":a=dN(k,h,p,b,x,v,t,m,f,r,l);break;case"bilinear":a=fN(k,h,p,b,x,v,t,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[t*b+n*x+s*v+r]=a}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:Zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:a}=e;Lx(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=mN(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let t=0;t<i;t++)t!==a&&(l[u++]=r.shape[t]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let t=0;t<p.length;t++){c[a]=t;const e=ew({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[t]=gv({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}},{kernelName:Qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:a}=e,{numSegments:i}=s;Lx(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let t=0;t<u;++t){const e=sk({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<i;++t){const e=ms(t,"int32"),s=n.makeTensorInfo([],"int32",e),a=Gw({inputs:{a:s,b:c},backend:n}),i=lv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=ck({inputs:{a:i,b:r},backend:n}),h=A_({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=iI({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},rI];for(const t of gN)ps(t);const yN={},bN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function xN(t){if(!(t in yN)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete yN[t]}),!1),1===t?e.getContext("webgl",bN)||e.getContext("experimental-webgl",bN):e.getContext("webgl2",bN)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;yN[t]=e}const e=yN[t];return e.isContextLost()?(delete yN[t],xN(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),yN[t])}var vN,wN,kN;function _N(t,e){return[e,t]}function IN(t){const e=R(t);return F(Math.ceil(e/4))}function NN(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function TN(t,e){const n=t;let s,r,a,i,o,l,u,c,h,p;return 2===lt().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(s=t.RGBA,r=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),l=t.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function CN(t,e){const n=e();return lt().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function SN(t){return!!(lt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function $N(t,e){return LN(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(vN||(vN={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(wN||(wN={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(kN||(kN={}));const AN=/ERROR: [0-9]+:([0-9]+):/g;function EN(t,e){if(CN(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function RN(t,e,n,s,r,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(CN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,s))),CN(t,(()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,a,i))),CN(t,(()=>t.enableVertexAttribArray(o))),!0)}function DN(t,e,n,s){CN(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),CN(t,(()=>t.activeTexture(t.TEXTURE0+n))),CN(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,s))),CN(t,(()=>t.uniform1i(n,s)))}function ON(t,e,n){CN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),CN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function FN(t,e){CN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),CN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function MN(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function LN(t,e,n){const s=CN(t,(()=>e()));if(null==s)throw new Error(n);return s}function zN(t,e=2){return R(t.slice(0,t.length-e))}function PN(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function VN(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[zN(t),...PN(t)]),e}function BN(t){return t%2==0}function WN(t,e){if(D(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s)return!0;if(BN(n)&&BN(s)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&BN(t[0])&&BN(e[0])}let UN,GN;function jN(t,e){return null!=t.getExtension(e)}function HN(t){try{if(null!=xN(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function qN(t){const e=TN(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),r}function XN(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&S("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const KN=lt();function YN(){let t,e,n,s,r,a,i,o,l,u;return 2===lt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function ZN(t,e,n="index"){const s=Z(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function JN(t){const e=Z(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}KN.registerFlag("HAS_WEBGL",(()=>KN.getNumber("WEBGL_VERSION")>0)),KN.registerFlag("WEBGL_VERSION",(()=>HN(2)?2:HN(1)?1:0)),KN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),KN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===KN.get("WEBGL_VERSION"))),KN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),KN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),KN.registerFlag("WEBGL_PACK",(()=>KN.getBool("HAS_WEBGL"))),KN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_PACK_CLIP",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),KN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_PACK_REDUCE",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_CONV_IM2COL",(()=>KN.getBool("WEBGL_PACK"))),KN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==UN){const e=xN(t);UN=e.getParameter(e.MAX_TEXTURE_SIZE)}return UN}(KN.getNumber("WEBGL_VERSION")))),KN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==GN){const e=xN(t);GN=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,GN)}(KN.getNumber("WEBGL_VERSION")))),KN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=KN.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=xN(t);return e=jN(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:jN(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),KN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>KN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Qs())),KN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=xN(t);if(1===t){if(!jN(e,"OES_texture_float"))return!1}else if(!jN(e,"EXT_color_buffer_float"))return!1;return qN(e)}(KN.getNumber("WEBGL_VERSION")))),KN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!KN.getBool("WEBGL_FORCE_F16_TEXTURES")&&KN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),KN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=xN(t);if(1!==t){if(jN(e,"EXT_color_buffer_float"))return qN(e);const t="EXT_color_buffer_half_float";if(jN(e,t)){const n=e.getExtension(t);return function(t,e){const n=TN(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(r),a}(e,n)}return!1}return!!jN(e,"OES_texture_float")&&!!jN(e,"WEBGL_color_buffer_float")&&qN(e)}(KN.getNumber("WEBGL_VERSION")))),KN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=KN.getNumber("WEBGL_VERSION"))&&null!=xN(t).fenceSync;var t})),KN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>KN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),KN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),KN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Qs()&&KN.getBool("IS_CHROME")?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}));const QN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class tT{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vN.DENSE;const e=IN(t),n=YN();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ZN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class eT{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vN.DENSE;const e=IN(t),n=YN();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ZN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class nT{constructor(t){this.variableNames=["A"],this.outTexUsage=wN.DOWNLOAD;const e=YN();this.outputShape=t,this.userCode=`\n      ${QN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class sT{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=wN.DOWNLOAD;const e=YN();this.outputShape=t,this.userCode=`\n      ${QN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class rT{constructor(t,e,n=!1){this.variableNames=["A"];const s=YN(),[r,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${JN(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class aT{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=YN(),[r,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${JN(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${s.output} = ${o};\n      }\n    `}}function iT(t,e,n,s,r,a){!function(t,e){const n=lt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return LN(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return CN(t,(()=>t.bindTexture(o,i))),CN(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),CN(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),CN(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),CN(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),CN(t,(()=>t.texImage2D(o,0,s,e,n,0,r,a,null))),CN(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function oT(t){return t.internalFormatFloat}function lT(t){return t.internalFormatHalfFloat}function uT(t){return t.downloadTextureFormat}function cT(t){return t.internalFormatPackedFloat}function hT(t){return t.internalFormatPackedHalfFloat}class pT{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=lt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){yN[t]=e}(e,t)):this.gl=xN(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===lt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=$N(this.gl,t),jN(this.gl,e))this.textureHalfFloatExtension=$N(this.gl,e);else if(lt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),jN(this.gl,s))this.colorBufferHalfFloatExtension=$N(this.gl,s);else if(lt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",jN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!jN(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(t){return function(t,e){const n=LN(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return CN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),CN(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=LN(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return CN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),CN(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return LN(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=TN(this.gl,this.textureHalfFloatExtension)}get debug(){return lt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;CN(t,(()=>t.finish())),CN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),CN(t,(()=>t.deleteFramebuffer(this.framebuffer))),CN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),CN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),CN(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=_N(e,n);return iT(t,r,a,oT(s),s.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=_N(e,n);return iT(t,r,a,lT(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=_N(e,n);return iT(t,r,a,uT(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){CN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?CN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):CN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),CN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,s){this.throwIfDisposed(),function(t,e,n,s,r,a){let i,o,l;CN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*s*4),o=t.FLOAT,l=a.internalFormatPackedFloat),i.set(r),CN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,i))),CN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=NN(e,n);return iT(t,r,a,hT(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=NN(e,n);return iT(t,r,a,cT(s),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(FN(this.gl,this.framebuffer),this.outputTexture=null),CN(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,s){const[r,a]=_N(e,n),i=new Uint8Array(e*n*4);return CN(t,(()=>t.readPixels(0,0,r,a,s.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,s,r,a){return function(t,e,n,s,r,a,i,o){const l=t,u=new Float32Array(function(t,e){const[n,s]=NN(t,e);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const s=function(t,e,n,s){const r=t.createBuffer();CN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const a=16*e*n;return CN(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),CN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),CN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(lt().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=s.clientWaitSync(r,0,0);return t===s.ALREADY_SIGNALED||t===s.CONDITION_SATISFIED},e=r}else lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const s=new Float32Array(e*n*4);return CN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s))),s}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=LN(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(CN(t,(()=>t.shaderSource(n,e))),CN(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=AN.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const s=+n[1],r=t.split("\n"),a=r.length.toString().length+2,i=r.map(((t,e)=>M((e+1).toString(),a)+t));let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${M(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),s=function(t){const e=YN();return function(t,e){const n=LN(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(CN(t,(()=>t.shaderSource(n,e))),CN(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),r=function(t){return LN(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return CN(e,(()=>e.attachShader(r,s))),CN(e,(()=>e.attachShader(r,n))),function(t,e){if(CN(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&EN(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return CN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),RN(t,e,"clipSpacePos",n,3,20,0)&&RN(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&CN(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&EN(this.gl,this.program),CN(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return LN(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),CN(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),DN(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[s,r]=NN(e,n);this.setOutputMatrixTextureDriver(t,s,r)}setOutputMatrixWriteRegion(t,e,n,s){this.setOutputMatrixWriteRegionDriver(n,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&EN(this.gl,this.program),MN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),CN(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),CN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=$N(this.gl,2===lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await L((()=>this.disposed||this.isQueryAvailable(t,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||L((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),ON(this.gl,t,this.framebuffer),this.debug&&MN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(ON(this.gl,this.outputTexture,this.framebuffer),this.debug&&MN(this.gl)):FN(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const s=this.gl;ON(s,t,this.framebuffer),this.debug&&MN(s),this.outputTexture=t,CN(s,(()=>s.viewport(0,0,e,n))),CN(s,(()=>s.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,s){this.throwIfDisposed(),CN(this.gl,(()=>this.gl.scissor(t,e,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:dT}=s;function fT(t,e,n,s){const r=[];t.forEach((t=>{const e=R(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`))}));const a=r.join("\n"),i=t.map((t=>function(t,e,n=!1){let s="";s+=n?gT(t):mT(t);const r=t.shapeInfo.logicalShape,a=e.logicalShape;return r.length<=a.length&&(s+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=dT(t.shapeInfo.logicalShape,e.logicalShape),l=_T(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let d="return outputValue;";const f=1===R(t.shapeInfo.logicalShape),m=1===R(e.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?d="return vec4(outputValue.x);":o.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&D(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=_T(l),c=dT(t.shapeInfo.logicalShape,e.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${d[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${s}(${f});\n    }\n  `}(t,e)),s}(t,e,s))).join("\n"),o=e.texShape,l=YN(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${yT}\n    ${bT}\n    ${xT}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(D(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let a=r,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return D(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=ZN(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=ZN(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=ZN(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=ZN(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(p+=vT),[p,u,h,a,c,i,n].join("\n")}function mT(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${wT(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${kT(t)}\n      }\n    `;const s=t.shapeInfo.texShape,r=s[0],a=s[1];if(1===a&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=wT(e);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape;if(null!=r&&D(e,r)){const t=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=V(e),o=a;if(o.length<e.length){const e=["row","col"];return`\n      ${mT(IT(t,o))}\n      float ${s}(int row, int col) {\n        return ${s}(${NT(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${kT(t)}\n      }\n    `;const l=r[0],u=r[1],c=wT(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],a=e[2],{newShape:i,keptDims:o}=V(e),l=i;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${mT(IT(t,l))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${NT(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${a}, 1)));\n        ${kT(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],p=t.shapeInfo.flatOffset;if(h===r&&null==p)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${a} + depth + ${wT(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],a=e[2]*r,i=e[1]*a,{newShape:o,keptDims:l}=V(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${mT(IT(t,o))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${NT(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${r}, 1)));\n        ${kT(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${wT(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],a=e[3]*r,i=e[2]*a,o=e[1]*i,{newShape:l,keptDims:u}=V(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${mT(IT(t,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${NT(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${kT(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${wT(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=V(e);if(r.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${mT(IT(t,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${NT(e,a)});\n      }\n    `}const i=e[5],o=e[4]*i,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${kT(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${wT(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function gT(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${YN().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=t.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=YN();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,a=r[0],i=r[1],o=YN();if(null!=r&&D(e,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=[1,2],r=["b","row","col"];return`\n        ${gT(IT(t,e.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${NT(r,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${YN().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;return`\n    vec4 ${r}(${h}) {\n      int index = ${p};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${YN().texture2D}(${s}, uv);\n    }\n  `}(t)}}const yT="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bT="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xT="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vT="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function wT(t){return`offset${t}`}function kT(t){const e=t.name,n=R(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function _T(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function IT(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function NT(t,e){return e.map((e=>t[e])).join(", ")}function TT(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,r=e[n],a=r.shape;if(!D(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&r.isUniform)return;const i=t.texShape,o=r.isUniform?null:r.texData.texShape;if(!D(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:CT,bincountImpl:ST,bincountReduceImpl:$T,ceilImpl:AT,concatImpl:ET,expImpl:RT,expm1Impl:DT,floorImpl:OT,gatherV2Impl:FT,greaterImpl:MT,lessImpl:LT,linSpaceImpl:zT,logImpl:PT,maxImpl:VT,maximumImpl:BT,minimumImpl:WT,multiplyImpl:UT,negImpl:GT,prodImpl:jT,rangeImpl:HT,rsqrtImpl:qT,simpleAbsImpl:XT,sliceImpl:KT,stridedSliceImpl:YT,subImpl:ZT,tileImpl:JT,topKImpl:QT,transposeImpl:tC,uniqueImpl:eC}=w;function nC(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function sC(t,e){return 1===e?[t]:nC(t,e)}class rC{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=sC("rc",e),s=_T(e),r=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let s="";for(let r=t-2;r<t;r++)s+=`${n[r]} >= ${e[r]}`,r<t-1&&(s+="||");return s}(e,t,n),a=function(t,e,n,s){if(1===t)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,s=function(t,e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<t;n++)a=`${e[e.length-1-n]},`+a;n.push(a)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class aC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${ZN(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${JN(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class iC{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const s=lC(e,n),r=uC(t,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=oC(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let i;return s===kN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===kN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===kN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===kN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===kN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const r=lC(n,s),a=uC(e,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=oC(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=lt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function oC(t,e,n,s,r){const a=function(t,e){switch(t){case kN.PACKED_2X2_FLOAT32:return cT(e);case kN.PACKED_2X2_FLOAT16:return hT(e);case kN.UNPACKED_FLOAT32:return oT(e);case kN.UNPACKED_FLOAT16:return lT(e);case kN.PACKED_4X1_UNSIGNED_BYTE:return uT(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,s);let i;if(r){const[e,n]=NN(t[0],t[1]);i=e*n}else{const[e,n]=_N(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,a)}function lC(t,e){if(t===wN.UPLOAD)return kN.PACKED_2X2_FLOAT32;if(t===wN.RENDER||null==t)return function(t){return lt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?kN.PACKED_2X2_FLOAT32:kN.UNPACKED_FLOAT32:t?kN.PACKED_2X2_FLOAT16:kN.UNPACKED_FLOAT16}(e);if(t===wN.DOWNLOAD||t===wN.PIXELS)return kN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function uC(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class cC{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const hC="return abs(x);",pC="return x;";class dC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class fC{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=sC("rc",e),s=_T(e),r=function(t,e){if(1===t)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const mC=Vu,gC={};class yC extends _{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!lt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=xN(lt().getNumber("WEBGL_VERSION"));this.binaryCache=((e=lt().getNumber("WEBGL_VERSION"))in gC||(gC[e]={}),gC[e]),this.gpgpu=new pT(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new iC(this.gpgpu),this.numMBBeforeWarning=null==lt().global.screen?1024:lt().global.screen.height*lt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new k(this,_a())}nextDataId(){return yC.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((lt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||lt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:wN.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,s,r){if(lt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:wN.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new dC(i,pC):new cC(i,pC);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=ys()),c="complex64"===s?Tu(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=ys()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=e;if(null!=r){let e;e=o?new dC(s,pC):new cC(s,pC);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!lt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===lt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&lt().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...IN(s))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Tu(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=R(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(t,u),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&_a().removeDataId(t,this),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>xs(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Gr(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!SN(n)){if(lt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),r=R(e);if(lt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...IN(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=lt().getBool("WEBGL_PACK")&&!0===s,i=a?VN(e):e,o=a?new sT(i):new nT(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=E(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=E(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);i.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ys(),endMs:null}}endTimer(t){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=ys(),t)}async getQueryTime(t){if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(e,s,r,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return lt().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=_a().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return lt().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&R(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){Iu("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return mC(t.shape,e)}packedUnaryOp(t,e,n){const s=new dC(t.shape,e),r=this.compileAndRun(s,[t],n);return _a().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=XT(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(lt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,hC,t.dtype);const e=new cC(t.shape,hC),n=this.compileAndRun(e,[t]);return _a().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&H(n[0])){const r=n.map((t=>bs(t)));s=this.write(r,t,e)}else s=this.write(n,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:s}=this.makeTensorInfo(t,e,n);return _a().makeTensorFromDataId(s,t,e,this)}unpackTensor(t){const e=new fC(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new rC(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[zN(t.shape),...PN(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},r=[zN(e),...PN(e)],a=new aC(r,n),i=this.runWebGLProgram(a,[s],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:s,dtype:r}=e,a=VN(s);let i;return i=n?new eT(a):new tT(a),{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,s,r=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===vN.DENSE){const e=IN(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===R(a.shape))return i.values=B(a.dtype,0),a;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&R(e.shape)<=lt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!WN(n.shape,e.shape)){const t=e,s=e.shape;e.shape=n.shape,e=this.packedReshape(e,s),o.push(e),n=this.texData.get(e.dataId),t.shape=s}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(t,e,n){let s="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${n}_${e}`}));const r=t.userCode;let a=t.constructor.name;return a+="_"+s+"_"+r,a}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,s){const r=e.userCode,a=n.map(((t,n)=>{const s={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(s.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:s}})),i=a.map((t=>t.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=fT(a,o,r,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===lt().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const s=e.variableNames[n],r=!1;p[s]=t.getUniformLocation(u,s,r),p[`offset${s}`]=t.getUniformLocation(u,`offset${s}`,r)}return{program:e,source:l,webGLProgram:u,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(t,e,n,s,r){TT(e.inShapeInfos,n),TT([e.outShapeInfo],[s]);const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===lt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const r=e.program.variableNames[s],a=e.uniformLocations[r],i=e.uniformLocations[`offset${r}`];if(null!=a)if(n.isUniform)if(R(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,s)})),null!=r&&r(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,s),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));const f=lt().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const t=ys();t-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!lt().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,s,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,s,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(lt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Na((()=>{if(!lt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=lt().getBool("DEBUG");lt().set("DEBUG",!1);const e=this.abs(Ea(1e-8)).dataSync()[0];if(lt().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=e;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=ys());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=lt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?C(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=V(t);t=e.newShape}let s=R(t);if(t.length<=1&&s<=n)return[1,s];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=zN(t);let n=2,r=2;return t.length&&([n,r]=PN(t)),s=e*(n/2)*(r/2),F(s).map((t=>2*t))}return F(s)}(n,o),e.texShape=c),null!=r){const t=VN(n);let a,i=c[1],h=c[0];const p=r instanceof Uint8Array;o?([i,h]=NN(c[0],c[1]),a=new aT(t,[h,i],p)):a=new rT(t,[h,i],p);const d=this.makeTensorInfo([h,i],s);this.texData.get(d.dataId).usage=p?wN.PIXELS:wN.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,r);const f=!0,m=this.runWebGLProgram(a,[d],s,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=ys()-u)}else{const t=this.acquireTexture(c,i,s,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:s}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,s)),n.values}acquireTexture(t,e,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*j(e)}}yC.nextDataId=0,tr()&&$a("webgl",(()=>new yC),2);class bC{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=wi(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class xC{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=wi(e,n);const r=this.outputShape.length;let a="";if(s)if(0===r||1===R(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${_T(r)} coords = getOutputCoords();\n        `,1===r)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=sC("coords",r);a+=`\n            bool nextRowOutOfBounds =\n              (${t[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${t[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function vC(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const wC={kernelName:_e,backendName:"webgl",kernelFunc:vC};function kC(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=vC({inputs:{x:s},backend:n}),l=vC({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const _C={kernelName:Lt,backendName:"webgl",kernelFunc:kC},IC="return (a < 0.) ? b * a : a;",NC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",TC={kernelName:$e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{alpha:a}=s,i=n.makeTensorInfo([],"float32",ms(a,"float32")),o=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xC(NC,r.shape,i.shape):new bC(IC,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],r.dtype);return n.disposeIntermediateTensorInfo(i),l}},CC="return (a < 0.) ? b * a : a;",SC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",$C={kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e,a=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xC(SC,s.shape,r.shape):new bC(CC,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}};function AC({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const t=o.texData.get(i.dataId),e=n(t.values,l);return o.makeTensorInfo(i.shape,l,e)}let u;return u=lt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new dC(i.shape,e):new cC(i.shape,t),o.runWebGLProgram(u,[i],l)}}function EC({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new bC(t,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],Bs(n.dtype,s.dtype))})),a=kC({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||Bs(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=r){const t=c.texData.get(l.dataId),e=c.texData.get(u.dataId),[n,s]=r(l.shape,u.shape,t.values,e.values,h),a=c.makeTensorInfo(s,h);return c.texData.get(a.dataId).values=n,a}let p;return p=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new xC(e,l.shape,u.shape,n):new bC(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function RC(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?SC:CC;if("leakyrelu"===t)return e?NC:IC;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class DC{constructor(t,e,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=s?t[1]:t[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class OC{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=wi(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const FC="return a * b;";function MC(t){const{inputs:e,backend:n}=t,{a:s,b:r}=e,a=Bs(s.dtype,r.dtype);if("complex64"===s.dtype){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),a=new OC("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new OC("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=kC({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const t=n.texData.get(s.dataId),e=n.texData.get(r.dataId),[i,o]=UT(s.shape,r.shape,t.values,e.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xC(FC,s.shape,r.shape):new bC(FC,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const LC={kernelName:Qe,backendName:"webgl",kernelFunc:MC};function zC(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{shape:a}=s,i=n,o=R(r.shape),l=z(a,o),u=R(l);S(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||WN(r.shape,l)||null!==c.texture&&WN(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(t,e,n){const s=[zN(t.shape),...PN(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},a=[zN(e),...PN(e)],i=new aC(a,s),o=n.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(r,l,i)}const PC={kernelName:yn,backendName:"webgl",kernelFunc:zC};class VC{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=t;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${O(t)?t.toPrecision(2):t}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class BC{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=t;this.outputShape=[s,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function WC(t,e,n,s){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=au(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let a=t;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new VC({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new VC({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new BC({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class UC{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const s=_T(this.rank),r=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let e=0;e<t.length;e++)s[t[e]]=n[e];return s.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class GC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=_T(this.rank),r=nC("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=r[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function jC(t,e,n){const s=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GC(t.shape,e):new UC(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}function HC(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s;return function(t,e,n,s){const r=e,a=t.shape.length,i=P(r,t.shape);let o=i;const l=Zi(o,a),u=null!=l;let c=t;u&&(c=jC(t,l,s),o=Qi(o.length,a)),Yi("sum",o,a);const[h,p]=Xi(c.shape,o);let d=h;n&&(d=Ki(h,i));const f=R(p),m=zC({inputs:{x:c},attrs:{shape:[R(t.shape)/f,f]},backend:s}),g=WC(m,Ws(t.dtype),"sum",s),y=zC({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const qC={kernelName:Mn,backendName:"webgl",kernelFunc:HC};function XC(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=r.shape[a[t]];let u;if(i.shouldExecuteOnCPU([r])){const t=i.texData.get(r.dataId).values,e=tC(t,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=e}else u=jC(r,a,i);return u}const KC={kernelName:Yn,backendName:"webgl",kernelFunc:XC};function YC({a:t,b:e,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],p=s?e.shape[c-1]:e.shape[c-2],d=n?t.shape[u-1]:t.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=R(m),b=R(g);S(u>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([d,f]);S(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[y,h,d]:[y,d,h],w=s?[b,f,p]:[b,p,f],k=zC({inputs:{x:t},backend:r,attrs:{shape:v}}),_=zC({inputs:{x:e},backend:r,attrs:{shape:w}}),I=[k,_],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,$=null!=i,A="leakyrelu"===l,E=null!=l?RC(l,!0):null;let D;if((1===d||1===f)&&T>1e3&&!1===(C||$||A||null!=E)){let t=k,e=_;n&&(t=XC({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),I.push(t)),s&&(e=XC({inputs:{x:_},backend:r,attrs:{perm:[0,2,1]}}),I.push(e));const a=1===f;let i=t;1!==f&&(i=zC({inputs:{x:t},backend:r,attrs:{shape:[N,T,1]}}),I.push(i));const o=1===f?2:1;let l=e;a&&(l=zC({inputs:{x:e},backend:r,attrs:{shape:[N,1,T]}}),I.push(l));const u=MC({inputs:{a:i,b:l},backend:r});D=HC({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const l=Bs(t.dtype,e.dtype),u=new DC(v,w,[N,d,f],n,s,C,E,$,A),c=[k,_];if(null!=a&&c.push(a),$&&c.push(i),A){const t=r.makeTensorInfo([],"float32",ms(o,"float32"));c.push(t),I.push(t)}D=r.runWebGLProgram(u,c,l)}const O=zC({inputs:{x:D},backend:r,attrs:{shape:x}});I.push(D);for(const t of I)r.disposeIntermediateTensorInfo(t);return O}const ZC={kernelName:rs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return YC({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},JC="return abs(x);",QC={kernelName:dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const t=n.texData.get(s.dataId),e=XT(t.values);return n.makeTensorInfo(s.shape,s.dtype,e)}let r;return r=lt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new dC(s.shape,JC):new cC(s.shape,JC),n.runWebGLProgram(r,[s],s.dtype)}},tS=AC({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),eS={kernelName:ft,backendName:"webgl",kernelFunc:tS},nS=AC({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),sS={kernelName:mt,backendName:"webgl",kernelFunc:nS},rS="return a + b;",aS=EC({opSnippet:rS,packedOpSnippet:rS,supportsComplex:!0,cpuKernelImpl:CT}),iS={kernelName:gt,backendName:"webgl",kernelFunc:aS};class oS{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class lS{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const uS={kernelName:yt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,r=n;if(1===r.length)return vC({inputs:{x:r[0]},backend:s});if(r.length>lt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:s}),a=t({inputs:r.slice(e),backend:s});return t({inputs:[n,a],backend:s})}const a=r.map((t=>t.dtype)).reduce(((t,e)=>Bs(t,e))),i=r.map((t=>t.shape)),o=lt().getBool("WEBGL_PACK")?new lS(r[0].shape,i):new oS(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},cS={kernelName:bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=P(a,r.shape);let u=l;const c=Zi(u,o);let h=r;null!=c&&(h=XC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Qi(u.length,o)),Yi("all",u,o);const[p,d]=Xi(h.shape,u),f=zC({inputs:{x:h},backend:n,attrs:{shape:[-1,R(d)]}}),m=WC(f,f.dtype,"all",n);let g;return g=zC(i?{inputs:{x:m},backend:n,attrs:{shape:Ki(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},hS={kernelName:xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=P(a,r.shape);let u=l;const c=Zi(u,o);let h=r;null!=c&&(h=XC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Qi(u.length,o)),Yi("any",u,o);const[p,d]=Xi(h.shape,u),f=zC({inputs:{x:h},backend:n,attrs:{shape:[-1,R(d)]}}),m=WC(f,f.dtype,"any",n);let g;return g=zC(i?{inputs:{x:m},backend:n,attrs:{shape:Ki(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class pS{constructor(t,e,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class dS{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=t[t.length-1],a=Math.ceil(r/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=_T(o),u=sC("coords",o);let c,h;if(1===a){h=o+1;const t=_T(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((t=>"int "+t)),m=sC("sourceLocR",h-1).concat("inIdx.r"),g=sC("sourceLocG",h-1).concat("inIdx.g"),y=sC("sourceLocB",h-1).concat("inIdx.b"),b=sC("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function fS(t,e,n,s=null){let r=e.shape[0],a=e.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=au(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new pS(o,n,null==s),u=[e];null!=s&&u.push(s);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=fS(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function mS(t,e,n,s=null){const r=null!=s?s.shape:e.shape,a=au(r[r.length-1]),i=new dS(r,a,n,null==s),o=null==s?[e]:[e,s],l=t.runWebGLProgram(i,o,"int32");if(l.shape.length===e.shape.length){const s=mS(t,e,n,l);return t.disposeIntermediateTensorInfo(l),s}return l}function gS(t,e,n,s){const r=[n];if(Yi("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!lt().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[a,i]=Xi(e.shape,r),o=R(i),l=zC({inputs:{x:e},backend:t,attrs:{shape:[-1,o]}});n.push(l);const u=fS(t,l,s);n.push(u);const c=zC({inputs:{x:u},backend:t,attrs:{shape:a}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),c}return mS(t,e,s)}const yS={kernelName:vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;let i=P(a,r.shape);const o=Zi(i,r.shape.length);let l=r;const u=[];null!=o&&(l=XC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Qi(i.length,l.shape.length)),Yi("argMax",[i[0]],l.shape.length);const c=gS(n,l,i[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},bS={kernelName:wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a}=s;let i=P(a,r.shape);const o=Zi(i,r.shape.length);let l=r;const u=[];null!=o&&(l=XC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Qi(i.length,l.shape.length)),Yi("argMin",[i[0]],l.shape.length);const c=gS(n,l,i[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},xS=AC({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),vS={kernelName:kt,backendName:"webgl",kernelFunc:xS},wS=AC({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),kS={kernelName:_t,backendName:"webgl",kernelFunc:wS},_S=AC({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),IS={kernelName:It,backendName:"webgl",kernelFunc:_S},NS=EC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),TS={kernelName:Tt,backendName:"webgl",kernelFunc:NS},CS=AC({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),SS={kernelName:Nt,backendName:"webgl",kernelFunc:CS};class $S{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class AS{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,_=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${_}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${_}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${_}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${_}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const ES={kernelName:Ct,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;XN(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;S(Ka(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pa(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&D(u.inShape,u.outShape))return vC({inputs:{x:r},backend:n});const c=new $S(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},RS={kernelName:$t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=Va(r.shape,a,i,[1,1,1],o,l,u),h=new AS(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class DS{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OS{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const FS={kernelName:At,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Va(i.shape,o,l,[1,1,1],u,c),p=new OS(h);return n.runWebGLProgram(p,[r],i.dtype)}},MS={kernelName:St,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a;XN([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Pa(i.shape,o,l,1,u),h=new DS(c);return n.runWebGLProgram(h,[r],i.dtype)}},LS={kernelName:Et,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a}=e,{transposeA:i,transposeB:o}=s;return YC({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class zS{constructor(t,e,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],wi(t,e),wi(t,n);let i="0.0";null!=s&&(wi(t,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(wi(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class PS{constructor(t,e,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],wi(t,e),wi(t,n);let i="vec4(0.0)";null!=s&&(wi(t,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(wi(t,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const VS={kernelName:be,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=t;S(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),S(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),S(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=lt().getBool("WEBGL_PACK_NORMALIZATION")?new PS(s.shape,r.shape,a.shape,c,h,l):new zS(s.shape,r.shape,a.shape,c,h,l);return e.runWebGLProgram(p,u,u[0].dtype)}};class BS{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=_T(this.rank),n=`uniform int start[${this.rank}];`,s=function(t){if(1===t)return"sourceLoc";if(t<=6)return WS.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${WS[e]} = start[${e}] + coords.${WS[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const WS=["x","y","z","w","u","v"];class US{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=_T(this.rank),n=sC("coords",this.rank),s=sC("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${s[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function GS(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,size:i}=s,[o,l]=ba(r,a,i);if(ra(r,o,l),0===R(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=KT(t.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,e)}const{isPacked:u}=n.texData.get(r.dataId),c=ga(r.shape,o,l);if(u||!c){const t=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new US(l):new BS(l),e=t.getCustomSetupFunc(o);return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,s){const r=s.texData.get(t.dataId),a=s.makeTensorInfo(n,t.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=t.dtype;let o=ya(e,Z(t.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const jS={kernelName:$n,backendName:"webgl",kernelFunc:GS},HS={kernelName:Rt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,crops:i}=s;S(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((t,e)=>t*e)),l=ou(r.shape,a,o),u=lu(l.length,a.length),c=uu(r.shape,a,o),h=cu(i,a.length),p=hu(c,i,a.length),d=[],f=zC({inputs:{x:r},backend:n,attrs:{shape:l}}),m=XC({inputs:{x:f},backend:n,attrs:{perm:u}}),g=zC({inputs:{x:m},backend:n,attrs:{shape:c}}),y=GS({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},qS={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=ST(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},XS=EC({opSnippet:"return float(a != b);",dtype:"bool"}),KS={kernelName:en,backendName:"webgl",kernelFunc:XS};function YS(t){const{inputs:e,backend:n}=t,{input:s}=e;return vC({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const ZS={kernelName:fn,backendName:"webgl",kernelFunc:YS},JS={kernelName:Ot,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s,attrs:r}=e,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return vC({inputs:{x:a},backend:s});const e=ao(a.shape),n=t({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=kC({inputs:{real:n,imag:e},backend:s});return e.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const e=YS({inputs:{input:a},backend:s}),n=t({inputs:{x:e},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(e),n}if(!U(a.dtype,i)){const t=vC({inputs:{x:a},backend:s});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new cC(t.shape,"return float(int(x));"),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const t=s.makeTensorInfo([],"bool",B("bool",1)),e=XS({inputs:{a,b:t},backend:s});return s.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},QS="return ceil(x);",t$=AC({opSnippet:QS,packedOpSnippet:QS,cpuKernelImpl:AT}),e$={kernelName:Ft,backendName:"webgl",kernelFunc:t$};class n${constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class s${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const r$={kernelName:Mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{clipValueMin:a,clipValueMax:i}=s;let o;o=lt().getBool("WEBGL_PACK_CLIP")?new s$(r.shape):new n$(r.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[r],r.dtype,l)}};class a${constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function i$(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const o$={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=n.texData.get(s.dataId),a=new a$(s.shape),i=[i$(s,r.complexTensorInfos.real),i$(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class l${constructor(t){this.outputShape=[],this.outputShape=su(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const s=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${s}));`)}const s=e.length,r=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class u${constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=su(t,e);const n=this.outputShape,s=n.length,r=_T(s),a=sC("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=i[e],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${c$(i,l,e)}),\n            vec2(${c$(u,l,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${c$(i,l,d)}),\n          vec2(${c$(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function c$(t,e,n){const s=t.indexOf(e);return t.map(((t,e)=>e===s?`${t} - ${n}`:t)).join()}function h$(t){const{inputs:e,backend:n}=t,{input:s}=e;return vC({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const p$={kernelName:Ne,backendName:"webgl",kernelFunc:h$};function d$(t,e,n){const s=t[0].dtype;if("complex64"===s){const s=t.map((t=>YS({inputs:{input:t},backend:n}))),r=t.map((t=>h$({inputs:{input:t},backend:n}))),a=d$(s,e,n),i=d$(r,e,n),o=kC({inputs:{real:a,imag:i},backend:n});return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),r.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===s){const{tensors2D:r,outShape:a}=f$(t,e,n),i=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),o=1===r[0].shape[0],l=ET(i,a,s,o),u=su(t.map((t=>t.shape)),e),c=n.makeTensorInfo(u,s,l);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}if(t.length>lt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(t.length/2),r=d$(t.slice(0,s),e,n),a=d$(t.slice(s),e,n),i=d$([r,a],e,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if(lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new u$(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,s)}const{tensors2D:r,outShape:a}=f$(t,e,n),i=new l$(r.map((t=>t.shape))),o=n.runWebGLProgram(i,r,s);r.forEach((t=>n.disposeIntermediateTensorInfo(t)));const l=zC({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function f$(t,e,n){const s=su(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>zC({inputs:{x:t},attrs:{shape:[-1,R(t.shape.slice(e))]},backend:n}))),outShape:s}}function m$(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s,a=P(r,e[0].shape)[0],i=su(e.map((t=>t.shape)),a);if(0===R(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>R(t.shape)>0));return 1===o.length?vC({inputs:{x:o[0]},backend:n}):(nu(o.map((t=>t.shape)),a),d$(o,a,n))}const g$={kernelName:Pt,backendName:"webgl",kernelFunc:m$};class y${constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,i=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class b${constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,s=t.padInfo.left,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class x${constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:s,inChannels:r,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=r*s,m=YN(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function v$({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=t.shape,u=s.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===p)&&c>1e3,y=l[2]%2!=0&&!!u.isPacked;if(!g&&lt().getBool("WEBGL_LAZILY_UNPACK")&&lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=d?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S(WN(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=zC({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=YC({a:h,b:g,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=s.texData.get(y.dataId);S(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,b.shape=n.outShape,f=vC({inputs:{x:y},backend:s}),f.shape=n.outShape,m.push(y)}else{const u=zC({inputs:{x:t},backend:s,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=zC({inputs:{x:e},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=YC({a:u,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=zC({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const t of m)s.disposeIntermediateTensorInfo(t);return f}function w$({x:t,filter:e,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=zC({inputs:{x:t},backend:s,attrs:{shape:t.shape.slice(1)}}),v=zC({inputs:{x:e},backend:s,attrs:{shape:[1,m,R(e.shape)/m]}});b.push(x),b.push(v);const w=new x$(y,x.shape,n),k=s.runWebGLProgram(w,[x],"float32"),_=zC({inputs:{x:k},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(_);const I=null!=r,N=null!=a,T="leakyrelu"===o,C=o?RC(o,!0):null,S=new DC(_.shape,v.shape,[1,g,n.outChannels],!0,!1,I,C,N,T),$=[_,v];if(r&&$.push(r),N&&$.push(a),T){const t=s.makeTensorInfo([],"float32",ms(i,"float32"));$.push(t),b.push(t)}const A=s.runWebGLProgram(S,$,"float32"),E=zC({inputs:{x:A},backend:s,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(A);for(const t of b)s.disposeIntermediateTensorInfo(t);return E}const k$={kernelName:Vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Ya(l),p=Ba(r.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(lt().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])d=w$({x:r,filter:a,convInfo:p,backend:n});else{const t=new y$(p);d=n.runWebGLProgram(t,[r,a],"float32")}else d=v$({x:r,filter:a,convInfo:p,backend:n});const f=zC({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class _${constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class I${constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class N${constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${r};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class T${constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const C$={kernelName:Bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Ya(l),p=Ba(r.shape,c,i,1,o,u,!1,h),d=new _$(p);return n.runWebGLProgram(d,[r,a],"float32")}},S$={kernelName:Wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Ya(u),p=Ba(i,a.shape,o,1,l,c,!1,h),d=new I$(p);return n.runWebGLProgram(d,[r,a],"float32")}},$$={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l}=s,u=Wa(r.shape,a.shape,i,l,o),c=new b$(u);return n.runWebGLProgram(c,[r,a],"float32")}},A$={kernelName:Gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,pad:o,filterShape:l}=s,u=Wa(r.shape,l,i,1,o),c=new N$(u);return n.runWebGLProgram(c,[r,a],"float32")}},E$={kernelName:jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{pad:i,strides:o,inputShape:l}=s,u=Wa(l,a.shape,o,1,i),c=new T$(u);return n.runWebGLProgram(c,[r,a],"float32")}},R$=AC({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),D$={kernelName:Ht,backendName:"webgl",kernelFunc:R$},O$=AC({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),F$={kernelName:qt,backendName:"webgl",kernelFunc:O$};class M${constructor(t,e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const L$={kernelName:Kt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{image:r,boxes:a,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new M$(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};class z${constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const s=t.length,r=e?"0.0":`getX(${P$(s,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${_T(s)} coords = getOutputCoords();\n        int end = ${V$(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${V$(s,"coords")} = idx;\n          val += getX(${P$(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function P$(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function V$(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const B$={kernelName:Xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,exclusive:i,reverse:o}=s,l=r.shape.length,u=Zi([a],l);let c=r;null!=u&&(c=XC({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=Qi(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const p=c.shape[h];let d=vC({inputs:{x:c},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){const e=new z$(c.shape,!1,o),s=e.getCustomSetupFunc(t),r=d;d=n.runWebGLProgram(e,[d],d.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const t=new z$(c.shape,i,o),e=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=u){const t=XC({inputs:{x:d},backend:n,attrs:{perm:Ji(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),t}return d}},W$={kernelName:Yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,weights:a}=e,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const t=n.readSync(r.dataId),e=n.readSync(a.dataId),s=ST(t,e,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const t=n.bufferSync(r),e=n.bufferSync(a),s=$T(t,e,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class U${constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const G$={kernelName:Zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockSize:a,dataFormat:i}=s;S(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l="NHWC"===i?r.shape[1]:r.shape[2],u="NHWC"===i?r.shape[2]:r.shape[3],c="NHWC"===i?r.shape[3]:r.shape[1],h=l*a,p=u*a,d=c/(a*a),f=new U$("NHWC"===i?[o,h,p,d]:[o,d,h,p],a,i);return n.runWebGLProgram(f,[r],r.dtype)}};class j${constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let g="",y="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class H${constructor(t,e=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=l%2==0?C(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",b="";n&&(y=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}}const q$={kernelName:Jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),S(Ka(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Ba(r.shape,a.shape,i,c,o,u,!0);let p;return p=lt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new H$(h):new j$(h),n.runWebGLProgram(p,[r,a],"float32")}};class X${constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class K${constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Y$={kernelName:Qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,dy:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Ba(r.shape,c,i,o,l,u,!0),p=new X$(h);return n.runWebGLProgram(p,[r,a],"float32")}},Z$={kernelName:te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,filter:a}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Ba(c,a.shape,i,o,l,u,!0),p=new K$(h);return n.runWebGLProgram(p,[r,a],"float32")}};class J${constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Q$={kernelName:ee,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e,r=[...s.shape,...s.shape],a=R(s.shape),i=zC({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new J$(a),l=n.runWebGLProgram(o,[i],i.dtype),u=zC({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class tA{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const eA={kernelName:ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a}=e,{strides:i,pad:o,dilations:l}=s,u=za(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new tA(u);c=n.runWebGLProgram(h,[r,a],"float32");const p=zC({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},nA=AC({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),sA={kernelName:ie,backendName:"webgl",kernelFunc:nA},rA={kernelName:oe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:s,y:r}=e,a=lt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new xC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new bC("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},aA=EC({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),iA={kernelName:ue,backendName:"webgl",kernelFunc:aA},oA=AC({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${bu};\n  float a1 = ${xu};\n  float a2 = ${vu};\n  float a3 = ${wu};\n  float a4 = ${ku};\n  float a5 = ${_u};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),lA={kernelName:le,backendName:"webgl",kernelFunc:oA},uA="return exp(x);",cA=AC({opSnippet:uA,packedOpSnippet:uA,cpuKernelImpl:RT}),hA={kernelName:ce,backendName:"webgl",kernelFunc:cA};function pA(t){const{inputs:e,attrs:n,backend:s}=t,{dim:r}=n,{input:a}=e,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(S(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),zC({inputs:{x:a},backend:s,attrs:{shape:o}})}const dA={kernelName:he,backendName:"webgl",kernelFunc:pA},fA="return exp(x) - 1.0;",mA=AC({opSnippet:fA,packedOpSnippet:fA,cpuKernelImpl:DT}),gA={kernelName:pe,backendName:"webgl",kernelFunc:mA};class yA{constructor(t,e,n){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function bA(t,e,n){const s=n.texData.get(t.dataId),r=R(t.shape),a=t.shape[t.shape.length-1],i=zC({inputs:{x:t},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new yA("real",o,e),u=new yA("imag",o,e),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=kC({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=zC({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const xA={kernelName:de,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return bA(s,!1,n)}};class vA{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function wA(t){const{backend:e,attrs:n}=t,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||X(r),"string"===a){const t=W(a,R(s));return t.fill(r),e.makeTensorInfo(s,a,t)}{const t=new vA(s,r),n=t.getCustomSetupFunc(r);return e.runWebGLProgram(t,[],a,n)}}const kA={kernelName:fe,backendName:"webgl",kernelFunc:wA};class _A{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const IA={kernelName:me,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new _A(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},NA="return floor(x);",TA=AC({opSnippet:NA,packedOpSnippet:NA,cpuKernelImpl:OT}),CA={kernelName:ge,backendName:"webgl",kernelFunc:TA},SA=EC({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),$A={kernelName:ye,backendName:"webgl",kernelFunc:SA};class AA{constructor(t){this.variableNames=["A"];const e=YN(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class EA{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=YN(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const RA={kernelName:ns,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:r}=e;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];(o||i)&&(null==DA&&(DA=document.createElement("canvas").getContext("2d")),DA.canvas.width=l,DA.canvas.height=u,DA.drawImage(r,0,0,l,u),r=DA.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=wN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const d=lt().getBool("WEBGL_PACK")?new EA(h):new AA(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let DA;const OA={kernelName:as,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=Ya(c),g=Ba(r.shape,a.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(lt().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=w$({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const t=null!=i,e=null!=o,s="leakyrelu"===d,l=d?RC(d,!1):null,u=new y$(g,t,l,e,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const t=n.makeTensorInfo([],"float32",ms(f,"float32"));c.push(t),b.push(t)}y=n.runWebGLProgram(u,c,"float32")}else y=v$({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=zC({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},FA={kernelName:is,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),S(Ka(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Ba(r.shape,a.shape,l,m,u,h,!0),y=lt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?RC(p,y):null,x=[r,a],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const t=n.makeTensorInfo([],"float32",ms(d,"float32"));x.push(t),f.push(t)}let _;_=y?new H$(g,v,b,w,k):new j$(g,v,b,w,k);const I=n.runWebGLProgram(_,x,"float32");return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),I}};class MA{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const s=_T(e.length),r=_T(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const LA={kernelName:ve,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:s,indices:r}=e,a=r.shape,i=a[a.length-1],[o,l,u,c]=pu(s,r),h=zC({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),p=zC({inputs:{x:s},backend:n,attrs:{shape:[R(s.shape)/u,u]}}),d=new MA(i,c,[l,u]),f=n.runWebGLProgram(d,[p,h],p.dtype),m=zC({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};class zA{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=_T(this.rank),s=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let e=0;e<t.length;e++)2===e?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[e]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const PA={kernelName:xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,indices:a}=e,{axis:i,batchDims:o}=s,l=Lu(r,a,P(i,r.shape)[0],o),u=R(a.shape),c=[],h=zC({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=zC({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(p);const d=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const t=n.bufferSync(p),e=n.bufferSync(h),s=FT(e,t,d);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,s.dtype,s.values)}const f=new zA(h.shape,d),m=n.runWebGLProgram(f,[h,p],h.dtype);c.push(m);const g=zC({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},VA=EC({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:MT,dtype:"bool"}),BA={kernelName:we,backendName:"webgl",kernelFunc:VA},WA=EC({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),UA={kernelName:ke,backendName:"webgl",kernelFunc:WA},GA={kernelName:Ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return bA(s,!0,n)}},jA=AC({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),HA={kernelName:Te,backendName:"webgl",kernelFunc:jA},qA=AC({opSnippet:"return float(isinf(x));",dtype:"bool"}),XA={kernelName:Ce,backendName:"webgl",kernelFunc:qA},KA=AC({opSnippet:"return float(isnan(x));",dtype:"bool"}),YA={kernelName:Se,backendName:"webgl",kernelFunc:KA},ZA=EC({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:LT,dtype:"bool"}),JA={kernelName:Ae,backendName:"webgl",kernelFunc:ZA},QA=EC({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),tE={kernelName:Ee,backendName:"webgl",kernelFunc:QA},eE={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:s,stop:r,num:a}=n,i=zT(s,r,a);return e.makeTensorInfo([i.length],"float32",i)}},nE=AC({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:PT}),sE={kernelName:De,backendName:"webgl",kernelFunc:nE},rE=AC({opSnippet:"return log(1.0 + x);"}),aE={kernelName:Oe,backendName:"webgl",kernelFunc:rE},iE=EC({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),oE={kernelName:Fe,backendName:"webgl",kernelFunc:iE},lE=AC({opSnippet:"return float(!(x >= 1.0));"}),uE={kernelName:Me,backendName:"webgl",kernelFunc:lE},cE=EC({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),hE={kernelName:Le,backendName:"webgl",kernelFunc:cE};class pE{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class dE{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const fE={kernelName:ze,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=lt().getBool("WEBGL_PACK_NORMALIZATION")?new dE(r.shape,a,i,o,l):new pE(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class mE{constructor(t,e,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const gE={kernelName:Pe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r,y:a,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new mE(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function yE(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=P(a,r.shape);let u=l;const c=Zi(u,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const t=n.texData.get(d.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const s=tC(t,r.shape,r.dtype,c,e);d=n.makeTensorInfo(e,r.dtype),n.texData.get(d.dataId).values=s}else d=jC(r,c,n);u=Qi(u.length,o)}Yi("max",u,o);const[f,m]=Xi(d.shape,u);let g,y=f;if(i&&(y=Ki(f,l)),p){const t=n.texData.get(d.dataId).values,e=VT(t,R(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,s){const r=R(e),a=zC({inputs:{x:t},attrs:{shape:[R(t.shape)/r,r]},backend:s}),i=WC(a,t.dtype,"max",s),o=zC({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const bE={kernelName:Ve,backendName:"webgl",kernelFunc:yE},xE=EC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:BT}),vE={kernelName:Be,backendName:"webgl",kernelFunc:xE},wE={kernelName:We,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e;XN(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;S(Ka(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Pa(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&D(u.inShape,u.outShape))return vC({inputs:{x:r},backend:n});const c=new $S(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},kE={kernelName:Ge,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=Va(r.shape,a,i,[1,1,1],o,u,l),h=new AS(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class _E{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,s=t.dilationHeight,r=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=r-1-t.padInfo.top,o=a-1-t.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IE{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const NE={kernelName:je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a}=e,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Va(i.shape,o,l,[1,1,1],u,c),p=new AS(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new IE(h),m=n.runWebGLProgram(f,[r,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},TE={kernelName:Ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:r,input:a,output:i}=e,o=a;XN([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Pa(o.shape,l,u,1,c,h),d=new $S(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new _E(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},CE={kernelName:He,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;S(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];S(Ka(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Pa(s.shape,r,a,u,i),[h,p]=function(t,e,n,s){let r=new $S(n,"max",!1);const a=s.runWebGLProgram(r,[t],"float32");return r=new $S(n,"max",!0,!0,e),[a,s.runWebGLProgram(r,[t],"float32")]}(s,o,c,l);return[h,p]}},SE={kernelName:qe,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:r,axis:a}=e,i=n,o=s.shape.length,l=P(a,s.shape);let u=l;const c=Zi(u,o),h=null!=c,p=i.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const t=i.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[c[t]];const n=tC(t,s.shape,s.dtype,c,e);f=i.makeTensorInfo(e,s.dtype),i.texData.get(f.dataId).values=n}else f=jC(s,c,i);d.push(f),u=Qi(u.length,o)}Yi("sum",u,o);const[m,g]=Xi(f.shape,u);let y=m;r&&(y=Ki(m,l));const b=function(t,e,n,s){const r=R(e),a=zC({inputs:{x:t},attrs:{shape:[R(t.shape)/r,r]},backend:s}),i=WC(a,"float32","mean",s),o=zC({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const t of d)i.disposeIntermediateTensorInfo(t);return b}},$E={kernelName:Xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=P(a,r.shape);let u=l;const c=Zi(u,o);let h=r;null!=c&&(h=XC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Qi(u.length,r.shape.length)),Yi("min",u,o);const[p,d]=Xi(h.shape,u),f=zC({inputs:{x:h},backend:n,attrs:{shape:[-1,R(d)]}}),m=WC(f,f.dtype,"min",n);let g;return g=zC(i?{inputs:{x:m},backend:n,attrs:{shape:Ki(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},AE=EC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:WT}),EE={kernelName:Ke,backendName:"webgl",kernelFunc:AE};class RE{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=_T(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class DE{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=_T(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=sC("rc",s),l=sC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const t=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const OE={kernelName:Ye,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:r,mode:a}=n,i=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DE(s.shape,r,a):new RE(s.shape,r,a);return e.runWebGLProgram(i,[s],s.dtype)}},FE=EC({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ME={kernelName:Ze,backendName:"webgl",kernelFunc:FE};class LE{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const zE=EC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),PE={kernelName:ae,backendName:"webgl",kernelFunc:zE},VE="return a - b;",BE=EC({opSnippet:VE,packedOpSnippet:VE,supportsComplex:!0,cpuKernelImpl:ZT}),WE={kernelName:Wn,backendName:"webgl",kernelFunc:BE};function UE(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{dim:a}=s,i=P([a],r.shape),o=yE({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Ki(o.shape,i),u=zC({inputs:{x:o},backend:n,attrs:{shape:l}}),c=BE({inputs:{a:r,b:u},backend:n}),h=cA({inputs:{x:c},backend:n}),p=HC({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=zC({inputs:{x:p},backend:n,attrs:{shape:l}}),f=zE({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const GE={kernelName:Pn,backendName:"webgl",kernelFunc:UE},jE={kernelName:Je,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{logits:r}=e,{numSamples:a,seed:i,normalized:o}=s,l=o?r:UE({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new LE(u,c,a),p=h.getCustomSetupFunc(i),d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},HE="return -x;",qE={kernelName:tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:s}=e;if(n.shouldExecuteOnCPU([s])){const t=n.texData.get(s.dataId),[e,r]=GT(t.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,e)}let r;return r=lt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new dC(s.shape,HE):new cC(s.shape,HE),n.runWebGLProgram(r,[s],s.dtype)}},XE=yl,KE={kernelName:nn,backendName:"webgl",kernelFunc:function(t){Iu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=XE(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},YE=bl,ZE={kernelName:sn,backendName:"webgl",kernelFunc:function(t){Iu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=YE(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},JE=xl,QE={kernelName:rn,backendName:"webgl",kernelFunc:function(t){Iu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:s}=t,{boxes:r,scores:a}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=JE(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class tR{constructor(t,e,n,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const eR={kernelName:on,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{indices:r}=e,{depth:a,onValue:i,offValue:o}=s,l=R(r.shape),u=new tR(l,a,i,o),c=zC({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const p=zC({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function nR(t){const{inputs:e,backend:n}=t,{x:s}=e;if("complex64"===s.dtype){const t=YS({inputs:{input:s},backend:n}),e=nR({inputs:{x:t},backend:n}),r=h$({inputs:{input:s},backend:n}),a=nR({inputs:{x:r},backend:n}),i=kC({inputs:{real:e,imag:a},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return wA({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const sR={kernelName:ts,backendName:"webgl",kernelFunc:nR},rR={kernelName:an,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=YS({inputs:{input:r},backend:s}),n=t({inputs:{x:e},backend:s}),a=h$({inputs:{input:r},backend:s}),i=nR({inputs:{x:a},backend:s}),o=kC({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(e),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return wA({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},aR={kernelName:ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{axis:r}=s;if(1===e.length)return pA({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const a=e[0].shape,i=e[0].dtype;e.forEach((t=>{$(a,t.shape,"All tensors passed to stack must have matching shapes"),S(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=m$({inputs:e.map((t=>{const e=pA({inputs:{input:t},backend:n,attrs:{dim:r}});return o.push(e),e})),backend:n,attrs:{axis:r}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class iR{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=_T(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class oR{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=_T(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=sC("rc",s),l=sC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===s?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}const lR=t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{paddings:a,constantValue:i}=s,o=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oR(r.shape,a,i):new iR(r.shape,a,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[r],r.dtype,l)},uR={kernelName:un,backendName:"webgl",kernelFunc:lR},cR=EC({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),hR={kernelName:cn,backendName:"webgl",kernelFunc:cR},pR={kernelName:pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=P(a,r.shape);let c=u;const h=Zi(c,o);let p,d=r;if(null!=h&&(d=XC({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Qi(c.length,o),l.push(d)),Yi("prod",c,o),n.shouldExecuteOnCPU([d])){const t=n.texData.get(d.dataId).values,{outVals:e,outShape:s,outDtype:r}=jT(d.shape,d.dtype,t,c);p=n.makeTensorInfo(s,r,e)}else{const[t,e]=Xi(d.shape,c),s=R(e),a=zC({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),i=WC(a,Ws(r.dtype),"prod",n);p=zC({inputs:{x:i},backend:n,attrs:{shape:t}}),l.push(a),l.push(i)}if(i){l.push(p);const t=Ki(p.shape,u);p=zC({inputs:{x:p},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},dR=t=>{const{backend:e,attrs:n}=t,{start:s,stop:r,step:a,dtype:i}=n,o=HT(s,r,a,i);return e.makeTensorInfo([o.length],i,o)},fR={kernelName:dn,backendName:"webgl",kernelFunc:dR},mR=AC({opSnippet:"return 1.0 / x;"}),gR={kernelName:mn,backendName:"webgl",kernelFunc:mR},yR=AC({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),bR={kernelName:gn,backendName:"webgl",kernelFunc:yR},xR=AC({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vR={kernelName:kn,backendName:"webgl",kernelFunc:xR};class wR{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=t;this.outputShape=[a,e,n,l];const u=[s&&e>1?i-1:i,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class kR{constructor(t,e,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=t;this.outputShape=[a,e,n,l];const u=[s&&e>1?i-1:i,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const _R={kernelName:vn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=lt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kR(r.shape,l,u,a,i):new wR(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class IR{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,a,i]=t,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const NR={kernelName:wn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s,o=new IR(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class TR{constructor(t,e,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=t;this.outputShape=[a,e,n,l];const u=[s&&e>1?i-1:i,s&&n>1?o-1:o],c=[s&&e>1?e-1:e,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const CR={kernelName:bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r}=e,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=new TR(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class SR{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,r]=e,[,a,i]=t,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const $R={kernelName:xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{images:r,dy:a}=e,{alignCorners:i}=s,o=new SR(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class AR{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map(((n,s)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=_T(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class ER{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const s=sC("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=_T(n);function o(n){const s=t.map(((s,r)=>function(n,s){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(s.slice())};\n          if(${r}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const RR={kernelName:_n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{dims:a}=s,i=r.shape.length,o=P(a,r.shape);if(0===i)return vC({inputs:{x:r},backend:n});const l=lt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ER(r.shape,o):new AR(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class DR{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],s=t[2];this.outputShape=t;let r="";r="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(t,e,n,s){return(r,a)=>{null==this.paramsLoc&&(this.paramsLoc=r.getUniformLocationNoThrow(a,"params")),r.gl.uniform4f(this.paramsLoc,t,e,n,s)}}}const OR={kernelName:ss,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:a,center:i}=e,o=n,l=new DR(s.shape,a),[u,c]=iu(i,s.shape[1],s.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(r),Math.cos(r));return o.runWebGLProgram(l,[s],s.dtype,h)}},FR=AC({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),MR={kernelName:In,backendName:"webgl",kernelFunc:FR},LR=AC({opSnippet:"return inversesqrt(x);",cpuKernelImpl:qT}),zR={kernelName:Nn,backendName:"webgl",kernelFunc:LR};class PR{constructor(t,e,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=_T(r.length),l=_T(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const VR={kernelName:Tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{indices:r,updates:a}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=mu(0,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const d=zC({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=zC({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new PR(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=zC({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class BR{constructor(t,e,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<e.length;s++)i.push(`${n[s]}`),s<t&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=_T(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const WR={kernelName:Cn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:s,t:r,e:a}=e,i=new BR(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],Bs(r.dtype,a.dtype))}},UR=AC({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${gu};\n  float scale = ${yu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),GR={kernelName:Sn,backendName:"webgl",kernelFunc:UR},jR=AC({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),HR={kernelName:Dn,backendName:"webgl",kernelFunc:jR},qR=AC({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),XR={kernelName:Rn,backendName:"webgl",kernelFunc:qR},KR=AC({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),YR={kernelName:An,backendName:"webgl",kernelFunc:KR},ZR=AC({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),JR={kernelName:En,backendName:"webgl",kernelFunc:ZR},QR=AC({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),tD={kernelName:On,backendName:"webgl",kernelFunc:QR},eD={kernelName:Ln,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{blockShape:a,paddings:i}=s;S(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...i);for(let t=1+a.length;t<r.shape.length;++t)l.push([0,0]);const u=[],c=lR({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=ou(c.shape,a,o,!1),p=lu(h.length,a.length,!1),d=uu(c.shape,a,o,!1),f=zC({inputs:{x:c},backend:n,attrs:{shape:h}}),m=XC({inputs:{x:f},backend:n,attrs:{perm:p}}),g=zC({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},nD={kernelName:Un,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{sparseIndices:r,sparseValues:a,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=mu(0,r,o),p=new PR(u,l,r.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,r,i],a.dtype),f=zC({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},sD={kernelName:zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{numOrSizeSplits:a,axis:i}=s,o=P(i,r.shape)[0],l=Ou(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const s=GS({inputs:{x:r},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,s}))}},rD=AC({opSnippet:"return sqrt(x);"}),aD={kernelName:Fn,backendName:"webgl",kernelFunc:rD},iD={kernelName:Bn,backendName:"webgl",kernelFunc:AC({opSnippet:"return x * x;"})},oD="return (a - b) * (a - b);",lD=EC({opSnippet:oD,packedOpSnippet:oD}),uD={kernelName:Vn,backendName:"webgl",kernelFunc:lD},cD={kernelName:es,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:s}=t,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,a=new cC(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class hD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=_T(n.length),a=_T(n.length);let i="";if(1===s)i="coords * strides + begin";else{let t=0;i=n.map(((e,s)=>(t++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${t-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${t});\n      ${r} strides = ${r}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const pD={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=xa(r.shape,a,i,o,l,u,c,h,p),x=zC({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(d){const t=GS({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=zC({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const t=n.texData.get(x.dataId).values,e=Gr(x.shape,x.dtype,t),s=YT(b,e,m,f);v=n.makeTensorInfo(b,x.dtype,s.values)}else{const t=new hD(f,m,b);v=n.runWebGLProgram(t,[x],x.dtype)}const w=zC({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},dD=AC({opSnippet:"return tan(x);"}),fD={kernelName:jn,backendName:"webgl",kernelFunc:dD},mD=AC({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),gD={kernelName:Hn,backendName:"webgl",kernelFunc:mD};class yD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const s=_T(this.rank),r=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let e=0;e<t.length;e++)s.push(`imod(${n[e]}, ${t[e]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function bD(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{reps:a}=s;if("string"===r.dtype){const t=n.readSync(r.dataId).map((t=>xs(t))),e=Gr(r.shape,r.dtype,t),s=JT(e,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const i=new yD(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const xD={kernelName:qn,backendName:"webgl",kernelFunc:bD},vD={kernelName:Xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r}=e,{k:a,sorted:i}=s,o=n.readSync(r.dataId),[l,u]=QT(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class wD{constructor(t,e,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const kD={kernelName:Kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{image:r,transforms:a}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=new wD(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}},_D={kernelName:Zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:a}=e;XN(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=eC(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},ID={kernelName:Jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let t=0;t<o;t++)t!==a&&(u[c++]=i.shape[t]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let t=0;t<f.length;t++){p[a]=t;const e=GS({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=zC({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=s,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class ND{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,s=t.batchSize,r=t.inSize,a=t.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const TD=[fE,gE,ZC,QC,eS,sS,iS,uS,cS,hS,yS,bS,vS,kS,TS,IS,SS,RS,ES,FS,MS,LS,VS,HS,qS,JS,e$,r$,o$,_C,g$,C$,S$,k$,A$,E$,$$,D$,F$,L$,B$,W$,G$,Y$,Z$,q$,Q$,eA,sA,rA,iA,lA,hA,dA,gA,xA,kA,IA,CA,$A,RA,OA,FA,LA,PA,BA,UA,wC,GA,p$,HA,XA,YA,TC,JA,tE,eE,aE,sE,oE,uE,hE,bE,kE,wE,NE,TE,CE,vE,SE,$E,EE,OE,ME,jE,LC,qE,KE,ZE,QE,KS,eR,rR,aR,uR,hR,$C,pR,fR,ZS,PE,gR,vR,bR,PC,_R,NR,CR,$R,RR,OR,MR,zR,VR,WR,GR,HR,XR,YR,JR,jS,GE,tD,eD,nD,sD,aD,iD,uD,cD,pD,WE,qC,fD,gD,xD,vD,kD,KC,_D,ID,{kernelName:Qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,segmentIds:a}=e,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Zi([u],o);let h=r;null!=c&&(h=XC({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Qi(1,o)[0]);const p=Mu(h.shape,u,i),d=R([h.shape[u]]),f=zC({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=Ws(r.dtype),g=(t,e,s,r,a)=>{const i=t.shape[0],o=t.shape[1],u=Fu(o,a),c=new ND({windowSize:u,inSize:o,batchSize:i,numSegments:a},e),h=n.compileAndRun(c,[t,s],r);if(l.push(h),h.shape[1]===a)return h;const p=dR({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=bD({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,e,d,r,a)},y=zC({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const t=Ji(c);b=XC({inputs:{x:b},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},sR];for(const t of TD)ps(t);const CD={flipHorizontal:!1,outputStride:16,imageScaleFactor:1,maxNumBoxes:20,iouThreshold:.2,scoreThreshold:.6,modelType:"ssd320fpnlite",modelSize:"large",bboxLineWidth:"2",fontSize:17},SD={large:"base",medium:"fp16",small:"int8"},$D={open:"#374151",closed:"#B91C1C",pinch:"#F59E0B",point:"#10B981",face:"#3B82F6",tip:"#6366F1",pinchtip:"#EC4899"},AD={1:"open",2:"closed",3:"pinch",4:"point",5:"face",6:"tip",7:"pinchtip"},ED=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"];class RD{constructor(t){this.modelPath="https://cdn.jsdelivr.net/npm/handtrackjs@latest/models/webmodel/"+t.modelType+"/"+(SD[t.modelSize]||"base")+"/model.json ",this.modelParams=t}async load(){this.fps=0,this.model&&console.log("model existis ...."),this.model=await async function(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new ax(t,e);return await n.load(),n}(this.modelPath);const t=ao([1,300,300,3],"int32"),e=await this.model.executeAsync(t);e.map((async t=>await t.data())),e.map((async t=>t.dispose())),Ta(t)}async detect(t){let e=Date.now();const[n,s]=function(t){return t instanceof Rs?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),r=DD(this.modelParams.imageScaleFactor,n,this.modelParams.outputStride),a=DD(this.modelParams.imageScaleFactor,s,this.modelParams.outputStride),i=Na((()=>{const e=sa(t);return this.modelParams.flipHorizontal?e.reverse(1).resizeBilinear([r,a]).expandDims(0).toInt():e.resizeBilinear([r,a]).expandDims(0).toInt()})),o=this;return this.model.executeAsync(i,ED).then((function(t){const r=t[0].dataSync(),a=t[1].dataSync();i.dispose(),Ta(t);const[l,u]=function(t,e,n){const s=[],r=[];for(let a=0;a<e;a++){let e=Number.MIN_VALUE,i=-1;for(let s=0;s<n;s++)t[a*n+s]>e&&(e=t[a*n+s],i=s);s[a]=e,r[a]=i}return[s,r]}(r,t[0].shape[1],t[0].shape[2]),c=Zs.backendName;Sa("cpu");const h=Na((()=>{const e=Oo(a,[t[1].shape[1],t[1].shape[3]]);return Ul.nonMaxSuppression(e,l,o.modelParams.maxNumBoxes,o.modelParams.iouThreshold,o.modelParams.scoreThreshold)})),p=h.dataSync();h.dispose(),Sa(c);const d=o.buildDetectedObjects(s,n,a,l,p,u);let f=Date.now();return o.fps=Math.round(1e3/(f-e)),d}))}buildDetectedObjects(t,e,n,s,r,a){const i=r.length,o=[];for(let l=0;l<i;l++){const i=[];for(let t=0;t<4;t++)i[t]=n[4*r[l]+t];const u=i[0]*e,c=i[1]*t,h=i[2]*e,p=i[3]*t;i[0]=c,i[1]=u,i[2]=p-c,i[3]=h-u;const d=Math.round(a[r[l]])+1;o.push({bbox:i,class:d,label:AD[d],score:s[r[l]].toFixed(2)})}return o}getFPS(){return this.fps}setModelParameters(t){this.modelParams=Object.assign({},this.modelParams,t)}getModelParameters(){return this.modelParams}roundRect(t,e,n,s,r,a,i,o){if(void 0===o&&(o=!0),void 0===a&&(a=5),"number"==typeof a)a={tl:a,tr:a,br:a,bl:a};else{var l={tl:0,tr:0,br:0,bl:0};for(var u in l)a[u]=a[u]||l[u]}t.beginPath(),t.moveTo(e+a.tl,n),t.lineTo(e+s-a.tr,n),t.quadraticCurveTo(e+s,n,e+s,n+a.tr),t.lineTo(e+s,n+r-a.br),t.quadraticCurveTo(e+s,n+r,e+s-a.br,n+r),t.lineTo(e+a.bl,n+r),t.quadraticCurveTo(e,n+r,e,n+r-a.bl),t.lineTo(e,n+a.tl),t.quadraticCurveTo(e,n,e+a.tl,n),t.closePath(),i&&t.fill(),o&&t.stroke()}renderPredictions(t,e,n,s){n.clearRect(0,0,e.width,e.height),e.width=s.width,e.height=s.height,e.style.height=parseInt(e.style.width)*(s.height/s.width).toFixed(2)+"px",n.save(),this.modelParams.flipHorizontal&&(n.scale(-1,1),n.translate(-s.width,0)),n.drawImage(s,0,0,s.width,s.height),n.restore(),n.font="bold "+this.modelParams.fontSize+"px Arial";for(let e=0;e<t.length;e++){const s=t[e];n.beginPath(),n.fillStyle="rgba(255, 255, 255, 0.6)",n.fillRect(s.bbox[0]+1,s.bbox[1]+1,s.bbox[2]-1,1.5*this.modelParams.fontSize),n.lineWidth=this.modelParams.bboxLineWidth,this.roundRect(n,s.bbox[0],s.bbox[1],s.bbox[2],s.bbox[3],5,!1,!0),n.strokeStyle=$D[s.label],n.fillStyle=$D[s.label],n.fillRect(s.bbox[0]+s.bbox[2]/2,s.bbox[1]+s.bbox[3]/2,5,5),n.stroke(),n.fillText(s.score+" | "+s.label,s.bbox[0]+5,s.bbox[1]+1.1*this.modelParams.fontSize)}n.fillStyle="rgba(255, 255, 255, 0.6)",this.roundRect(n,10,10,4.6*this.modelParams.fontSize,this.modelParams.fontSize+8,5,!0,!1),n.strokeStyle="#374151",n.fillStyle="#374151",n.font="bold "+this.modelParams.fontSize+"px Arial",n.fillText("FPS: "+this.fps,18,this.modelParams.fontSize+12)}dispose(){this.model&&this.model.dispose()}}function DD(t,e,n){const s=e*t-1;return s-s%n+1}var OD=n(382);const FD=new WeakSet,MD=new WeakMap,LD=new WeakMap,zD=new WeakMap,PD=new WeakMap,VD=new WeakMap,BD=new WeakMap,WD=new WeakMap,UD=new WeakMap,GD=new WeakMap,jD={construct:()=>jD},HD=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,qD=(t,e)=>{const n=[];let s=t.replace(/^[\s]+/,""),r=s.match(HD);for(;null!==r;){const t=r[1].slice(1,-1),a=r[0].replace(/([\s]+)?;?$/,"").replace(t,new URL(t,e).toString());n.push(a),s=s.slice(r[0].length).replace(/^[\s]+/,""),r=s.match(HD)}return[n.join(";"),s]},XD=t=>{if(void 0!==t&&!Array.isArray(t))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},KD=t=>{if(!(t=>{try{new new Proxy(t,jD)}catch{return!1}return!0})(t))throw new TypeError("The given value for processorCtor should be a constructor.");if(null===t.prototype||"object"!=typeof t.prototype)throw new TypeError("The given value for processorCtor should have a prototype.")},YD=(t,e)=>{const n=t.get(e);if(void 0===n)throw new Error("A value with the given key could not be found.");return n},ZD=(t,e)=>{const n=Array.from(t).filter(e);if(n.length>1)throw Error("More than one element was found.");if(0===n.length)throw Error("No element was found.");const[s]=n;return t.delete(s),s},JD=(t,e,n,s)=>{const r=YD(t,e),a=ZD(r,(t=>t[0]===n&&t[1]===s));return 0===r.size&&t.delete(e),a},QD=t=>YD(BD,t),tO=t=>{if(FD.has(t))throw new Error("The AudioNode is already stored.");FD.add(t),QD(t).forEach((t=>t(!0)))},eO=t=>"port"in t,nO=t=>{if(!FD.has(t))throw new Error("The AudioNode is not stored.");FD.delete(t),QD(t).forEach((t=>t(!1)))},sO=(t,e)=>{!eO(t)&&e.every((t=>0===t.size))&&nO(t)},rO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},aO=(t,e)=>t.context===e,iO=t=>{try{t.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},oO=()=>new DOMException("","IndexSizeError"),lO=t=>{var e;t.getChannelData=(e=t.getChannelData,n=>{try{return e.call(t,n)}catch(t){if(12===t.code)throw oO();throw t}})},uO={numberOfChannels:1},cO=-34028234663852886e22,hO=-cO,pO=t=>FD.has(t),dO={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},fO=t=>YD(MD,t),mO=t=>YD(zD,t),gO=(t,e)=>{const{activeInputs:n}=fO(t);n.forEach((n=>n.forEach((([n])=>{e.includes(t)||gO(n,[...e,t])}))));const s=(t=>"playbackRate"in t)(t)?[t.playbackRate]:eO(t)?Array.from(t.parameters.values()):(t=>"frequency"in t&&"gain"in t)(t)?[t.Q,t.detune,t.frequency,t.gain]:(t=>"offset"in t)(t)?[t.offset]:(t=>!("frequency"in t)&&"gain"in t)(t)?[t.gain]:(t=>"detune"in t&&"frequency"in t)(t)?[t.detune,t.frequency]:(t=>"pan"in t)(t)?[t.pan]:[];for(const t of s){const n=mO(t);void 0!==n&&n.activeInputs.forEach((([t])=>gO(t,e)))}pO(t)&&nO(t)},yO=t=>{gO(t.destination,[])},bO=t=>"context"in t,xO=t=>bO(t[0]),vO=(t,e,n,s)=>{for(const e of t)if(n(e)){if(s)return!1;throw Error("The set contains at least one similar element.")}return t.add(e),!0},wO=(t,e,[n,s],r)=>{vO(t,[e,n,s],(t=>t[0]===e&&t[1]===n),r)},kO=(t,[e,n,s],r)=>{const a=t.get(e);void 0===a?t.set(e,new Set([[n,s]])):vO(a,[n,s],(t=>t[0]===n),r)},_O=t=>"inputs"in t,IO=(t,e,n,s)=>{if(_O(e)){const r=e.inputs[s];return t.connect(r,n,0),[r,n,0]}return t.connect(e,n,s),[e,n,s]},NO=(t,e,n)=>{for(const s of t)if(s[0]===e&&s[1]===n)return t.delete(s),s;return null},TO=(t,e)=>{if(!QD(t).delete(e))throw new Error("Missing the expected event listener.")},CO=(t,e,n)=>{const s=YD(t,e),r=ZD(s,(t=>t[0]===n));return 0===s.size&&t.delete(e),r},SO=(t,e,n,s)=>{_O(e)?t.disconnect(e.inputs[s],n,0):t.disconnect(e,n,s)},$O=t=>YD(LD,t),AO=t=>YD(PD,t),EO=t=>WD.has(t),RO=t=>!FD.has(t),DO=t=>new Promise((e=>{const n=t.createScriptProcessor(256,1,1),s=t.createGain(),r=t.createBuffer(1,2,44100),a=r.getChannelData(0);a[0]=1,a[1]=1;const i=t.createBufferSource();i.buffer=r,i.loop=!0,i.connect(n).connect(t.destination),i.connect(s),i.disconnect(s),n.onaudioprocess=s=>{const r=s.inputBuffer.getChannelData(0);Array.prototype.some.call(r,(t=>1===t))?e(!0):e(!1),i.stop(),n.onaudioprocess=null,i.disconnect(n),n.disconnect(t.destination)},i.start()})),OO=(t,e)=>{const n=new Map;for(const e of t)for(const t of e){const e=n.get(t);n.set(t,void 0===e?1:e+1)}n.forEach(((t,n)=>e(n,t)))},FO=t=>"context"in t,MO=t=>{const e=new Map;var n,s;t.connect=(s=t.connect.bind(t),(t,n=0,r=0)=>{const a=FO(t)?s(t,n,r):s(t,n),i=e.get(t);return void 0===i?e.set(t,[{input:r,output:n}]):i.every((t=>t.input!==r||t.output!==n))&&i.push({input:r,output:n}),a}),t.disconnect=(n=t.disconnect,(s,r,a)=>{if(n.apply(t),void 0===s)e.clear();else if("number"==typeof s)for(const[t,n]of e){const r=n.filter((t=>t.output!==s));0===r.length?e.delete(t):e.set(t,r)}else if(e.has(s))if(void 0===r)e.delete(s);else{const t=e.get(s);if(void 0!==t){const n=t.filter((t=>t.output!==r&&(t.input!==a||void 0===a)));0===n.length?e.delete(s):e.set(s,n)}}for(const[n,s]of e)s.forEach((e=>{FO(n)?t.connect(n,e.output,e.input):t.connect(n,e.output)}))})},LO=(t,e,n,s,r)=>{const[a,i]=((t,e,n,s)=>{const{activeInputs:r,passiveInputs:a}=fO(e),i=NO(r[s],t,n);return null===i?[JD(a,t,n,s)[2],!1]:[i[2],!0]})(t,n,s,r);if(null!==a&&(TO(t,a),!i||e||EO(t)||SO($O(t),$O(n),s,r)),pO(n)){const{activeInputs:t}=fO(n);sO(n,t)}},zO=(t,e,n,s)=>{const[r,a]=((t,e,n)=>{const{activeInputs:s,passiveInputs:r}=mO(e),a=NO(s,t,n);return null===a?[CO(r,t,n)[1],!1]:[a[2],!0]})(t,n,s);null!==r&&(TO(t,r),!a||e||EO(t)||$O(t).disconnect(AO(n),s))};class PO{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach(((n,s)=>t.call(e,n,s,this)))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const VO={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}};function BO(t,e,n,s,r){if("function"==typeof t.copyFromChannel)0===e[n].byteLength&&(e[n]=new Float32Array(128)),t.copyFromChannel(e[n],s,r);else{const a=t.getChannelData(s);if(0===e[n].byteLength)e[n]=a.slice(r,r+128);else{const t=new Float32Array(a.buffer,r*Float32Array.BYTES_PER_ELEMENT,128);e[n].set(t)}}}const WO=(t,e,n,s,r)=>{"function"==typeof t.copyToChannel?0!==e[n].byteLength&&t.copyToChannel(e[n],s,r):0!==e[n].byteLength&&t.getChannelData(s).set(e[n],r)},UO=(t,e)=>{const n=[];for(let s=0;s<t;s+=1){const t=[],r="number"==typeof e?e:e[s];for(let e=0;e<r;e+=1)t.push(new Float32Array(128));n.push(t)}return n},GO=async(t,e,n,s,r,a,i)=>{const o=null===e?128*Math.ceil(t.context.length/128):e.length,l=s.channelCount*s.numberOfInputs,u=r.reduce(((t,e)=>t+e),0),c=0===u?null:n.createBuffer(u,o,n.sampleRate);if(void 0===a)throw new Error("Missing the processor constructor.");const h=fO(t),p=await((t,e)=>{const n=YD(GD,t),s=$O(e);return YD(n,s)})(n,t),d=UO(s.numberOfInputs,s.channelCount),f=UO(s.numberOfOutputs,r),m=Array.from(t.parameters.keys()).reduce(((t,e)=>({...t,[e]:new Float32Array(128)})),{});for(let u=0;u<o;u+=128){if(s.numberOfInputs>0&&null!==e)for(let t=0;t<s.numberOfInputs;t+=1)for(let n=0;n<s.channelCount;n+=1)BO(e,d[t],n,n,u);void 0!==a.parameterDescriptors&&null!==e&&a.parameterDescriptors.forEach((({name:t},n)=>{BO(e,m,t,l+n,u)}));for(let t=0;t<s.numberOfInputs;t+=1)for(let e=0;e<r[t];e+=1)0===f[t][e].byteLength&&(f[t][e]=new Float32Array(128));try{const t=d.map(((t,e)=>0===h.activeInputs[e].size?[]:t)),e=i(u/n.sampleRate,n.sampleRate,(()=>p.process(t,f,m)));if(null!==c)for(let t=0,e=0;t<s.numberOfOutputs;t+=1){for(let n=0;n<r[t];n+=1)WO(c,f[t],n,e+n,u);e+=r[t]}if(!e)break}catch(e){t.dispatchEvent(new ErrorEvent("processorerror",{colno:e.colno,filename:e.filename,lineno:e.lineno,message:e.message}));break}}return c},jO={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},HO={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},qO={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},XO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},KO={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},YO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},ZO=(t,e,n)=>{const s=e[n];if(void 0===s)throw t();return s},JO={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},QO={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},tF=()=>new DOMException("","InvalidStateError"),eF=()=>new DOMException("","InvalidAccessError"),nF={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},sF=(t,e,n,s,r,a,i,o,l,u,c)=>{const h=u.length;let p=o;for(let o=0;o<h;o+=1){let h=n[0]*u[o];for(let e=1;e<r;e+=1){const s=p-e&l-1;h+=n[e]*a[s],h-=t[e]*i[s]}for(let t=r;t<s;t+=1)h+=n[t]*a[p-t&l-1];for(let n=r;n<e;n+=1)h-=t[n]*i[p-n&l-1];a[p]=u[o],i[p]=h,p=p+1&l-1,c[o]=h}return p},rF={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},aF=t=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const n=t.decodeAudioData(e.buffer,(()=>{}));return void 0!==n&&(n.catch((()=>{})),!0)}catch{}return!1},iF=(t,e,n)=>{const s=e[n];void 0!==s&&s!==t[n]&&(t[n]=s)},oF=(t,e)=>{iF(t,e,"channelCount"),iF(t,e,"channelCountMode"),iF(t,e,"channelInterpretation")},lF=t=>"function"==typeof t.getFloatTimeDomainData,uF=(t,e,n)=>{const s=e[n];void 0!==s&&s!==t[n].value&&(t[n].value=s)},cF=t=>{var e;t.start=(e=t.start,(n=0,s=0,r)=>{if("number"==typeof r&&r<0||s<0||n<0)throw new RangeError("The parameters can't be negative.");e.call(t,n,s,r)})},hF=t=>{var e;t.stop=(e=t.stop,(n=0)=>{if(n<0)throw new RangeError("The parameter can't be negative.");e.call(t,n)})},pF=(t,e)=>null===t?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(t*e))))),dF=(t,e)=>{const n=t.createBiquadFilter();return oF(n,e),uF(n,e,"Q"),uF(n,e,"detune"),uF(n,e,"frequency"),uF(n,e,"gain"),iF(n,e,"type"),n},fF=(t,e)=>{const n=t.createChannelSplitter(e.numberOfOutputs);return oF(n,e),(t=>{const e=t.numberOfOutputs;Object.defineProperty(t,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw tF()}}),Object.defineProperty(t,"channelCountMode",{get:()=>"explicit",set:t=>{if("explicit"!==t)throw tF()}}),Object.defineProperty(t,"channelInterpretation",{get:()=>"discrete",set:t=>{if("discrete"!==t)throw tF()}})})(n),n},mF=(t,e)=>(t.connect=e.connect.bind(e),t.disconnect=e.disconnect.bind(e),t),gF=(t,e)=>{const n=t.createDelay(e.maxDelayTime);return oF(n,e),uF(n,e,"delayTime"),n},yF=(t,e)=>{const n=t.createGain();return oF(n,e),uF(n,e,"gain"),n};function bF(t,e){const n=e[0]*e[0]+e[1]*e[1];return[(t[0]*e[0]+t[1]*e[1])/n,(t[1]*e[0]-t[0]*e[1])/n]}function xF(t,e){let n=[0,0];for(let a=t.length-1;a>=0;a-=1)r=e,n=[(s=n)[0]*r[0]-s[1]*r[1],s[0]*r[1]+s[1]*r[0]],n[0]+=t[a];var s,r;return n}const vF=(t,e,n,s)=>t.createScriptProcessor(e,n,s),wF=()=>new DOMException("","NotSupportedError"),kF={numberOfChannels:1},_F={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},IF={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},NF={disableNormalization:!1},TF={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},CF=()=>new DOMException("","UnknownError"),SF={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},$F=t=>{if(null===t)return!1;const e=t.length;return e%2!=0?0!==t[Math.floor(e/2)]:t[e/2-1]+t[e/2]!==0},AF=(t,e,n,s)=>{let r=Object.getPrototypeOf(t);for(;!r.hasOwnProperty(e);)r=Object.getPrototypeOf(r);const{get:a,set:i}=Object.getOwnPropertyDescriptor(r,e);Object.defineProperty(t,e,{get:n(a),set:s(i)})},EF=(t,e,n)=>{try{t.setValueAtTime(e,n)}catch(s){if(9!==s.code)throw s;EF(t,e,n+1e-7)}},RF=t=>{const e=t.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},DF=t=>{const e=t.createBuffer(1,1,44100),n=t.createBufferSource();n.buffer=e,n.start(),n.stop();try{return n.stop(),!0}catch{return!1}},OF=t=>{const e=t.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},FF=(t,e)=>{const n=e.createGain();t.connect(n);const s=(r=t.disconnect,()=>{r.call(t,n),t.removeEventListener("ended",s)});var r;t.addEventListener("ended",s),mF(t,n),t.stop=(e=>{let s=!1;return(r=0)=>{if(s)try{e.call(t,r)}catch{n.gain.setValueAtTime(0,r)}else e.call(t,r),s=!0}})(t.stop)},MF=(t,e)=>n=>{const s={value:t};return Object.defineProperties(n,{currentTarget:s,target:s}),"function"==typeof e?e.call(t,n):e.handleEvent.call(t,n)},LF=(t=>(e,n,[s,r,a],i)=>{t(e[r],[n,s,a],(t=>t[0]===n&&t[1]===s),i)})(vO),zF=(t=>(e,n,[s,r,a],i)=>{const o=e.get(s);void 0===o?e.set(s,new Set([[r,n,a]])):t(o,[r,n,a],(t=>t[0]===r&&t[1]===n),i)})(vO),PF=(t=>(e,n,s,r)=>t(e[r],(t=>t[0]===n&&t[1]===s)))(ZD),VF=new WeakMap,BF=(t=>e=>{var n;return null!==(n=t.get(e))&&void 0!==n?n:0})(VF),WF=(UF=new Map,GF=new WeakMap,(t,e)=>{const n=GF.get(t);if(void 0!==n)return n;const s=UF.get(t);if(void 0!==s)return s;try{const n=e();return n instanceof Promise?(UF.set(t,n),n.catch((()=>!1)).then((e=>(UF.delete(t),GF.set(t,e),e)))):(GF.set(t,n),n)}catch{return GF.set(t,!1),!1}});var UF,GF;const jF="undefined"==typeof window?null:window,HF=((t,e)=>(n,s)=>{const r=n.createAnalyser();if(oF(r,s),!(s.maxDecibels>s.minDecibels))throw e();return iF(r,s,"fftSize"),iF(r,s,"maxDecibels"),iF(r,s,"minDecibels"),iF(r,s,"smoothingTimeConstant"),t(lF,(()=>lF(r)))||(t=>{t.getFloatTimeDomainData=e=>{const n=new Uint8Array(e.length);t.getByteTimeDomainData(n);const s=Math.max(n.length,t.fftSize);for(let t=0;t<s;t+=1)e[t]=.0078125*(n[t]-128);return e}})(r),r})(WF,oO),qF=(t=>e=>{const n=t(e);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return n.renderer})(fO),XF=((t,e,n)=>async(s,r,a,i)=>{const o=t(s),l=[...i,s];await Promise.all(o.activeInputs.map(((t,i)=>Array.from(t).filter((([t])=>!l.includes(t))).map((async([t,o])=>{const u=e(t),c=await u.render(t,r,l),h=s.context.destination;n(t)||s===h&&n(s)||c.connect(a,o,i)})))).reduce(((t,e)=>[...t,...e]),[]))})(fO,qF,EO),KF=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a,i){const o=s.get(a);return void 0!==o?Promise.resolve(o):(async(r,a,i)=>{let o=e(r);if(!aO(o,a)){const e={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,fftSize:o.fftSize,maxDecibels:o.maxDecibels,minDecibels:o.minDecibels,smoothingTimeConstant:o.smoothingTimeConstant};o=t(a,e)}return s.set(a,o),await n(r,a,o,i),o})(r,a,i)}}})(HF,$O,XF),YF=(ZF=VD,t=>{const e=ZF.get(t);if(void 0===e)throw tF();return e});var ZF;const JF=(t=>null===t?null:t.hasOwnProperty("OfflineAudioContext")?t.OfflineAudioContext:t.hasOwnProperty("webkitOfflineAudioContext")?t.webkitOfflineAudioContext:null)(jF),QF=(t=>e=>null!==t&&e instanceof t)(JF),tM=new WeakMap,eM=(t=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(e,n,s){if(null!==n){let r=this._listeners.get(n);void 0===r&&(r=t(this,n),"function"==typeof n&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,s)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,e,n){const s=null===e?void 0:this._listeners.get(e);this._nativeEventTarget.removeEventListener(t,void 0===s?null:s,n)}})(MF),nM=(t=>null===t?null:t.hasOwnProperty("AudioContext")?t.AudioContext:t.hasOwnProperty("webkitAudioContext")?t.webkitAudioContext:null)(jF),sM=(t=>e=>null!==t&&e instanceof t)(nM),rM=(t=>e=>null!==t&&"function"==typeof t.AudioNode&&e instanceof t.AudioNode)(jF),aM=(t=>e=>null!==t&&"function"==typeof t.AudioParam&&e instanceof t.AudioParam)(jF),iM=((t,e,n,s,r,a,i,o,l,u,c,h,p,d,f)=>class extends u{constructor(e,s,r,a){super(r),this._context=e,this._nativeAudioNode=r;const i=c(e);h(i)&&!0!==n(DO,(()=>DO(i)))&&MO(r),LD.set(this,r),BD.set(this,new Set),"closed"!==e.state&&s&&tO(this),t(this,a,r)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(t){this._nativeAudioNode.channelCount=t}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(t){this._nativeAudioNode.channelCountMode=t}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(t){this._nativeAudioNode.channelInterpretation=t}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(t,n=0,o=0){if(n<0||n>=this._nativeAudioNode.numberOfOutputs)throw r();const u=c(this._context),h=f(u);if(p(t)||d(t))throw a();if(bO(t)){const r=$O(t);try{const e=IO(this._nativeAudioNode,r,n,o),s=RO(this);(h||s)&&this._nativeAudioNode.disconnect(...e),"closed"!==this.context.state&&!s&&RO(t)&&tO(t)}catch(t){if(12===t.code)throw a();throw t}if(e(this,t,n,o,h)){const e=l([this],t);OO(e,s(h))}return t}const m=AO(t);if("playbackRate"===m.name&&1024===m.maxValue)throw i();try{this._nativeAudioNode.connect(m,n),(h||RO(this))&&this._nativeAudioNode.disconnect(m,n)}catch(t){if(12===t.code)throw a();throw t}if(((t,e,n,s)=>{const{activeInputs:r,passiveInputs:a}=mO(e),{outputs:i}=fO(t),o=QD(t),l=i=>{const o=$O(t),l=AO(e);if(i){const e=CO(a,t,n);wO(r,t,e,!1),s||EO(t)||o.connect(l,n)}else{const e=((t,e,n)=>ZD(t,(t=>t[0]===e&&t[1]===n)))(r,t,n);kO(a,e,!1),s||EO(t)||o.disconnect(l,n)}};return!!vO(i,[e,n],(t=>t[0]===e&&t[1]===n),!0)&&(o.add(l),pO(t)?wO(r,t,[n,l],!0):kO(a,[t,n,l],!0),!0)})(this,t,n,h)){const e=l([this],t);OO(e,s(h))}}disconnect(t,e,n){let s;const i=c(this._context),u=f(i);if(void 0===t)s=((t,e)=>{const n=fO(t),s=[];for(const r of n.outputs)xO(r)?LO(t,e,...r):zO(t,e,...r),s.push(r[0]);return n.outputs.clear(),s})(this,u);else if("number"==typeof t){if(t<0||t>=this.numberOfOutputs)throw r();s=((t,e,n)=>{const s=fO(t),r=[];for(const a of s.outputs)a[1]===n&&(xO(a)?LO(t,e,...a):zO(t,e,...a),r.push(a[0]),s.outputs.delete(a));return r})(this,u,t)}else{if(void 0!==e&&(e<0||e>=this.numberOfOutputs))throw r();if(bO(t)&&void 0!==n&&(n<0||n>=t.numberOfInputs))throw r();if(s=((t,e,n,s,r)=>{const a=fO(t);return Array.from(a.outputs).filter((t=>!(t[0]!==n||void 0!==s&&t[1]!==s||void 0!==r&&t[2]!==r))).map((n=>(xO(n)?LO(t,e,...n):zO(t,e,...n),a.outputs.delete(n),n[0])))})(this,u,t,e,n),0===s.length)throw a()}for(const t of s){const e=l([this],t);OO(e,o)}}})((oM=MD,(t,e,n)=>{const s=[];for(let t=0;t<n.numberOfInputs;t+=1)s.push(new Set);oM.set(t,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:e})}),((t,e,n,s,r,a,i,o,l,u,c,h,p)=>{const d=new WeakMap;return(f,m,g,y,b)=>{const{activeInputs:x,passiveInputs:v}=a(m),{outputs:w}=a(f),k=o(f),_=a=>{const o=l(m),u=l(f);if(a){const e=JD(v,f,g,y);t(x,f,e,!1),b||h(f)||n(u,o,g,y),p(m)&&tO(m)}else{const t=s(x,f,g,y);e(v,y,t,!1),b||h(f)||r(u,o,g,y);const n=i(m);if(0===n)c(m)&&sO(m,x);else{const t=d.get(m);void 0!==t&&clearTimeout(t),d.set(m,setTimeout((()=>{c(m)&&sO(m,x)}),1e3*n))}}};return!!u(w,[m,g,y],(t=>t[0]===m&&t[1]===g&&t[2]===y),!0)&&(k.add(_),c(f)?t(x,f,[g,y,_],!0):e(v,y,[f,g,_],!0),!0)}})(LF,zF,IO,PF,SO,fO,BF,QD,$O,vO,pO,EO,RO),WF,((t,e,n,s,r,a)=>i=>(o,l)=>{const u=t.get(o);if(void 0===u){if(!i&&a(o)){const t=s(o),{outputs:a}=n(o);for(const n of a)if(xO(n)){const r=s(n[0]);e(t,r,n[1],n[2])}else{const e=r(n[0]);t.disconnect(e,n[1])}}t.set(o,l)}else t.set(o,u+l)})(WD,SO,fO,$O,AO,pO),oO,eF,wF,((t,e,n,s,r,a,i,o)=>(l,u)=>{const c=e.get(l);if(void 0===c)throw new Error("Missing the expected cycle count.");const h=a(l.context),p=o(h);if(c===u){if(e.delete(l),!p&&i(l)){const e=s(l),{outputs:a}=n(l);for(const n of a)if(xO(n)){const r=s(n[0]);t(e,r,n[1],n[2])}else{const t=r(n[0]);e.connect(t,n[1])}}}else e.set(l,c-u)})(IO,WD,fO,$O,AO,YF,pO,QF),((t,e,n)=>function s(r,a){const i=bO(a)?a:n(t,a);if((t=>"delayTime"in t)(i))return[];if(r[0]===i)return[r];if(r.includes(i))return[];const{outputs:o}=e(i);return Array.from(o).map((t=>s([...r,i],t[0]))).reduce(((t,e)=>t.concat(e)),[])})(tM,fO,YD),eM,YF,sM,rM,aM,QF);var oM;const lM=((t,e,n,s,r,a)=>class extends t{constructor(t,n){const i=r(t),o={...rO,...n},l=s(i,o);super(t,!1,l,a(i)?e():null),this._nativeAnalyserNode=l}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(t){this._nativeAnalyserNode.fftSize=t}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(t){const e=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=t,!(t>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=e,n()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(t){const e=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=t,!(this._nativeAnalyserNode.maxDecibels>t))throw this._nativeAnalyserNode.minDecibels=e,n()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(t){this._nativeAnalyserNode.smoothingTimeConstant=t}getByteFrequencyData(t){this._nativeAnalyserNode.getByteFrequencyData(t)}getByteTimeDomainData(t){this._nativeAnalyserNode.getByteTimeDomainData(t)}getFloatFrequencyData(t){this._nativeAnalyserNode.getFloatFrequencyData(t)}getFloatTimeDomainData(t){this._nativeAnalyserNode.getFloatTimeDomainData(t)}})(iM,KF,oO,HF,YF,QF),uM=new WeakSet,cM=(t=>null===t?null:t.hasOwnProperty("AudioBuffer")?t.AudioBuffer:null)(jF),hM=(pM=new Uint32Array(1),t=>(pM[0]=t,pM[0]));var pM;const dM=((t,e)=>n=>{n.copyFromChannel=(s,r,a=0)=>{const i=t(a),o=t(r);if(o>=n.numberOfChannels)throw e();const l=n.length,u=n.getChannelData(o),c=s.length;for(let t=i<0?-i:0;t+i<l&&t<c;t+=1)s[t]=u[t+i]},n.copyToChannel=(s,r,a=0)=>{const i=t(a),o=t(r);if(o>=n.numberOfChannels)throw e();const l=n.length,u=n.getChannelData(o),c=s.length;for(let t=i<0?-i:0;t+i<l&&t<c;t+=1)u[t+i]=s[t]}})(hM,oO),fM=(t=>e=>{e.copyFromChannel=(n=>(s,r,a=0)=>{const i=t(a),o=t(r);if(i<e.length)return n.call(e,s,o,i)})(e.copyFromChannel),e.copyToChannel=(n=>(s,r,a=0)=>{const i=t(a),o=t(r);if(i<e.length)return n.call(e,s,o,i)})(e.copyToChannel)})(hM),mM=((t,e,n,s,r,a,i,o)=>{let l=null;return class u{constructor(u){if(null===r)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:c,numberOfChannels:h,sampleRate:p}={...uO,...u};null===l&&(l=new r(1,1,44100));const d=null!==s&&e(a,a)?new s({length:c,numberOfChannels:h,sampleRate:p}):l.createBuffer(h,c,p);if(0===d.numberOfChannels)throw n();return"function"!=typeof d.copyFromChannel?(i(d),lO(d)):e(iO,(()=>iO(d)))||o(d),t.add(d),d}static[Symbol.hasInstance](e){return null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===u.prototype||t.has(e)}}})(uM,WF,wF,cM,JF,(t=>()=>{if(null===t)return!1;try{new t({length:1,sampleRate:44100})}catch{return!1}return!0})(cM),dM,fM),gM=(t=>(e,n)=>{const s=t(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});n.connect(s).connect(e.destination);const r=()=>{n.removeEventListener("ended",r),n.disconnect(s),s.disconnect()};n.addEventListener("ended",r)})(yF),yM=((t,e,n)=>async(s,r,a,i)=>{const o=e(s);await Promise.all(Array.from(o.activeInputs).map((async([e,s])=>{const o=t(e),l=await o.render(e,r,i);n(e)||l.connect(a,s)})))})(qF,mO,EO),bM=(t=>(e,n,s,r)=>t(n,e,s,r))(yM),xM=((t,e,n,s,r,a,i,o,l,u,c)=>(l,h)=>{const p=l.createBufferSource();return oF(p,h),uF(p,h,"playbackRate"),iF(p,h,"buffer"),iF(p,h,"loop"),iF(p,h,"loopEnd"),iF(p,h,"loopStart"),e(n,(()=>n(l)))||(t=>{t.start=(e=>{let n=!1;return(s=0,r=0,a)=>{if(n)throw tF();e.call(t,s,r,a),n=!0}})(t.start)})(p),e(s,(()=>s(l)))||(t=>{t.start=(e=t.start,(n=0,s=0,r)=>{const a=t.buffer,i=null===a?s:Math.min(a.duration,s);null!==a&&i>a.duration-.5/t.context.sampleRate?e.call(t,n,0,0):e.call(t,n,i,r)});var e})(p),e(r,(()=>r(l)))||u(p,l),e(a,(()=>a(l)))||cF(p),e(i,(()=>i(l)))||c(p,l),e(o,(()=>o(l)))||hF(p),t(l,p),p})(gM,WF,(t=>{const e=t.createBufferSource();e.start();try{e.start()}catch{return!0}return!1}),(t=>{const e=t.createBufferSource(),n=t.createBuffer(1,1,44100);e.buffer=n;try{e.start(0,1)}catch{return!1}return!0}),(t=>{const e=t.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0}),RF,DF,OF,0,(t=>(e,n)=>{const s=n.createBuffer(1,1,44100);null===e.buffer&&(e.buffer=s),t(e,"buffer",(t=>()=>{const n=t.call(e);return n===s?null:n}),(t=>n=>t.call(e,null===n?s:n)))})(AF),FF),vM=((t,e)=>(n,s,r,a)=>(t(s).replay(r),e(s,n,r,a)))((t=>e=>{const n=t(e);if(null===n.renderer)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return n.renderer})(mO),yM),wM=((t,e,n,s,r)=>()=>{const a=new WeakMap;let i=null,o=null;return{set start(t){i=t},set stop(t){o=t},render(l,u,c){const h=a.get(u);return void 0!==h?Promise.resolve(h):(async(l,u,c)=>{let h=n(l);const p=aO(h,u);if(!p){const t={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=e(u,t),null!==i&&h.start(...i),null!==o&&h.stop(o)}return a.set(u,h),p?await t(u,l.playbackRate,h.playbackRate,c):await s(u,l.playbackRate,h.playbackRate,c),await r(l,u,h,c),h})(l,u,c)}}})(bM,xM,$O,vM,XF),kM=((t,e,n,s,r,a,i,o,l,u,c,h,p)=>(s,d,f,m=null,g=null)=>{const y=new OD.AutomationEventList(f.defaultValue),b=d?(t=>({replay(e){for(const n of t)if("exponentialRampToValue"===n.type){const{endTime:t,value:s}=n;e.exponentialRampToValueAtTime(s,t)}else if("linearRampToValue"===n.type){const{endTime:t,value:s}=n;e.linearRampToValueAtTime(s,t)}else if("setTarget"===n.type){const{startTime:t,target:s,timeConstant:r}=n;e.setTargetAtTime(s,t,r)}else if("setValue"===n.type){const{startTime:t,value:s}=n;e.setValueAtTime(s,t)}else{if("setValueCurve"!==n.type)throw new Error("Can't apply an unknown automation.");{const{duration:t,startTime:s,values:r}=n;e.setValueCurveAtTime(r,s,t)}}}}))(y):null,x={get defaultValue(){return f.defaultValue},get maxValue(){return null===m?f.maxValue:m},get minValue(){return null===g?f.minValue:g},get value(){return f.value},set value(t){f.value=t,x.setValueAtTime(t,s.context.currentTime)},cancelAndHoldAtTime(t){if("function"==typeof f.cancelAndHoldAtTime)null===b&&y.flush(s.context.currentTime),y.add(r(t)),f.cancelAndHoldAtTime(t);else{const e=Array.from(y).pop();null===b&&y.flush(s.context.currentTime),y.add(r(t));const n=Array.from(y).pop();f.cancelScheduledValues(t),e!==n&&void 0!==n&&("exponentialRampToValue"===n.type?f.exponentialRampToValueAtTime(n.value,n.endTime):"linearRampToValue"===n.type?f.linearRampToValueAtTime(n.value,n.endTime):"setValue"===n.type?f.setValueAtTime(n.value,n.startTime):"setValueCurve"===n.type&&f.setValueCurveAtTime(n.values,n.startTime,n.duration))}return x},cancelScheduledValues:t=>(null===b&&y.flush(s.context.currentTime),y.add(a(t)),f.cancelScheduledValues(t),x),exponentialRampToValueAtTime(t,e){if(0===t)throw new RangeError;if(!Number.isFinite(e)||e<0)throw new RangeError;return null===b&&y.flush(s.context.currentTime),y.add(i(t,e)),f.exponentialRampToValueAtTime(t,e),x},linearRampToValueAtTime:(t,e)=>(null===b&&y.flush(s.context.currentTime),y.add(o(t,e)),f.linearRampToValueAtTime(t,e),x),setTargetAtTime:(t,e,n)=>(null===b&&y.flush(s.context.currentTime),y.add(l(t,e,n)),f.setTargetAtTime(t,e,n),x),setValueAtTime:(t,e)=>(null===b&&y.flush(s.context.currentTime),y.add(u(t,e)),f.setValueAtTime(t,e),x),setValueCurveAtTime(t,e,n){const r=t instanceof Float32Array?t:new Float32Array(t);if(null!==h&&"webkitAudioContext"===h.name){const t=e+n,a=s.context.sampleRate,i=Math.ceil(e*a),o=Math.floor(t*a),l=o-i,u=new Float32Array(l);for(let t=0;t<l;t+=1){const s=(r.length-1)/n*((i+t)/a-e),o=Math.floor(s),l=Math.ceil(s);u[t]=o===l?r[o]:(1-(s-o))*r[o]+(1-(l-s))*r[l]}null===b&&y.flush(s.context.currentTime),y.add(c(u,e,n)),f.setValueCurveAtTime(u,e,n);const h=o/a;h<t&&p(x,u[u.length-1],h),p(x,r[r.length-1],t)}else null===b&&y.flush(s.context.currentTime),y.add(c(r,e,n)),f.setValueCurveAtTime(r,e,n);return x}};return n.set(x,f),e.set(x,s),t(x,b),x})((_M=zD,(t,e)=>{_M.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})}),tM,PD,0,OD.createCancelAndHoldAutomationEvent,OD.createCancelScheduledValuesAutomationEvent,OD.createExponentialRampToValueAutomationEvent,OD.createLinearRampToValueAutomationEvent,OD.createSetTargetAutomationEvent,OD.createSetValueAutomationEvent,OD.createSetValueCurveAutomationEvent,nM,EF);var _M;const IM=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,s){const o=a(t),l={...dO,...s},u=r(o,l),c=i(o),h=c?e():null;super(t,!1,u,h),this._audioBufferSourceNodeRenderer=h,this._isBufferNullified=!1,this._isBufferSet=null!==l.buffer,this._nativeAudioBufferSourceNode=u,this._onended=null,this._playbackRate=n(this,c,u.playbackRate,hO,cO)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(t){if(this._nativeAudioBufferSourceNode.buffer=t,null!==t){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(t){this._nativeAudioBufferSourceNode.loop=t}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(t){this._nativeAudioBufferSourceNode.loopEnd=t}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(t){this._nativeAudioBufferSourceNode.loopStart=t}get onended(){return this._onended}set onended(t){const e="function"==typeof t?o(this,t):null;this._nativeAudioBufferSourceNode.onended=e;const n=this._nativeAudioBufferSourceNode.onended;this._onended=null!==n&&n===e?t:n}get playbackRate(){return this._playbackRate}start(t=0,e=0,n){if(this._nativeAudioBufferSourceNode.start(t,e,n),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.start=void 0===n?[t,e]:[t,e,n]),"closed"!==this.context.state){tO(this);const t=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",t),pO(this)&&nO(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",t)}}stop(t=0){this._nativeAudioBufferSourceNode.stop(t),null!==this._audioBufferSourceNodeRenderer&&(this._audioBufferSourceNodeRenderer.stop=t)}})(iM,wM,kM,tF,xM,YF,QF,MF),NM=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,e){const n=a(t),s=i(n),l=r(n,e,s);super(t,!1,l,s?(t=>{let e=null;return{render:(n,s,r)=>(null===e&&(e=(async(e,n,s)=>{const r=n.destination;return await t(e,n,r,s),r})(n,s,r)),e)}})(o):null),this._isNodeOfNativeOfflineAudioContext=s,this._nativeAudioDestinationNode=l}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(t){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(t>this._nativeAudioDestinationNode.maxChannelCount)throw n();this._nativeAudioDestinationNode.channelCount=t}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(t){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=t}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}})(iM,0,oO,tF,((t,e)=>(n,s,r)=>{const a=n.destination;if(a.channelCount!==s)try{a.channelCount=s}catch{}r&&"explicit"!==a.channelCountMode&&(a.channelCountMode="explicit"),0===a.maxChannelCount&&Object.defineProperty(a,"maxChannelCount",{value:s});const i=t(n,{channelCount:s,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,gain:1});return e(i,"channelCount",(t=>()=>t.call(i)),(t=>e=>{t.call(i,e);try{a.channelCount=e}catch(t){if(e>a.maxChannelCount)throw t}})),e(i,"channelCountMode",(t=>()=>t.call(i)),(t=>e=>{t.call(i,e),a.channelCountMode=e})),e(i,"channelInterpretation",(t=>()=>t.call(i)),(t=>e=>{t.call(i,e),a.channelInterpretation=e})),Object.defineProperty(i,"maxChannelCount",{get:()=>a.maxChannelCount}),i.connect(a),i})(yF,AF),YF,QF,XF),TM=((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o,l){const u=a.get(o);return void 0!==u?Promise.resolve(u):(async(i,o,l)=>{let u=n(i);const c=aO(u,o);if(!c){const t={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=e(o,t)}return a.set(o,u),c?(await t(o,i.Q,u.Q,l),await t(o,i.detune,u.detune,l),await t(o,i.frequency,u.frequency,l),await t(o,i.gain,u.gain,l)):(await s(o,i.Q,u.Q,l),await s(o,i.detune,u.detune,l),await s(o,i.frequency,u.frequency,l),await s(o,i.gain,u.gain,l)),await r(i,o,u,l),u})(i,o,l)}}})(bM,dF,$O,vM,XF),CM=(t=>(e,n)=>t.set(e,n))(VF),SM=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,s){const l=a(t),u={...jO,...s},c=r(l,u),h=i(l);super(t,!1,c,h?n():null),this._Q=e(this,h,c.Q,hO,cO),this._detune=e(this,h,c.detune,1200*Math.log2(hO),-1200*Math.log2(hO)),this._frequency=e(this,h,c.frequency,t.sampleRate/2,0),this._gain=e(this,h,c.gain,40*Math.log10(hO),cO),this._nativeBiquadFilterNode=c,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(t){this._nativeBiquadFilterNode.type=t}getFrequencyResponse(t,e,n){try{this._nativeBiquadFilterNode.getFrequencyResponse(t,e,n)}catch(t){if(11===t.code)throw s();throw t}if(t.length!==e.length||e.length!==n.length)throw s()}})(iM,kM,TM,eF,dF,YF,QF,CM),$M=((t,e)=>(n,s,r)=>{const a=new Set;return n.connect=(o=n.connect,(r,i=0,l=0)=>{const u=0===a.size;if(e(r))return o.call(n,r,i,l),t(a,[r,i,l],(t=>t[0]===r&&t[1]===i&&t[2]===l),!0),u&&s(),r;o.call(n,r,i),t(a,[r,i],(t=>t[0]===r&&t[1]===i),!0),u&&s()}),n.disconnect=(i=n.disconnect,(t,s,o)=>{const l=a.size>0;if(void 0===t)i.apply(n),a.clear();else if("number"==typeof t){i.call(n,t);for(const e of a)e[1]===t&&a.delete(e)}else{e(t)?i.call(n,t,s,o):i.call(n,t,s);for(const e of a)e[0]!==t||void 0!==s&&e[1]!==s||void 0!==o&&e[2]!==o||a.delete(e)}const u=0===a.size;l&&u&&r()}),n;var i,o})(vO,rM),AM=((t,e)=>(n,s)=>{const r=n.createChannelMerger(s.numberOfInputs);return null!==t&&"webkitAudioContext"===t.name&&e(n,r),oF(r,s),r})(nM,((t,e)=>(n,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw t()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw t()}});const r=n.createBufferSource();e(s,(()=>{const t=s.numberOfInputs;for(let e=0;e<t;e+=1)r.connect(s,0,e)}),(()=>r.disconnect(s)))})(tF,$M)),EM=((t,e,n,s,r)=>class extends t{constructor(t,a){const i=s(t),o={...HO,...a};super(t,!1,n(i,o),r(i)?e():null)}})(iM,((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a,i){const o=s.get(a);return void 0!==o?Promise.resolve(o):(async(r,a,i)=>{let o=e(r);if(!aO(o,a)){const e={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfInputs:o.numberOfInputs};o=t(a,e)}return s.set(a,o),await n(r,a,o,i),o})(r,a,i)}}})(AM,$O,XF),AM,YF,QF),RM=((t,e,n,s,r,a)=>class extends t{constructor(t,a){const i=s(t),o=(t=>({...t,channelCount:t.numberOfOutputs}))({...qO,...a});super(t,!1,n(i,o),r(i)?e():null)}})(iM,((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a,i){const o=s.get(a);return void 0!==o?Promise.resolve(o):(async(r,a,i)=>{let o=e(r);if(!aO(o,a)){const e={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfOutputs:o.numberOfOutputs};o=t(a,e)}return s.set(a,o),await n(r,a,o,i),o})(r,a,i)}}})(fF,$O,XF),fF,YF,QF),DM=((t,e,n,s)=>(r,{offset:a,...i})=>{const o=r.createBuffer(1,2,44100),l=e(r,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=n(r,{...i,gain:a}),c=o.getChannelData(0);c[0]=1,c[1]=1,l.buffer=o,l.loop=!0;const h={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(t){u.channelCount=t},get channelCountMode(){return u.channelCountMode},set channelCountMode(t){u.channelCountMode=t},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(t){u.channelInterpretation=t},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return l.onended},set onended(t){l.onended=t},addEventListener:(...t)=>l.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>l.dispatchEvent(t[0]),removeEventListener:(...t)=>l.removeEventListener(t[0],t[1],t[2]),start(t=0){l.start.call(l,t)},stop(t=0){l.stop.call(l,t)}};return t(r,l),s(mF(h,u),(()=>l.connect(u)),(()=>l.disconnect(u)))})(gM,xM,yF,$M),OM=((t,e,n,s,r)=>(a,i)=>{if(void 0===a.createConstantSource)return n(a,i);const o=a.createConstantSource();return oF(o,i),uF(o,i,"offset"),e(s,(()=>s(a)))||cF(o),e(r,(()=>r(a)))||hF(o),t(a,o),o})(gM,WF,DM,RF,OF),FM=((t,e,n,s,r,a,i)=>class extends t{constructor(t,i){const o=r(t),l={...XO,...i},u=s(o,l),c=a(o),h=c?n():null;super(t,!1,u,h),this._constantSourceNodeRenderer=h,this._nativeConstantSourceNode=u,this._offset=e(this,c,u.offset,hO,cO),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(t){const e="function"==typeof t?i(this,t):null;this._nativeConstantSourceNode.onended=e;const n=this._nativeConstantSourceNode.onended;this._onended=null!==n&&n===e?t:n}start(t=0){if(this._nativeConstantSourceNode.start(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.start=t),"closed"!==this.context.state){tO(this);const t=()=>{this._nativeConstantSourceNode.removeEventListener("ended",t),pO(this)&&nO(this)};this._nativeConstantSourceNode.addEventListener("ended",t)}}stop(t=0){this._nativeConstantSourceNode.stop(t),null!==this._constantSourceNodeRenderer&&(this._constantSourceNodeRenderer.stop=t)}})(iM,kM,((t,e,n,s,r)=>()=>{const a=new WeakMap;let i=null,o=null;return{set start(t){i=t},set stop(t){o=t},render(l,u,c){const h=a.get(u);return void 0!==h?Promise.resolve(h):(async(l,u,c)=>{let h=n(l);const p=aO(h,u);if(!p){const t={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=e(u,t),null!==i&&h.start(i),null!==o&&h.stop(o)}return a.set(u,h),p?await t(u,l.offset,h.offset,c):await s(u,l.offset,h.offset,c),await r(l,u,h,c),h})(l,u,c)}}})(bM,OM,$O,vM,XF),OM,YF,QF,MF),MM=((t,e)=>(n,s)=>{const r=n.createConvolver();if(oF(r,s),s.disableNormalization===r.normalize&&(r.normalize=!s.disableNormalization),iF(r,s,"buffer"),s.channelCount>2)throw t();if(e(r,"channelCount",(t=>()=>t.call(r)),(e=>n=>{if(n>2)throw t();return e.call(r,n)})),"max"===s.channelCountMode)throw t();return e(r,"channelCountMode",(t=>()=>t.call(r)),(e=>n=>{if("max"===n)throw t();return e.call(r,n)})),r})(wF,AF),LM=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=s(t),l={...KO,...i},u=n(o,l);super(t,!1,u,r(o)?e():null),this._isBufferNullified=!1,this._nativeConvolverNode=u,null!==l.buffer&&a(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(t){if(this._nativeConvolverNode.buffer=t,null===t&&null!==this._nativeConvolverNode.buffer){const t=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=t.createBuffer(1,1,44100),this._isBufferNullified=!0,a(this,0)}else this._isBufferNullified=!1,a(this,null===this._nativeConvolverNode.buffer?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(t){this._nativeConvolverNode.normalize=t}})(iM,((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a,i){const o=s.get(a);return void 0!==o?Promise.resolve(o):(async(r,a,i)=>{let o=e(r);if(!aO(o,a)){const e={buffer:o.buffer,channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,disableNormalization:!o.normalize};o=t(a,e)}return s.set(a,o),_O(o)?await n(r,a,o.inputs[0],i):await n(r,a,o,i),o})(r,a,i)}}})(MM,$O,XF),MM,YF,QF,CM),zM=((t,e,n,s,r,a,i)=>class extends t{constructor(t,o){const l=r(t),u={...YO,...o},c=s(l,u),h=a(l);super(t,!1,c,h?n(u.maxDelayTime):null),this._delayTime=e(this,h,c.delayTime),i(this,u.maxDelayTime)}get delayTime(){return this._delayTime}})(iM,kM,((t,e,n,s,r)=>a=>{const i=new WeakMap;return{render(o,l,u){const c=i.get(l);return void 0!==c?Promise.resolve(c):(async(o,l,u)=>{let c=n(o);const h=aO(c,l);if(!h){const t={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,delayTime:c.delayTime.value,maxDelayTime:a};c=e(l,t)}return i.set(l,c),h?await t(l,o.delayTime,c.delayTime,u):await s(l,o.delayTime,c.delayTime,u),await r(o,l,c,u),c})(o,l,u)}}})(bM,gF,$O,vM,XF),gF,YF,QF,CM),PM=(t=>(e,n)=>{const s=e.createDynamicsCompressor();if(oF(s,n),n.channelCount>2)throw t();if("max"===n.channelCountMode)throw t();return uF(s,n,"attack"),uF(s,n,"knee"),uF(s,n,"ratio"),uF(s,n,"release"),uF(s,n,"threshold"),s})(wF),VM=((t,e,n,s,r,a,i,o)=>class extends t{constructor(t,r){const l=a(t),u={...JO,...r},c=s(l,u),h=i(l);super(t,!1,c,h?n():null),this._attack=e(this,h,c.attack),this._knee=e(this,h,c.knee),this._nativeDynamicsCompressorNode=c,this._ratio=e(this,h,c.ratio),this._release=e(this,h,c.release),this._threshold=e(this,h,c.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(t){const e=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=t,t>2)throw this._nativeDynamicsCompressorNode.channelCount=e,r()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(t){const e=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=t,"max"===t)throw this._nativeDynamicsCompressorNode.channelCountMode=e,r()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return"number"==typeof this._nativeDynamicsCompressorNode.reduction.value?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}})(iM,kM,((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o,l){const u=a.get(o);return void 0!==u?Promise.resolve(u):(async(i,o,l)=>{let u=n(i);const c=aO(u,o);if(!c){const t={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=e(o,t)}return a.set(o,u),c?(await t(o,i.attack,u.attack,l),await t(o,i.knee,u.knee,l),await t(o,i.ratio,u.ratio,l),await t(o,i.release,u.release,l),await t(o,i.threshold,u.threshold,l)):(await s(o,i.attack,u.attack,l),await s(o,i.knee,u.knee,l),await s(o,i.ratio,u.ratio,l),await s(o,i.release,u.release,l),await s(o,i.threshold,u.threshold,l)),await r(i,o,u,l),u})(i,o,l)}}})(bM,PM,$O,vM,XF),PM,wF,YF,QF,CM),BM=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=r(t),l={...QO,...i},u=s(o,l),c=a(o);super(t,!1,u,c?n():null),this._gain=e(this,c,u.gain,hO,cO)}get gain(){return this._gain}})(iM,kM,((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o,l){const u=a.get(o);return void 0!==u?Promise.resolve(u):(async(i,o,l)=>{let u=n(i);const c=aO(u,o);if(!c){const t={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=e(o,t)}return a.set(o,u),c?await t(o,i.gain,u.gain,l):await s(o,i.gain,u.gain,l),await r(i,o,u,l),u})(i,o,l)}}})(bM,yF,$O,vM,XF),yF,YF,QF),WM=((t,e,n,s)=>(r,a,{channelCount:i,channelCountMode:o,channelInterpretation:l,feedback:u,feedforward:c})=>{const h=pF(a,r.sampleRate),p=u instanceof Float64Array?u:new Float64Array(u),d=c instanceof Float64Array?c:new Float64Array(c),f=p.length,m=d.length,g=Math.min(f,m);if(0===f||f>20)throw s();if(0===p[0])throw e();if(0===m||m>20)throw s();if(0===d[0])throw e();if(1!==p[0]){for(let t=0;t<m;t+=1)d[t]/=p[0];for(let t=1;t<f;t+=1)p[t]/=p[0]}const y=n(r,h,i,i);y.channelCount=i,y.channelCountMode=o,y.channelInterpretation=l;const b=[],x=[],v=[];for(let t=0;t<i;t+=1){b.push(0);const t=new Float32Array(32),e=new Float32Array(32);t.fill(0),e.fill(0),x.push(t),v.push(e)}y.onaudioprocess=t=>{const e=t.inputBuffer,n=t.outputBuffer,s=e.numberOfChannels;for(let t=0;t<s;t+=1){const s=e.getChannelData(t),r=n.getChannelData(t);b[t]=sF(p,f,d,m,g,x[t],v[t],b[t],32,s,r)}};const w=r.sampleRate/2;return mF({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(t){y.channelCount=t},get channelCountMode(){return y.channelCountMode},set channelCountMode(t){y.channelCountMode=t},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(t){y.channelInterpretation=t},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener:(...t)=>y.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>y.dispatchEvent(t[0]),getFrequencyResponse(e,n,s){if(e.length!==n.length||n.length!==s.length)throw t();const r=e.length;for(let t=0;t<r;t+=1){const r=-Math.PI*(e[t]/w),a=[Math.cos(r),Math.sin(r)],i=bF(xF(d,a),xF(p,a));n[t]=Math.sqrt(i[0]*i[0]+i[1]*i[1]),s[t]=Math.atan2(i[1],i[0])}},removeEventListener:(...t)=>y.removeEventListener(t[0],t[1],t[2])},y)})(eF,tF,vF,wF),UM=((t,e,n,s)=>r=>t(aF,(()=>aF(r)))?Promise.resolve(t(s,s)).then((t=>{if(!t){const t=n(r,512,0,1);r.oncomplete=()=>{t.onaudioprocess=null,t.disconnect()},t.onaudioprocess=()=>r.currentTime,t.connect(r.destination)}return r.startRendering()})):new Promise((t=>{const n=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});r.oncomplete=e=>{n.disconnect(),t(e.renderedBuffer)},n.connect(r.destination),r.startRendering()})))(WF,yF,vF,((t,e)=>()=>{if(null===e)return Promise.resolve(!1);const n=new e(1,1,44100),s=t(n,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise((t=>{n.oncomplete=()=>{s.disconnect(),t(0!==n.currentTime)},n.startRendering()}))})(yF,JF)),GM=((t,e,n,s,r)=>(a,i)=>{const o=new WeakMap;let l=null;return{render(u,c,h){const p=o.get(c);return void 0!==p?Promise.resolve(p):(async(u,c,h)=>{let p=null,d=e(u);const f=aO(d,c);if(void 0===c.createIIRFilter?p=t(c,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):f||(d=c.createIIRFilter(i,a)),o.set(c,null===p?d:p),null!==p){if(null===l){if(null===n)throw new Error("Missing the native OfflineAudioContext constructor.");const t=new n(u.context.destination.channelCount,u.context.length,c.sampleRate);l=(async()=>(await s(u,t,t.destination,h),((t,e,n,s)=>{const r=n instanceof Float64Array?n:new Float64Array(n),a=s instanceof Float64Array?s:new Float64Array(s),i=r.length,o=a.length,l=Math.min(i,o);if(1!==r[0]){for(let t=0;t<i;t+=1)a[t]/=r[0];for(let t=1;t<o;t+=1)r[t]/=r[0]}const u=new Float32Array(32),c=new Float32Array(32),h=e.createBuffer(t.numberOfChannels,t.length,t.sampleRate),p=t.numberOfChannels;for(let e=0;e<p;e+=1){const n=t.getChannelData(e),s=h.getChannelData(e);u.fill(0),c.fill(0),sF(r,i,a,o,l,u,c,0,32,n,s)}return h})(await r(t),c,a,i)))()}const t=await l;return p.buffer=t,p.start(0),p}return await s(u,c,d,h),d})(u,c,h)}}})(xM,$O,JF,XF,UM),jM=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=s(t),l=r(o),u={...nF,...i},c=e(o,l?null:t.baseLatency,u);super(t,!1,c,l?n(u.feedback,u.feedforward):null),(t=>{var e;t.getFrequencyResponse=(e=t.getFrequencyResponse,(n,s,r)=>{if(n.length!==s.length||s.length!==r.length)throw eF();return e.call(t,n,s,r)})})(c),this._nativeIIRFilterNode=c,a(this,1)}getFrequencyResponse(t,e,n){return this._nativeIIRFilterNode.getFrequencyResponse(t,e,n)}})(iM,(t=>(e,n,s)=>{if(void 0===e.createIIRFilter)return t(e,n,s);const r=e.createIIRFilter(s.feedforward,s.feedback);return oF(r,s),r})(WM),GM,YF,QF,CM),HM=((t,e,n,s,r)=>(a,i)=>{const o=i.listener,{forwardX:l,forwardY:u,forwardZ:c,positionX:h,positionY:p,positionZ:d,upX:f,upY:m,upZ:g}=void 0===o.forwardX?(()=>{const l=e(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),u=r(i),c=s(i,256,9,0),h=(e,s)=>{const r=n(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:s});return r.connect(l,0,e),r.start(),Object.defineProperty(r.offset,"defaultValue",{get:()=>s}),t({context:a},u,r.offset,hO,cO)};let p=[0,0,-1,0,1,0],d=[0,0,0];return c.onaudioprocess=({inputBuffer:t})=>{const e=[t.getChannelData(0)[0],t.getChannelData(1)[0],t.getChannelData(2)[0],t.getChannelData(3)[0],t.getChannelData(4)[0],t.getChannelData(5)[0]];e.some(((t,e)=>t!==p[e]))&&(o.setOrientation(...e),p=e);const n=[t.getChannelData(6)[0],t.getChannelData(7)[0],t.getChannelData(8)[0]];n.some(((t,e)=>t!==d[e]))&&(o.setPosition(...n),d=n)},l.connect(c),{forwardX:h(0,0),forwardY:h(1,0),forwardZ:h(2,-1),positionX:h(6,0),positionY:h(7,0),positionZ:h(8,0),upX:h(3,0),upY:h(4,1),upZ:h(5,0)}})():o;return{get forwardX(){return l},get forwardY(){return u},get forwardZ(){return c},get positionX(){return h},get positionY(){return p},get positionZ(){return d},get upX(){return f},get upY(){return m},get upZ(){return g}}})(kM,AM,OM,vF,QF),qM=new WeakMap,XM=((t,e,n,s,r,a)=>class extends n{constructor(n,a){super(n),this._nativeContext=n,VD.set(this,n),s(n)&&r.set(n,new Set),this._destination=new t(this,a),this._listener=e(this,n),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(t){const e="function"==typeof t?a(this,t):null;this._nativeContext.onstatechange=e;const n=this._nativeContext.onstatechange;this._onstatechange=null!==n&&n===e?t:n}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}})(NM,HM,eM,QF,qM,MF),KM=((t,e,n,s,r,a)=>(i,o)=>{const l=i.createOscillator();return oF(l,o),uF(l,o,"detune"),uF(l,o,"frequency"),void 0!==o.periodicWave?l.setPeriodicWave(o.periodicWave):iF(l,o,"type"),e(n,(()=>n(i)))||cF(l),e(s,(()=>s(i)))||a(l,i),e(r,(()=>r(i)))||hF(l),t(i,l),l})(gM,WF,RF,DF,OF,FF),YM=((t,e,n,s,r)=>()=>{const a=new WeakMap;let i=null,o=null,l=null;return{set periodicWave(t){i=t},set start(t){o=t},set stop(t){l=t},render(u,c,h){const p=a.get(c);return void 0!==p?Promise.resolve(p):(async(u,c,h)=>{let p=n(u);const d=aO(p,c);if(!d){const t={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,detune:p.detune.value,frequency:p.frequency.value,periodicWave:null===i?void 0:i,type:p.type};p=e(c,t),null!==o&&p.start(o),null!==l&&p.stop(l)}return a.set(c,p),d?(await t(c,u.detune,p.detune,h),await t(c,u.frequency,p.frequency,h)):(await s(c,u.detune,p.detune,h),await s(c,u.frequency,p.frequency,h)),await r(u,c,p,h),p})(u,c,h)}}})(bM,KM,$O,vM,XF),ZM=((t,e,n,s,r,a,i)=>class extends t{constructor(t,i){const o=r(t),l={..._F,...i},u=n(o,l),c=a(o),h=c?s():null,p=t.sampleRate/2;super(t,!1,u,h),this._detune=e(this,c,u.detune,153600,-153600),this._frequency=e(this,c,u.frequency,p,-p),this._nativeOscillatorNode=u,this._onended=null,this._oscillatorNodeRenderer=h,null!==this._oscillatorNodeRenderer&&void 0!==l.periodicWave&&(this._oscillatorNodeRenderer.periodicWave=l.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(t){const e="function"==typeof t?i(this,t):null;this._nativeOscillatorNode.onended=e;const n=this._nativeOscillatorNode.onended;this._onended=null!==n&&n===e?t:n}get type(){return this._nativeOscillatorNode.type}set type(t){this._nativeOscillatorNode.type=t,null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(t){this._nativeOscillatorNode.setPeriodicWave(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.periodicWave=t)}start(t=0){if(this._nativeOscillatorNode.start(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.start=t),"closed"!==this.context.state){tO(this);const t=()=>{this._nativeOscillatorNode.removeEventListener("ended",t),pO(this)&&nO(this)};this._nativeOscillatorNode.addEventListener("ended",t)}}stop(t=0){this._nativeOscillatorNode.stop(t),null!==this._oscillatorNodeRenderer&&(this._oscillatorNodeRenderer.stop=t)}})(iM,kM,KM,YM,YF,QF,MF),JM=(t=>(e,n)=>{const s=t(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),r=e.createBuffer(1,2,44100);return s.buffer=r,s.loop=!0,s.connect(n),s.start(),()=>{s.stop(),s.disconnect(n)}})(xM),QM=((t,e,n,s,r)=>(a,{curve:i,oversample:o,...l})=>{const u=a.createWaveShaper(),c=a.createWaveShaper();oF(u,l),oF(c,l);const h=n(a,{...l,gain:1}),p=n(a,{...l,gain:-1}),d=n(a,{...l,gain:1}),f=n(a,{...l,gain:-1});let m=null,g=!1,y=null;const b={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(t){h.channelCount=t,p.channelCount=t,u.channelCount=t,d.channelCount=t,c.channelCount=t,f.channelCount=t},get channelCountMode(){return u.channelCountMode},set channelCountMode(t){h.channelCountMode=t,p.channelCountMode=t,u.channelCountMode=t,d.channelCountMode=t,c.channelCountMode=t,f.channelCountMode=t},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(t){h.channelInterpretation=t,p.channelInterpretation=t,u.channelInterpretation=t,d.channelInterpretation=t,c.channelInterpretation=t,f.channelInterpretation=t},get context(){return u.context},get curve(){return y},set curve(n){if(null!==n&&n.length<2)throw e();if(null===n)u.curve=n,c.curve=n;else{const t=n.length,e=new Float32Array(t+2-t%2),s=new Float32Array(t+2-t%2);e[0]=n[0],s[0]=-n[t-1];const r=Math.ceil((t+1)/2),a=(t+1)/2-1;for(let i=1;i<r;i+=1){const o=i/r*a,l=Math.floor(o),u=Math.ceil(o);e[i]=l===u?n[l]:(1-(o-l))*n[l]+(1-(u-o))*n[u],s[i]=l===u?-n[t-1-l]:-(1-(o-l))*n[t-1-l]-(1-(u-o))*n[t-1-u]}e[r]=t%2==1?n[r-1]:(n[r-2]+n[r-1])/2,u.curve=e,c.curve=s}y=n,g&&(s(y)&&null===m?m=t(a,h):null!==m&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(t){u.oversample=t,c.oversample=t},addEventListener:(...t)=>h.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>h.dispatchEvent(t[0]),removeEventListener:(...t)=>h.removeEventListener(t[0],t[1],t[2])};return null!==i&&(b.curve=i instanceof Float32Array?i:new Float32Array(i)),o!==b.oversample&&(b.oversample=o),r(mF(b,d),(()=>{h.connect(u).connect(d),h.connect(p).connect(c).connect(f).connect(d),g=!0,s(y)&&(m=t(a,h))}),(()=>{h.disconnect(u),u.disconnect(d),h.disconnect(p),p.disconnect(c),c.disconnect(f),f.disconnect(d),g=!1,null!==m&&(m(),m=null)}))})(JM,tF,yF,$F,$M),tL=((t,e,n,s,r,a,i)=>(o,l)=>{const u=o.createWaveShaper();if(null!==a&&"webkitAudioContext"===a.name&&void 0===o.createGain().gain.automationRate)return n(o,l);oF(u,l);const c=null===l.curve||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(null!==c&&c.length<2)throw e();iF(u,{curve:c},"curve"),iF(u,l,"oversample");let h=null,p=!1;return i(u,"curve",(t=>()=>t.call(u)),(e=>n=>(e.call(u,n),p&&(s(n)&&null===h?h=t(o,u):s(n)||null===h||(h(),h=null)),n))),r(u,(()=>{p=!0,s(u.curve)&&(h=t(o,u))}),(()=>{p=!1,null!==h&&(h(),h=null)}))})(JM,tF,QM,$F,$M,nM,AF),eL=(UL=((t,e,n,s,r,a,i,o,l)=>(u,{coneInnerAngle:c,coneOuterAngle:h,coneOuterGain:p,distanceModel:d,maxDistance:f,orientationX:m,orientationY:g,orientationZ:y,panningModel:b,positionX:x,positionY:v,positionZ:w,refDistance:k,rolloffFactor:_,...I})=>{const N=u.createPanner();if(I.channelCount>2)throw i();if("max"===I.channelCountMode)throw i();oF(N,I);const T={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},C=n(u,{...T,channelInterpretation:"speakers",numberOfInputs:6}),S=s(u,{...I,gain:1}),$=s(u,{...T,gain:1}),A=s(u,{...T,gain:0}),E=s(u,{...T,gain:0}),R=s(u,{...T,gain:0}),D=s(u,{...T,gain:0}),O=s(u,{...T,gain:0}),F=r(u,256,6,1),M=a(u,{...T,curve:new Float32Array([1,1]),oversample:"none"});let L=[m,g,y],z=[x,v,w];F.onaudioprocess=({inputBuffer:t})=>{const e=[t.getChannelData(0)[0],t.getChannelData(1)[0],t.getChannelData(2)[0]];e.some(((t,e)=>t!==L[e]))&&(N.setOrientation(...e),L=e);const n=[t.getChannelData(3)[0],t.getChannelData(4)[0],t.getChannelData(5)[0]];n.some(((t,e)=>t!==z[e]))&&(N.setPosition(...n),z=n)},Object.defineProperty(A.gain,"defaultValue",{get:()=>0}),Object.defineProperty(E.gain,"defaultValue",{get:()=>0}),Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(D.gain,"defaultValue",{get:()=>0}),Object.defineProperty(O.gain,"defaultValue",{get:()=>0});const P={get bufferSize(){},get channelCount(){return N.channelCount},set channelCount(t){if(t>2)throw i();S.channelCount=t,N.channelCount=t},get channelCountMode(){return N.channelCountMode},set channelCountMode(t){if("max"===t)throw i();S.channelCountMode=t,N.channelCountMode=t},get channelInterpretation(){return N.channelInterpretation},set channelInterpretation(t){S.channelInterpretation=t,N.channelInterpretation=t},get coneInnerAngle(){return N.coneInnerAngle},set coneInnerAngle(t){N.coneInnerAngle=t},get coneOuterAngle(){return N.coneOuterAngle},set coneOuterAngle(t){N.coneOuterAngle=t},get coneOuterGain(){return N.coneOuterGain},set coneOuterGain(t){if(t<0||t>1)throw e();N.coneOuterGain=t},get context(){return N.context},get distanceModel(){return N.distanceModel},set distanceModel(t){N.distanceModel=t},get inputs(){return[S]},get maxDistance(){return N.maxDistance},set maxDistance(t){if(t<0)throw new RangeError;N.maxDistance=t},get numberOfInputs(){return N.numberOfInputs},get numberOfOutputs(){return N.numberOfOutputs},get orientationX(){return $.gain},get orientationY(){return A.gain},get orientationZ(){return E.gain},get panningModel(){return N.panningModel},set panningModel(t){N.panningModel=t},get positionX(){return R.gain},get positionY(){return D.gain},get positionZ(){return O.gain},get refDistance(){return N.refDistance},set refDistance(t){if(t<0)throw new RangeError;N.refDistance=t},get rolloffFactor(){return N.rolloffFactor},set rolloffFactor(t){if(t<0)throw new RangeError;N.rolloffFactor=t},addEventListener:(...t)=>S.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>S.dispatchEvent(t[0]),removeEventListener:(...t)=>S.removeEventListener(t[0],t[1],t[2])};return c!==P.coneInnerAngle&&(P.coneInnerAngle=c),h!==P.coneOuterAngle&&(P.coneOuterAngle=h),p!==P.coneOuterGain&&(P.coneOuterGain=p),d!==P.distanceModel&&(P.distanceModel=d),f!==P.maxDistance&&(P.maxDistance=f),m!==P.orientationX.value&&(P.orientationX.value=m),g!==P.orientationY.value&&(P.orientationY.value=g),y!==P.orientationZ.value&&(P.orientationZ.value=y),b!==P.panningModel&&(P.panningModel=b),x!==P.positionX.value&&(P.positionX.value=x),v!==P.positionY.value&&(P.positionY.value=v),w!==P.positionZ.value&&(P.positionZ.value=w),k!==P.refDistance&&(P.refDistance=k),_!==P.rolloffFactor&&(P.rolloffFactor=_),1===L[0]&&0===L[1]&&0===L[2]||N.setOrientation(...L),0===z[0]&&0===z[1]&&0===z[2]||N.setPosition(...z),l(mF(P,N),(()=>{S.connect(N),t(S,M,0,0),M.connect($).connect(C,0,0),M.connect(A).connect(C,0,1),M.connect(E).connect(C,0,2),M.connect(R).connect(C,0,3),M.connect(D).connect(C,0,4),M.connect(O).connect(C,0,5),C.connect(F).connect(u.destination)}),(()=>{S.disconnect(N),o(S,M,0,0),M.disconnect($),$.disconnect(C),M.disconnect(A),A.disconnect(C),M.disconnect(E),E.disconnect(C),M.disconnect(R),R.disconnect(C),M.disconnect(D),D.disconnect(C),M.disconnect(O),O.disconnect(C),C.disconnect(F),F.disconnect(u.destination)}))})(IO,tF,AM,yF,vF,tL,wF,SO,$M),(t,e)=>{const n=t.createPanner();return void 0===n.orientationX?UL(t,e):(oF(n,e),uF(n,e,"orientationX"),uF(n,e,"orientationY"),uF(n,e,"orientationZ"),uF(n,e,"positionX"),uF(n,e,"positionY"),uF(n,e,"positionZ"),iF(n,e,"coneInnerAngle"),iF(n,e,"coneOuterAngle"),iF(n,e,"coneOuterGain"),iF(n,e,"distanceModel"),iF(n,e,"maxDistance"),iF(n,e,"panningModel"),iF(n,e,"refDistance"),iF(n,e,"rolloffFactor"),n)}),nL=((t,e,n,s,r,a,i,o,l,u)=>()=>{const c=new WeakMap;let h=null;return{render(p,d,f){const m=c.get(d);return void 0!==m?Promise.resolve(m):(async(p,d,f)=>{let m=null,g=a(p);const y={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},b={...y,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},x=aO(g,d);if("bufferSize"in g)m=s(d,{...y,gain:1});else if(!x){const t={...b,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=r(d,t)}if(c.set(d,null===m?g:m),null!==m){if(null===h){if(null===i)throw new Error("Missing the native OfflineAudioContext constructor.");const t=new i(6,p.context.length,d.sampleRate),s=e(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});s.connect(t.destination),h=(async()=>{const e=await Promise.all([p.orientationX,p.orientationY,p.orientationZ,p.positionX,p.positionY,p.positionZ].map((async(e,s)=>{const r=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:0===s?1:0});return await o(t,e,r.offset,f),r})));for(let t=0;t<6;t+=1)e[t].connect(s,0,t),e[t].start(0);return u(t)})()}const t=await h,a=s(d,{...y,gain:1});await l(p,d,a,f);const c=[];for(let e=0;e<t.numberOfChannels;e+=1)c.push(t.getChannelData(e));let g=[c[0][0],c[1][0],c[2][0]],x=[c[3][0],c[4][0],c[5][0]],v=s(d,{...y,gain:1}),w=r(d,{...b,orientationX:g[0],orientationY:g[1],orientationZ:g[2],positionX:x[0],positionY:x[1],positionZ:x[2]});a.connect(v).connect(w.inputs[0]),w.connect(m);for(let e=128;e<t.length;e+=128){const t=[c[0][e],c[1][e],c[2][e]],n=[c[3][e],c[4][e],c[5][e]];if(t.some(((t,e)=>t!==g[e]))||n.some(((t,e)=>t!==x[e]))){g=t,x=n;const i=e/d.sampleRate;v.gain.setValueAtTime(0,i),v=s(d,{...y,gain:0}),w=r(d,{...b,orientationX:g[0],orientationY:g[1],orientationZ:g[2],positionX:x[0],positionY:x[1],positionZ:x[2]}),v.gain.setValueAtTime(1,i),a.connect(v).connect(w.inputs[0]),w.connect(m)}}return m}return x?(await t(d,p.orientationX,g.orientationX,f),await t(d,p.orientationY,g.orientationY,f),await t(d,p.orientationZ,g.orientationZ,f),await t(d,p.positionX,g.positionX,f),await t(d,p.positionY,g.positionY,f),await t(d,p.positionZ,g.positionZ,f)):(await o(d,p.orientationX,g.orientationX,f),await o(d,p.orientationY,g.orientationY,f),await o(d,p.orientationZ,g.orientationZ,f),await o(d,p.positionX,g.positionX,f),await o(d,p.positionY,g.positionY,f),await o(d,p.positionZ,g.positionZ,f)),_O(g)?await l(p,d,g.inputs[0],f):await l(p,d,g,f),g})(p,d,f)}}})(bM,AM,OM,yF,eL,$O,JF,vM,XF,UM),sL=((t,e,n,s,r,a,i)=>class extends t{constructor(t,o){const l=r(t),u={...IF,...o},c=n(l,u),h=a(l);super(t,!1,c,h?s():null),this._nativePannerNode=c,this._orientationX=e(this,h,c.orientationX,hO,cO),this._orientationY=e(this,h,c.orientationY,hO,cO),this._orientationZ=e(this,h,c.orientationZ,hO,cO),this._positionX=e(this,h,c.positionX,hO,cO),this._positionY=e(this,h,c.positionY,hO,cO),this._positionZ=e(this,h,c.positionZ,hO,cO),i(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(t){this._nativePannerNode.coneInnerAngle=t}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(t){this._nativePannerNode.coneOuterAngle=t}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(t){this._nativePannerNode.coneOuterGain=t}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(t){this._nativePannerNode.distanceModel=t}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(t){this._nativePannerNode.maxDistance=t}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(t){this._nativePannerNode.panningModel=t}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(t){this._nativePannerNode.refDistance=t}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(t){this._nativePannerNode.rolloffFactor=t}})(iM,kM,eL,nL,YF,QF,CM),rL=((t,e,n,s)=>class s{constructor(s,r){const a=e(s),i=(t=>{const{imag:e,real:n}=t;return void 0===e?void 0===n?{...t,imag:[0,0],real:[0,0]}:{...t,imag:Array.from(n,(()=>0)),real:n}:void 0===n?{...t,imag:e,real:Array.from(e,(()=>0))}:{...t,imag:e,real:n}})({...NF,...r}),o=t(a,i);return n.add(o),o}static[Symbol.hasInstance](t){return null!==t&&"object"==typeof t&&Object.getPrototypeOf(t)===s.prototype||n.has(t)}})((t=>(e,{disableNormalization:n,imag:s,real:r})=>{const a=s instanceof Float32Array?s:new Float32Array(s),i=r instanceof Float32Array?r:new Float32Array(r),o=e.createPeriodicWave(i,a,{disableNormalization:n});if(Array.from(s).length<2)throw t();return o})(oO),YF,new WeakSet),aL=((t,e)=>(n,s)=>{const r=s.channelCountMode;if("clamped-max"===r)throw e();if(void 0===n.createStereoPanner)return t(n,s);const a=n.createStereoPanner();return oF(a,s),uF(a,s,"pan"),Object.defineProperty(a,"channelCountMode",{get:()=>r,set:t=>{if(t!==r)throw e()}}),a})(((t,e,n,s,r,a)=>{const i=16385,o=new Float32Array([1,1]),l=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},c={...u,oversample:"none"},h=(t,a,h,p,d)=>{if(1===a)return((t,e,r,a)=>{const h=new Float32Array(i),p=new Float32Array(i);for(let t=0;t<i;t+=1){const e=t/16384*l;h[t]=Math.cos(e),p[t]=Math.sin(e)}const d=n(t,{...u,gain:0}),f=s(t,{...c,curve:h}),m=s(t,{...c,curve:o}),g=n(t,{...u,gain:0}),y=s(t,{...c,curve:p});return{connectGraph(){e.connect(d),e.connect(void 0===m.inputs?m:m.inputs[0]),e.connect(g),m.connect(r),r.connect(void 0===f.inputs?f:f.inputs[0]),r.connect(void 0===y.inputs?y:y.inputs[0]),f.connect(d.gain),y.connect(g.gain),d.connect(a,0,0),g.connect(a,0,1)},disconnectGraph(){e.disconnect(d),e.disconnect(void 0===m.inputs?m:m.inputs[0]),e.disconnect(g),m.disconnect(r),r.disconnect(void 0===f.inputs?f:f.inputs[0]),r.disconnect(void 0===y.inputs?y:y.inputs[0]),f.disconnect(d.gain),y.disconnect(g.gain),d.disconnect(a,0,0),g.disconnect(a,0,1)}}})(t,h,p,d);if(2===a)return((t,r,a,h)=>{const p=new Float32Array(i),d=new Float32Array(i),f=new Float32Array(i),m=new Float32Array(i),g=Math.floor(8192.5);for(let t=0;t<i;t+=1)if(t>g){const e=(t-g)/(16384-g)*l;p[t]=Math.cos(e),d[t]=Math.sin(e),f[t]=0,m[t]=1}else{const e=t/(16384-g)*l;p[t]=1,d[t]=0,f[t]=Math.cos(e),m[t]=Math.sin(e)}const y=e(t,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),b=n(t,{...u,gain:0}),x=s(t,{...c,curve:p}),v=n(t,{...u,gain:0}),w=s(t,{...c,curve:d}),k=s(t,{...c,curve:o}),_=n(t,{...u,gain:0}),I=s(t,{...c,curve:f}),N=n(t,{...u,gain:0}),T=s(t,{...c,curve:m});return{connectGraph(){r.connect(y),r.connect(void 0===k.inputs?k:k.inputs[0]),y.connect(b,0),y.connect(v,0),y.connect(_,1),y.connect(N,1),k.connect(a),a.connect(void 0===x.inputs?x:x.inputs[0]),a.connect(void 0===w.inputs?w:w.inputs[0]),a.connect(void 0===I.inputs?I:I.inputs[0]),a.connect(void 0===T.inputs?T:T.inputs[0]),x.connect(b.gain),w.connect(v.gain),I.connect(_.gain),T.connect(N.gain),b.connect(h,0,0),_.connect(h,0,0),v.connect(h,0,1),N.connect(h,0,1)},disconnectGraph(){r.disconnect(y),r.disconnect(void 0===k.inputs?k:k.inputs[0]),y.disconnect(b,0),y.disconnect(v,0),y.disconnect(_,1),y.disconnect(N,1),k.disconnect(a),a.disconnect(void 0===x.inputs?x:x.inputs[0]),a.disconnect(void 0===w.inputs?w:w.inputs[0]),a.disconnect(void 0===I.inputs?I:I.inputs[0]),a.disconnect(void 0===T.inputs?T:T.inputs[0]),x.disconnect(b.gain),w.disconnect(v.gain),I.disconnect(_.gain),T.disconnect(N.gain),b.disconnect(h,0,0),_.disconnect(h,0,0),v.disconnect(h,0,1),N.disconnect(h,0,1)}}})(t,h,p,d);throw r()};return(e,{channelCount:s,channelCountMode:i,pan:o,...l})=>{if("max"===i)throw r();const u=t(e,{...l,channelCount:1,channelCountMode:i,numberOfInputs:2}),c=n(e,{...l,channelCount:s,channelCountMode:i,gain:1}),p=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:o});let{connectGraph:d,disconnectGraph:f}=h(e,s,c,p,u);Object.defineProperty(p.gain,"defaultValue",{get:()=>0}),Object.defineProperty(p.gain,"maxValue",{get:()=>1}),Object.defineProperty(p.gain,"minValue",{get:()=>-1});const m={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(t){c.channelCount!==t&&(g&&f(),({connectGraph:d,disconnectGraph:f}=h(e,t,c,p,u)),g&&d()),c.channelCount=t},get channelCountMode(){return c.channelCountMode},set channelCountMode(t){if("clamped-max"===t||"max"===t)throw r();c.channelCountMode=t},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(t){c.channelInterpretation=t},get context(){return c.context},get inputs(){return[c]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get pan(){return p.gain},addEventListener:(...t)=>c.addEventListener(t[0],t[1],t[2]),dispatchEvent:(...t)=>c.dispatchEvent(t[0]),removeEventListener:(...t)=>c.removeEventListener(t[0],t[1],t[2])};let g=!1;return a(mF(m,u),(()=>{d(),g=!0}),(()=>{f(),g=!1}))}})(AM,fF,yF,tL,wF,$M),wF),iL=((t,e,n,s,r)=>()=>{const a=new WeakMap;return{render(i,o,l){const u=a.get(o);return void 0!==u?Promise.resolve(u):(async(i,o,l)=>{let u=n(i);const c=aO(u,o);if(!c){const t={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=e(o,t)}return a.set(o,u),c?await t(o,i.pan,u.pan,l):await s(o,i.pan,u.pan,l),_O(u)?await r(i,o,u.inputs[0],l):await r(i,o,u,l),u})(i,o,l)}}})(bM,aL,$O,vM,XF),oL=((t,e,n,s,r,a)=>class extends t{constructor(t,i){const o=r(t),l={...TF,...i},u=n(o,l),c=a(o);super(t,!1,u,c?s():null),this._pan=e(this,c,u.pan)}get pan(){return this._pan}})(iM,kM,aL,iL,YF,QF),lL=((t,e,n)=>()=>{const s=new WeakMap;return{render(r,a,i){const o=s.get(a);return void 0!==o?Promise.resolve(o):(async(r,a,i)=>{let o=e(r);if(!aO(o,a)){const e={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,curve:o.curve,oversample:o.oversample};o=t(a,e)}return s.set(a,o),_O(o)?await n(r,a,o.inputs[0],i):await n(r,a,o,i),o})(r,a,i)}}})(tL,$O,XF),uL=((t,e,n,s,r,a,i)=>class extends t{constructor(t,e){const o=r(t),l={...SF,...e},u=n(o,l);super(t,!0,u,a(o)?s():null),this._isCurveNullified=!1,this._nativeWaveShaperNode=u,i(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(t){if(null===t)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(t.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=t}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(t){this._nativeWaveShaperNode.oversample=t}})(iM,tF,tL,lL,YF,QF,CM),cL=(t=>null!==t&&t.isSecureContext)(jF),hL=(t=>(e,n,s)=>{Object.defineProperties(t,{currentFrame:{configurable:!0,get:()=>Math.round(e*n)},currentTime:{configurable:!0,get:()=>e}});try{return s()}finally{null!==t&&(delete t.currentFrame,delete t.currentTime)}})(jF),pL=new WeakMap,dL=((t,e)=>n=>{let s=t.get(n);if(void 0!==s)return s;if(null===e)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new e(1,1,8e3),t.set(n,s),s})(pL,JF),fL=(t=>null===t?null:t.hasOwnProperty("AudioWorkletNode")?t.AudioWorkletNode:null)(jF),mL=cL?((t,e,n,s,r,a,i,o,l,u,c,h)=>(p,d,f={credentials:"omit"})=>{const m=a(p);if(void 0!==m.audioWorklet)return Promise.all([r(d),Promise.resolve(t(c,c))]).then((([[t,e],n])=>{const[s,r]=qD(t,e),a=n?r:r.replace(/\s+extends\s+AudioWorkletProcessor\s*{/," extends (class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}){"),l=new Blob([`${s};(registerProcessor=>{${a}\n})((n,p)=>registerProcessor(n,class extends p{${n?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${n?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`],{type:"application/javascript; charset=utf-8"}),u=URL.createObjectURL(l);return m.audioWorklet.addModule(u,f).then((()=>{if(!o(m))return i(m).audioWorklet.addModule(u,f)})).finally((()=>URL.revokeObjectURL(u)))}));const g=u.get(p);if(void 0!==g&&g.has(d))return Promise.resolve();const y=l.get(p);if(void 0!==y){const t=y.get(d);if(void 0!==t)return t}const b=r(d).then((([t,e])=>{const[s,r]=qD(t,e);return n(`${s};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${r}\n})})(window,'_AWGS')`)})).then((()=>{const t=h._AWGS.pop();if(void 0===t)throw new SyntaxError;s(m.currentTime,m.sampleRate,(()=>t(class{},void 0,((t,n)=>{if(""===t.trim())throw e();const s=UD.get(m);if(void 0!==s){if(s.has(t))throw e();KD(n),XD(n.parameterDescriptors),s.set(t,n)}else KD(n),XD(n.parameterDescriptors),UD.set(m,new Map([[t,n]]))}),m.sampleRate,void 0,void 0)))}));return void 0===y?l.set(p,new Map([[d,b]])):y.set(d,b),b.then((()=>{const t=u.get(p);void 0===t?u.set(p,new Set([d])):t.add(d)})).finally((()=>{const t=l.get(p);void 0!==t&&t.delete(d)})),b})(WF,wF,(t=>e=>new Promise(((n,s)=>{if(null===t)return void s(new SyntaxError);const r=t.document.head;if(null===r)s(new SyntaxError);else{const a=t.document.createElement("script"),i=new Blob([e],{type:"application/javascript"}),o=URL.createObjectURL(i),l=t.onerror,u=()=>{t.onerror=l,URL.revokeObjectURL(o)};t.onerror=(e,n,r,a,i)=>n===o||n===t.location.href&&1===r&&1===a?(u(),s(i),!1):null!==l?l(e,n,r,a,i):void 0,a.onerror=()=>{u(),s(new SyntaxError)},a.onload=()=>{u(),n()},a.src=o,a.type="module",r.appendChild(a)}})))(jF),hL,(async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw new DOMException("","AbortError")}),YF,dL,QF,new WeakMap,new WeakMap,((t,e)=>async()=>{if(null===t)return!0;if(null===e)return!1;const n=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new e(1,128,8e3),r=URL.createObjectURL(n);let a=!1,i=!1;try{await s.audioWorklet.addModule(r);const e=new t(s,"a",{numberOfOutputs:0}),n=s.createOscillator();e.port.onmessage=()=>a=!0,e.onprocessorerror=()=>i=!0,n.connect(e),await s.startRendering()}catch{}finally{URL.revokeObjectURL(r)}return a&&!i})(fL,JF),jF):void 0,gL=((t,e)=>n=>t(n)||e(n))(sM,QF),yL=((t,e,n,s,r,a,i,o,l,u,c,h,p,d,f,m,g,y,b,x)=>class extends f{constructor(e,n){super(e,n),this._nativeContext=e,this._audioWorklet=void 0===t?void 0:{addModule:(e,n)=>t(this,e,n)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new r(this)}createBuffer(t,e,s){return new n({length:e,numberOfChannels:t,sampleRate:s})}createBufferSource(){return new s(this)}createChannelMerger(t=6){return new a(this,{numberOfInputs:t})}createChannelSplitter(t=6){return new i(this,{numberOfOutputs:t})}createConstantSource(){return new o(this)}createConvolver(){return new l(this)}createDelay(t=1){return new c(this,{maxDelayTime:t})}createDynamicsCompressor(){return new h(this)}createGain(){return new p(this)}createIIRFilter(t,e){return new d(this,{feedback:e,feedforward:t})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(t,e,n={disableNormalization:!1}){return new y(this,{...n,imag:e,real:t})}createStereoPanner(){return new b(this)}createWaveShaper(){return new x(this)}decodeAudioData(t,e,n){return u(this._nativeContext,t).then((t=>("function"==typeof e&&e(t),t))).catch((t=>{throw"function"==typeof n&&n(t),t}))}})(mL,lM,mM,IM,SM,EM,RM,FM,LM,((t,e,n,s,r,a,i,o,l,u,c)=>(n,s)=>{const h=i(n)?n:a(n);if(r.has(s)){const t=new DOMException("","DataCloneError");return Promise.reject(t)}try{r.add(s)}catch{}return e(l,(()=>l(h)))?h.decodeAudioData(s).then((n=>(e(o,(()=>o(n)))||c(n),t.add(n),n))):new Promise(((e,n)=>{const r=async()=>{try{await(t=>{const{port1:e,port2:n}=new MessageChannel;return new Promise((s=>{n.onmessage=()=>{e.close(),n.close(),s()},e.postMessage(t,[t])}))})(s)}catch{}},a=t=>{n(t),r()};try{h.decodeAudioData(s,(n=>{"function"!=typeof n.copyFromChannel&&(u(n),lO(n)),t.add(n),r().then((()=>e(n)))}),(t=>{a(null===t?new DOMException("","EncodingError"):t)}))}catch(t){a(t)}}))})(uM,WF,0,0,new WeakSet,YF,gL,iO,aF,dM,fM),zM,VM,BM,jM,XM,ZM,sL,rL,oL,uL),bL=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t),a=((t,e)=>t.createMediaElementSource(e.mediaElement))(r,e);if(s(r))throw TypeError();super(t,!0,a,null),this._nativeMediaElementAudioSourceNode=a}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}})(iM,0,YF,QF),xL=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t);if(s(r))throw new TypeError;const a=((t,e)=>{const n=t.createMediaStreamDestination();return oF(n,e),1===n.numberOfOutputs&&Object.defineProperty(n,"numberOfOutputs",{get:()=>0}),n})(r,{...rF,...e});super(t,!1,a,null),this._nativeMediaStreamAudioDestinationNode=a}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}})(iM,0,YF,QF),vL=((t,e,n,s)=>class extends t{constructor(t,e){const r=n(t),a=((t,{mediaStream:e})=>{const n=e.getAudioTracks();n.sort(((t,e)=>t.id<e.id?-1:t.id>e.id?1:0));const s=n.slice(0,1),r=t.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(r,"mediaStream",{value:e}),r})(r,e);if(s(r))throw new TypeError;super(t,!0,a,null),this._nativeMediaStreamAudioSourceNode=a}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}})(iM,0,YF,QF),wL=((t,e,n)=>class extends t{constructor(t,s){const r=n(t);super(t,!0,e(r,s),null)}})(iM,((t,e)=>(n,{mediaStreamTrack:s})=>{if("function"==typeof n.createMediaStreamTrackSource)return n.createMediaStreamTrackSource(s);const r=new MediaStream([s]),a=n.createMediaStreamSource(r);if("audio"!==s.kind)throw t();if(e(n))throw new TypeError;return a})(tF,QF),YF),kL=((t,e,n,s,r,a,i,o,l)=>class extends t{constructor(t={}){if(null===l)throw new Error("Missing the native AudioContext constructor.");const e=new l(t);if(null===e)throw s();if(!(t=>void 0===t||"number"==typeof t||"string"==typeof t&&("balanced"===t||"interactive"===t||"playback"===t))(t.latencyHint))throw new TypeError(`The provided value '${t.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(void 0!==t.sampleRate&&e.sampleRate!==t.sampleRate)throw n();super(e,2);const{latencyHint:r}=t,{sampleRate:a}=e;if(this._baseLatency="number"==typeof e.baseLatency?e.baseLatency:"balanced"===r?512/a:"interactive"===r||void 0===r?256/a:"playback"===r?1024/a:128*Math.max(2,Math.min(128,Math.round(r*a/128)))/a,this._nativeAudioContext=e,"webkitAudioContext"===l.name?(this._nativeGainNode=e.createGain(),this._nativeOscillatorNode=e.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(e.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,"running"===e.state){this._state="suspended";const t=()=>{"suspended"===this._state&&(this._state=null),e.removeEventListener("statechange",t)};e.addEventListener("statechange",t)}}get baseLatency(){return this._baseLatency}get state(){return null!==this._state?this._state:this._nativeAudioContext.state}close(){return"closed"===this.state?this._nativeAudioContext.close().then((()=>{throw e()})):("suspended"===this._state&&(this._state=null),this._nativeAudioContext.close().then((()=>{null!==this._nativeGainNode&&null!==this._nativeOscillatorNode&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),yO(this)})))}createMediaElementSource(t){return new r(this,{mediaElement:t})}createMediaStreamDestination(){return new a(this)}createMediaStreamSource(t){return new i(this,{mediaStream:t})}createMediaStreamTrackSource(t){return new o(this,{mediaStreamTrack:t})}resume(){return"suspended"===this._state?new Promise(((t,e)=>{const n=()=>{this._nativeAudioContext.removeEventListener("statechange",n),"running"===this._nativeAudioContext.state?t():this.resume().then(t,e)};this._nativeAudioContext.addEventListener("statechange",n)})):this._nativeAudioContext.resume().catch((t=>{if(void 0===t||15===t.code)throw e();throw t}))}suspend(){return this._nativeAudioContext.suspend().catch((t=>{if(void 0===t)throw e();throw t}))}})(yL,tF,wF,CF,bL,xL,vL,wL,nM),_L=(t=>e=>{const n=t.get(e);if(void 0===n)throw new Error("The context has no set of AudioWorkletNodes.");return n})(qM),IL=(t=>(e,n)=>{t(e).add(n)})(_L),NL=(t=>(e,n,s=0,r=0)=>{const a=e[s];if(void 0===a)throw t();return FO(n)?a.connect(n,0,r):a.connect(n,0)})(oO),TL=(t=>(e,n)=>{t(e).delete(n)})(_L),CL=(t=>(e,n,s,r=0)=>void 0===n?e.forEach((t=>t.disconnect())):"number"==typeof n?ZO(t,e,n).disconnect():FO(n)?void 0===s?e.forEach((t=>t.disconnect(n))):void 0===r?ZO(t,e,s).disconnect(n,0):ZO(t,e,s).disconnect(n,0,r):void 0===s?e.forEach((t=>t.disconnect(n))):ZO(t,e,s).disconnect(n,0))(oO),SL=new WeakMap,$L=((t,e)=>n=>e(t,n))(SL,YD),AL=((t,e,n,s,r,a,i,o,l,u,c,h,p)=>(d,f,m,g)=>{if(0===g.numberOfInputs&&0===g.numberOfOutputs)throw l();const y=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(y.some((t=>t<1)))throw l();if(y.length!==g.numberOfOutputs)throw e();if("explicit"!==g.channelCountMode)throw l();const b=g.channelCount*g.numberOfInputs,x=y.reduce(((t,e)=>t+e),0),v=void 0===m.parameterDescriptors?0:m.parameterDescriptors.length;if(b+v>6||x>6)throw l();const w=new MessageChannel,k=[],_=[];for(let t=0;t<g.numberOfInputs;t+=1)k.push(i(d,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),_.push(r(d,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const I=[];if(void 0!==m.parameterDescriptors)for(const{defaultValue:t,maxValue:e,minValue:n,name:s}of m.parameterDescriptors){const r=a(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:void 0!==g.parameterData[s]?g.parameterData[s]:void 0===t?0:t});Object.defineProperties(r.offset,{defaultValue:{get:()=>void 0===t?0:t},maxValue:{get:()=>void 0===e?hO:e},minValue:{get:()=>void 0===n?cO:n}}),I.push(r)}const N=s(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,b+v)}),T=pF(f,d.sampleRate),C=o(d,T,b+v,Math.max(1,x)),S=r(d,{channelCount:Math.max(1,x),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,x)}),$=[];for(let t=0;t<g.numberOfOutputs;t+=1)$.push(s(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[t]}));for(let t=0;t<g.numberOfInputs;t+=1){k[t].connect(_[t]);for(let e=0;e<g.channelCount;e+=1)_[t].connect(N,e,t*g.channelCount+e)}const A=new PO(void 0===m.parameterDescriptors?[]:m.parameterDescriptors.map((({name:t},e)=>{const n=I[e];return n.connect(N,0,b+e),n.start(0),[t,n.offset]})));N.connect(C);let E=g.channelInterpretation,R=null;const D=0===g.numberOfOutputs?[C]:$,O={get bufferSize(){return T},get channelCount(){return g.channelCount},set channelCount(t){throw n()},get channelCountMode(){return g.channelCountMode},set channelCountMode(t){throw n()},get channelInterpretation(){return E},set channelInterpretation(t){for(const e of k)e.channelInterpretation=t;E=t},get context(){return C.context},get inputs(){return k},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return R},set onprocessorerror(t){"function"==typeof R&&O.removeEventListener("processorerror",R),R="function"==typeof t?t:null,"function"==typeof R&&O.addEventListener("processorerror",R)},get parameters(){return A},get port(){return w.port2},addEventListener:(...t)=>C.addEventListener(t[0],t[1],t[2]),connect:t.bind(null,D),disconnect:u.bind(null,D),dispatchEvent:(...t)=>C.dispatchEvent(t[0]),removeEventListener:(...t)=>C.removeEventListener(t[0],t[1],t[2])},F=new Map;var M,L;w.port1.addEventListener=(M=w.port1.addEventListener,(...t)=>{if("message"===t[0]){const e="function"==typeof t[1]?t[1]:"object"==typeof t[1]&&null!==t[1]&&"function"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const n=F.get(t[1]);void 0!==n?t[1]=n:(t[1]=t=>{c(d.currentTime,d.sampleRate,(()=>e(t)))},F.set(e,t[1]))}}return M.call(w.port1,t[0],t[1],t[2])}),w.port1.removeEventListener=(L=w.port1.removeEventListener,(...t)=>{if("message"===t[0]){const e=F.get(t[1]);void 0!==e&&(F.delete(t[1]),t[1]=e)}return L.call(w.port1,t[0],t[1],t[2])});let z=null;Object.defineProperty(w.port1,"onmessage",{get:()=>z,set:t=>{"function"==typeof z&&w.port1.removeEventListener("message",z),z="function"==typeof t?t:null,"function"==typeof z&&(w.port1.addEventListener("message",z),w.port1.start())}}),m.prototype.port=w.port1;let P=null;((t,e,n,s)=>{let r=GD.get(t);void 0===r&&(r=new WeakMap,GD.set(t,r));const a=(async(t,e)=>new t(await(t=>new Promise(((e,n)=>{const{port1:s,port2:r}=new MessageChannel;s.onmessage=({data:t})=>{s.close(),r.close(),e(t)},s.onmessageerror=({data:t})=>{s.close(),r.close(),n(t)},r.postMessage(t)})))(e)))(n,s);return r.set(e,a),a})(d,O,m,g).then((t=>P=t));const V=UO(g.numberOfInputs,g.channelCount),B=UO(g.numberOfOutputs,y),W=void 0===m.parameterDescriptors?[]:m.parameterDescriptors.reduce(((t,{name:e})=>({...t,[e]:new Float32Array(128)})),{});let U=!0;const G=()=>{g.numberOfOutputs>0&&C.disconnect(S);for(let t=0,e=0;t<g.numberOfOutputs;t+=1){const n=$[t];for(let s=0;s<y[t];s+=1)S.disconnect(n,e+s,s);e+=y[t]}},j=new Map;C.onaudioprocess=({inputBuffer:t,outputBuffer:e})=>{if(null!==P){const n=h(O);for(let s=0;s<T;s+=128){for(let e=0;e<g.numberOfInputs;e+=1)for(let n=0;n<g.channelCount;n+=1)BO(t,V[e],n,n,s);void 0!==m.parameterDescriptors&&m.parameterDescriptors.forEach((({name:e},n)=>{BO(t,W,e,b+n,s)}));for(let t=0;t<g.numberOfInputs;t+=1)for(let e=0;e<y[t];e+=1)0===B[t][e].byteLength&&(B[t][e]=new Float32Array(128));try{const t=V.map(((t,e)=>{if(n[e].size>0)return j.set(e,T/128),t;const s=j.get(e);return void 0===s?[]:(t.every((t=>t.every((t=>0===t))))&&(1===s?j.delete(e):j.set(e,s-1)),t)})),r=c(d.currentTime+s/d.sampleRate,d.sampleRate,(()=>P.process(t,B,W)));U=r;for(let t=0,n=0;t<g.numberOfOutputs;t+=1){for(let r=0;r<y[t];r+=1)WO(e,B[t],r,n+r,s);n+=y[t]}}catch(t){U=!1,O.dispatchEvent(new ErrorEvent("processorerror",{colno:t.colno,filename:t.filename,lineno:t.lineno,message:t.message}))}if(!U){for(let t=0;t<g.numberOfInputs;t+=1){k[t].disconnect(_[t]);for(let e=0;e<g.channelCount;e+=1)_[s].disconnect(N,e,t*g.channelCount+e)}if(void 0!==m.parameterDescriptors){const t=m.parameterDescriptors.length;for(let e=0;e<t;e+=1){const t=I[e];t.disconnect(N,0,b+e),t.stop()}}N.disconnect(C),C.onaudioprocess=null,H?G():K();break}}}};let H=!1;const q=i(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),X=()=>C.connect(q).connect(d.destination),K=()=>{C.disconnect(q),q.disconnect()};return X(),p(O,(()=>{if(U){K(),g.numberOfOutputs>0&&C.connect(S);for(let t=0,e=0;t<g.numberOfOutputs;t+=1){const n=$[t];for(let s=0;s<y[t];s+=1)S.connect(n,e+s,s);e+=y[t]}}H=!0}),(()=>{U&&(X(),G()),H=!1}))})(NL,oO,tF,AM,fF,OM,yF,vF,wF,CL,hL,$L,$M),EL=((t,e,n,s,r)=>(a,i,o,l,u,c)=>{if(null!==o)try{const e=new o(a,l,c),s=new Map;let i=null;if(Object.defineProperties(e,{channelCount:{get:()=>c.channelCount,set:()=>{throw t()}},channelCountMode:{get:()=>"explicit",set:()=>{throw t()}},onprocessorerror:{get:()=>i,set:t=>{"function"==typeof i&&e.removeEventListener("processorerror",i),i="function"==typeof t?t:null,"function"==typeof i&&e.addEventListener("processorerror",i)}}}),e.addEventListener=(p=e.addEventListener,(...t)=>{if("processorerror"===t[0]){const e="function"==typeof t[1]?t[1]:"object"==typeof t[1]&&null!==t[1]&&"function"==typeof t[1].handleEvent?t[1].handleEvent:null;if(null!==e){const n=s.get(t[1]);void 0!==n?t[1]=n:(t[1]=n=>{"error"===n.type?(Object.defineProperties(n,{type:{value:"processorerror"}}),e(n)):e(new ErrorEvent(t[0],{...n}))},s.set(e,t[1]))}}return p.call(e,"error",t[1],t[2]),p.call(e,...t)}),e.removeEventListener=(h=e.removeEventListener,(...t)=>{if("processorerror"===t[0]){const e=s.get(t[1]);void 0!==e&&(s.delete(t[1]),t[1]=e)}return h.call(e,"error",t[1],t[2]),h.call(e,t[0],t[1],t[2])}),0!==c.numberOfOutputs){const t=n(a,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return e.connect(t).connect(a.destination),r(e,(()=>t.disconnect()),(()=>t.connect(a.destination)))}return e}catch(t){if(11===t.code)throw s();throw t}var h,p;if(void 0===u)throw s();return(t=>{const{port1:e}=new MessageChannel;try{e.postMessage(t)}finally{e.close()}})(c),e(a,i,u,c)})(tF,AL,yF,wF,$M),RL=((t,e,n,s,r,a,i,o,l,u,c,h,p,d,f,m)=>(g,y,b)=>{const x=new WeakMap;let v=null;return{render(w,k,_){o(k,w);const I=x.get(k);return void 0!==I?Promise.resolve(I):(async(o,w,k)=>{let _=c(o),I=null;const N=aO(_,w),T=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(null===h){const t=T.reduce(((t,e)=>t+e),0),n=r(w,{channelCount:Math.max(1,t),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,t)}),a=[];for(let t=0;t<o.numberOfOutputs;t+=1)a.push(s(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:T[t]}));const u=i(w,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});u.connect=e.bind(null,a),u.disconnect=l.bind(null,a),I=[n,a,u]}else N||(_=new h(w,g));if(x.set(w,null===I?_:I[2]),null!==I){if(null===v){if(void 0===b)throw new Error("Missing the processor constructor.");if(null===p)throw new Error("Missing the native OfflineAudioContext constructor.");const t=o.channelCount*o.numberOfInputs,e=void 0===b.parameterDescriptors?0:b.parameterDescriptors.length,n=t+e,l=async()=>{const l=new p(n,128*Math.ceil(o.context.length/128),w.sampleRate),u=[],c=[];for(let t=0;t<y.numberOfInputs;t+=1)u.push(i(l,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),c.push(r(l,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const h=await Promise.all(Array.from(o.parameters.values()).map((async t=>{const e=a(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:t.value});return await d(l,t,e.offset,k),e}))),g=s(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,t+e)});for(let t=0;t<y.numberOfInputs;t+=1){u[t].connect(c[t]);for(let e=0;e<y.channelCount;e+=1)c[t].connect(g,e,t*y.channelCount+e)}for(const[e,n]of h.entries())n.connect(g,0,t+e),n.start(0);return g.connect(l.destination),await Promise.all(u.map((t=>f(o,l,t,k)))),m(l)};v=GO(o,0===n?null:await l(),w,y,T,b,u)}const t=await v,e=n(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[l,c,h]=I;null!==t&&(e.buffer=t,e.start(0)),e.connect(l);for(let t=0,e=0;t<o.numberOfOutputs;t+=1){const n=c[t];for(let s=0;s<T[t];s+=1)l.connect(n,e+s,s);e+=T[t]}return h}if(N)for(const[e,n]of o.parameters.entries())await t(w,n,_.parameters.get(e),k);else for(const[t,e]of o.parameters.entries())await d(w,e,_.parameters.get(t),k);return await f(o,w,_,k),_})(w,k,_)}}})(bM,NL,xM,AM,fF,OM,yF,TL,CL,hL,$O,fL,JF,vM,XF,UM),DL=(t=>e=>t.get(e))(pL),OL=(t=>(e,n)=>{t.set(e,n)})(SL),FL=cL?((t,e,n,s,r,a,i,o,l,u,c,h,p)=>class extends e{constructor(e,c,p){var d;const f=o(e),m=l(f),g=(t=>({...t,outputChannelCount:void 0!==t.outputChannelCount?t.outputChannelCount:1===t.numberOfInputs&&1===t.numberOfOutputs?[t.channelCount]:Array.from({length:t.numberOfOutputs},(()=>1))}))({...VO,...p}),y=UD.get(f),b=null==y?void 0:y.get(c),x=m||"closed"!==f.state?f:null!==(d=i(f))&&void 0!==d?d:f,v=r(x,m?null:e.baseLatency,u,c,b,g);super(e,!0,v,m?s(c,g,b):null);const w=[];v.parameters.forEach(((t,e)=>{const s=n(this,m,t);w.push([e,s])})),this._nativeAudioWorkletNode=v,this._onprocessorerror=null,this._parameters=new PO(w),m&&t(f,this);const{activeInputs:k}=a(this);h(v,k)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(t){const e="function"==typeof t?p(this,t):null;this._nativeAudioWorkletNode.onprocessorerror=e;const n=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=null!==n&&n===e?t:n}get parameters(){return null===this._parameters?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}})(IL,iM,kM,RL,EL,fO,DL,YF,QF,fL,0,OL,MF):void 0,ML=((t,e)=>(n,s,r)=>{if(null===e)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(n,s,r)}catch(e){if("SyntaxError"===e.name)throw t();throw e}})(wF,JF),LL=((t,e,n,s,r,a,i,o)=>{const l=[];return(u,c)=>n(u).render(u,c,l).then((()=>Promise.all(Array.from(s(c)).map((t=>n(t).render(t,c,l)))))).then((()=>r(c))).then((n=>("function"!=typeof n.copyFromChannel?(i(n),lO(n)):e(a,(()=>a(n)))||o(n),t.add(n),n)))})(uM,WF,qF,_L,UM,iO,dM,fM),zL=((t,e,n,s,r)=>class extends t{constructor(t,n,r){let a;if("number"==typeof t&&void 0!==n&&void 0!==r)a={length:n,numberOfChannels:t,sampleRate:r};else{if("object"!=typeof t)throw new Error("The given parameters are not valid.");a=t}const{length:i,numberOfChannels:o,sampleRate:l}={...kF,...a},u=s(o,i,l);e(aF,(()=>aF(u)))||u.addEventListener("statechange",(()=>{let t=0;const e=n=>{"running"===this._state&&(t>0?(u.removeEventListener("statechange",e),n.stopImmediatePropagation(),this._waitForThePromiseToSettle(n)):t+=1)};return e})()),super(u,o),this._length=i,this._nativeOfflineAudioContext=u,this._state=null}get length(){return void 0===this._nativeOfflineAudioContext.length?this._length:this._nativeOfflineAudioContext.length}get state(){return null===this._state?this._nativeOfflineAudioContext.state:this._state}startRendering(){return"running"===this._state?Promise.reject(n()):(this._state="running",r(this.destination,this._nativeOfflineAudioContext).finally((()=>{this._state=null,yO(this)})))}_waitForThePromiseToSettle(t){null===this._state?this._nativeOfflineAudioContext.dispatchEvent(t):setTimeout((()=>this._waitForThePromiseToSettle(t)))}})(yL,WF,tF,ML,LL),PL=((t,e)=>n=>{const s=t.get(n);return e(s)||e(n)})(VD,sM),VL=((t,e)=>n=>t.has(n)||e(n))(LD,rM),BL=((t,e)=>n=>t.has(n)||e(n))(PD,aM),WL=((t,e)=>n=>{const s=t.get(n);return e(s)||e(n)})(VD,QF);var UL;function GL(t,e){if(!t)throw new Error(e)}function jL(t,e,n=1/0){if(!(e<=t&&t<=n))throw new RangeError(`Value must be within [${e}, ${n}], got: ${t}`)}function HL(t){t.isOffline||"running"===t.state||XL('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let qL=console;function XL(...t){qL.warn(...t)}function KL(t){return void 0===t}function YL(t){return!KL(t)}function ZL(t){return"number"==typeof t}function JL(t){return"[object Object]"===Object.prototype.toString.call(t)&&t.constructor===Object}function QL(t){return Array.isArray(t)}function tz(t){return"string"==typeof t}function ez(t){return tz(t)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(t)}const nz="object"==typeof self?self:null,sz=nz&&(nz.hasOwnProperty("AudioContext")||nz.hasOwnProperty("webkitAudioContext"));function rz(t,e,n,s){var r,a=arguments.length,i=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var o=t.length-1;o>=0;o--)(r=t[o])&&(i=(a<3?r(i):a>3?r(e,n,i):r(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i}function az(t,e,n,s){return new(n||(n=Promise))((function(r,a){function i(t){try{l(s.next(t))}catch(t){a(t)}}function o(t){try{l(s.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}l((s=s.apply(t,e||[])).next())}))}Object.create,Object.create;class iz{constructor(t,e,n){this._callback=t,this._type=e,this._updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout((()=>{this._createTimeout(),this._callback()}),1e3*this._updateInterval)}_createClock(){if("worker"===this._type)try{this._createWorker()}catch(t){this._type="timeout",this._createClock()}else"timeout"===this._type&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){this._updateInterval=Math.max(t,128/44100),"worker"===this._type&&this._worker.postMessage(Math.max(1e3*t,1))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function oz(t){return BL(t)}function lz(t){return VL(t)}function uz(t){return WL(t)}function cz(t){return PL(t)}function hz(t){return t instanceof AudioBuffer}function pz(t,e){return"value"===t||oz(e)||lz(e)||hz(e)}function dz(t,...e){if(!e.length)return t;const n=e.shift();if(JL(t)&&JL(n))for(const e in n)pz(e,n[e])?t[e]=n[e]:JL(n[e])?(t[e]||Object.assign(t,{[e]:{}}),dz(t[e],n[e])):Object.assign(t,{[e]:n[e]});return dz(t,...e)}function fz(t,e,n=[],s){const r={},a=Array.from(e);if(JL(a[0])&&s&&!Reflect.has(a[0],s)&&(Object.keys(a[0]).some((e=>Reflect.has(t,e)))||(dz(r,{[s]:a[0]}),n.splice(n.indexOf(s),1),a.shift())),1===a.length&&JL(a[0]))dz(r,a[0]);else for(let t=0;t<n.length;t++)YL(a[t])&&(r[n[t]]=a[t]);return dz(t,r)}function mz(t,e){return KL(t)?e:t}function gz(t,e){return e.forEach((e=>{Reflect.has(t,e)&&delete t[e]})),t}class yz{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||nz&&this.toString()===nz.TONE_DEBUG_CLASS)&&function(...t){qL.log(...t)}(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}yz.version="14.7.77";const bz=1e-6;function xz(t,e){return t>e+bz}function vz(t,e){return xz(t,e)||kz(t,e)}function wz(t,e){return t+bz<e}function kz(t,e){return Math.abs(t-e)<bz}class _z extends yz{constructor(){super(),this.name="Timeline",this._timeline=[];const t=fz(_z.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(GL(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];GL(vz(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(t){const e=this._timeline.indexOf(t);return-1!==e&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return-1!==n?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(kz(this._timeline[e].time,t)){for(let n=e;n>=0&&kz(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else 1===this._timeline.length&&vz(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(0===this._timeline.length)return-1;let n=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][e]<=t)return s-1;for(;n<r;){let s=Math.floor(n+(r-n)/2);const a=this._timeline[s],i=this._timeline[s+1];if(kz(a[e],t)){for(let n=s;n<this._timeline.length&&kz(this._timeline[n][e],t);n++)s=n;return s}if(wz(a[e],t)&&xz(i[e],t))return s;xz(a[e],t)?r=s:n=s+1}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return-1!==n&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let s=this._search(t),r=this._search(e);return-1!==s&&-1!==r?(this._timeline[s].time!==t&&(s+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,s,r)):-1===s&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(-1!==n&&kz(this._timeline[n].time,t)){let s=n;for(let e=n;e>=0&&kz(this._timeline[e].time,t);e--)s=e;this._iterate((t=>{e(t)}),s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Iz=[];function Nz(t){Iz.push(t)}const Tz=[];function Cz(t){Tz.push(t)}class Sz extends yz{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach((t=>{KL(this._events)&&(this._events={}),this._events.hasOwnProperty(t)||(this._events[t]=[]),this._events[t].push(e)})),this}once(t,e){const n=(...s)=>{e(...s),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach((n=>{if(KL(this._events)&&(this._events={}),this._events.hasOwnProperty(t))if(KL(e))this._events[t]=[];else{const n=this._events[t];for(let t=n.length-1;t>=0;t--)n[t]===e&&n.splice(t,1)}})),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let t=0,s=n.length;t<s;t++)n[t].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach((e=>{const n=Object.getOwnPropertyDescriptor(Sz.prototype,e);Object.defineProperty(t.prototype,e,n)}))}dispose(){return super.dispose(),this._events=void 0,this}}class $z extends Sz{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Az extends $z{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new _z,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const t=fz(Az.getDefaults(),arguments,["context"]);t.context?this._context=t.context:this._context=function(t){return new kL(t)}({latencyHint:t.latencyHint}),this._ticker=new iz(this.emit.bind(this,"tick"),t.clockSource,t.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(t.latencyHint),this.lookAhead=t.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){var t;return this._initialized||(t=this,Iz.forEach((e=>e(t))),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return GL(cz(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return GL(cz(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return GL(cz(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){GL(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){GL(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){GL(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){GL(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return function(t,e,n){return GL(YL(FL),"This node only works in a secure context (https or localhost)"),new FL(t,e,n)}(this.rawContext,t,e)}addAudioWorkletModule(t,e){return az(this,void 0,void 0,(function*(){GL(YL(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(e)||this._workletModules.set(e,this.rawContext.audioWorklet.addModule(t)),yield this._workletModules.get(e)}))}workletsAreReady(){return az(this,void 0,void 0,(function*(){const t=[];this._workletModules.forEach((e=>t.push(e))),yield Promise.all(t)}))}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get latencyHint(){return this._latencyHint}_setLatencyHint(t){let e=0;if(this._latencyHint=t,tz(t))switch(t){case"interactive":e=.1;break;case"playback":e=.5;break;case"balanced":e=.25}this.lookAhead=e,this.updateInterval=e/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return cz(this._context)?this._context.resume():Promise.resolve()}close(){return az(this,void 0,void 0,(function*(){var t;cz(this._context)&&(yield this._context.close()),this._initialized&&(t=this,Tz.forEach((e=>e(t))))}))}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let e=0;e<n.length;e++)n[e]=t;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=e,s.loop=!0,s.start(0),this._constants.set(t,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map((t=>this._constants[t].disconnect())),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach((e=>{e.id===t&&this._timeouts.remove(e)})),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),s()},id:n,time:r+e})};return s(),n}}function Ez(t,e){QL(e)?e.forEach((e=>Ez(t,e))):Object.defineProperty(t,e,{enumerable:!0,writable:!1})}function Rz(t,e){QL(e)?e.forEach((e=>Rz(t,e))):Object.defineProperty(t,e,{writable:!0})}const Dz=()=>{};class Oz extends yz{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Dz;const t=fz(Oz.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,t.url&&hz(t.url)||t.url instanceof Oz?this.set(t.url):tz(t.url)&&this.load(t.url).catch(t.onerror)}static getDefaults(){return{onerror:Dz,onload:Dz,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:zz().sampleRate}set(t){return t instanceof Oz?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return az(this,void 0,void 0,(function*(){const e=Oz.load(t).then((t=>{this.set(t),this.onload(this)}));Oz.downloads.push(e);try{yield e}finally{const t=Oz.downloads.indexOf(e);Oz.downloads.splice(t,1)}return this}))}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=QL(t)&&t[0].length>0,n=e?t.length:1,s=e?t[0].length:t.length,r=zz(),a=r.createBuffer(n,s,r.sampleRate),i=e||1!==n?t:[t];for(let t=0;t<n;t++)a.copyToChannel(i[t],t);return this._buffer=a,this}toMono(t){if(ZL(t))this.fromArray(this.toArray(t));else{let t=new Float32Array(this.length);const e=this.numberOfChannels;for(let n=0;n<e;n++){const e=this.toArray(n);for(let n=0;n<e.length;n++)t[n]+=e[n]}t=t.map((t=>t/e)),this.fromArray(t)}return this}toArray(t){if(ZL(t))return this.getChannelData(t);if(1===this.numberOfChannels)return this.toArray(0);{const t=[];for(let e=0;e<this.numberOfChannels;e++)t[e]=this.getChannelData(e);return t}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){const n=Math.floor(t*this.sampleRate),s=Math.floor(e*this.sampleRate);GL(n<s,"The start time must be less than the end time");const r=s-n,a=zz().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let t=0;t<this.numberOfChannels;t++)a.copyToChannel(this.getChannelData(t).subarray(n,s),t);return new Oz(a)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return(new Oz).fromArray(t)}static fromUrl(t){return az(this,void 0,void 0,(function*(){const e=new Oz;return yield e.load(t)}))}static load(t){return az(this,void 0,void 0,(function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const n=e[1].split("|");let s=n[0];for(const t of n)if(Oz.supportsType(t)){s=t;break}t=t.replace(e[0],s)}const n=""===Oz.baseUrl||Oz.baseUrl.endsWith("/")?Oz.baseUrl:Oz.baseUrl+"/",s=yield fetch(n+t);if(!s.ok)throw new Error(`could not load url: ${t}`);const r=yield s.arrayBuffer();return yield zz().decodeAudioData(r)}))}static supportsType(t){const e=t.split("."),n=e[e.length-1];return""!==document.createElement("audio").canPlayType("audio/"+n)}static loaded(){return az(this,void 0,void 0,(function*(){for(yield Promise.resolve();Oz.downloads.length;)yield Oz.downloads[0]}))}}Oz.baseUrl="",Oz.downloads=[];class Fz extends Az{constructor(){var t,e,n;super({clockSource:"offline",context:uz(arguments[0])?arguments[0]:(t=arguments[0],e=arguments[1]*arguments[2],n=arguments[2],new zL(t,e,n)),lookAhead:0,updateInterval:uz(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=uz(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return az(this,void 0,void 0,(function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n==0&&(yield new Promise((t=>setTimeout(t,1))))}}))}render(t=!0){return az(this,void 0,void 0,(function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new Oz(e)}))}close(){return Promise.resolve()}}const Mz=new class extends $z{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t,e){return az(this,void 0,void 0,(function*(){return Promise.resolve()}))}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}};let Lz=Mz;function zz(){return Lz===Mz&&sz&&(t=new Az,Lz=cz(t)?new Az(t):uz(t)?new Fz(t):t),Lz;var t}if(nz&&!nz.TONE_SILENCE_LOGGING){const t=` * Tone.js ${"v"}14.7.77 * `;console.log(`%c${t}`,"background: #000; color: #fff")}function Pz(t){return Math.pow(2,t/12)}let Vz=440;function Bz(t){return Math.round(Wz(t))}function Wz(t){return 69+12*Math.log2(t/Vz)}class Uz extends yz{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),s="."===e?1.5:1;return 1===n?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(3*Math.floor(e)))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let s=0;return t&&"0"!==t&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&"0"!==e&&(s+=this._beatsToUnits(parseFloat(e))),n&&"0"!==n&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Uz&&this.fromType(this._val),KL(this._val))return this._noArg();if(tz(this._val)&&KL(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(JL(this._val)){let t=0;for(const e in this._val)if(YL(this._val[e])){const n=this._val[e];t+=new this.constructor(this.context,e).valueOf()*n}return t}if(YL(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}return tz(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi()}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return 1e3*this.toSeconds()}}class Gz extends Uz{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Gz(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),s=this.valueOf();return s+(Math.round(s/n)*n-s)*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let t=1;t<9;t++){const n=Math.pow(2,t);e.push(n+"n."),e.push(n+"n"),e.push(n+"t")}e.push("0");let n=e[0],s=new Gz(this.context,e[0]).toSeconds();return e.forEach((e=>{const r=new Gz(this.context,e).toSeconds();Math.abs(r-t)<Math.abs(s-t)&&(n=e,s=r)})),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let s=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[n,e,s].join(":")}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.round(e*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return Bz(this.toFrequency())}_now(){return this.context.now()}}class jz extends Gz{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return Vz}static set A4(t){!function(t){Vz=t}(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return"midi"===this.defaultUnits?t:jz.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(t,e){const n=Hz[t.toLowerCase()]+12*(parseInt(e,10)+1);return"midi"===this.defaultUnits?n:jz.mtof(n)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let s=1;return t&&"0"!==t&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&"0"!==e&&(s*=this._beatsToUnits(parseFloat(e))),n&&"0"!==n&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(t){return new jz(this.context,this.valueOf()*Pz(t))}harmonize(t){return t.map((t=>this.transpose(t)))}toMidi(){return Bz(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/jz.A4);let n=Math.round(12*e)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),qz[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(60*t/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return function(t){return Vz*Math.pow(2,(t-69)/12)}(t)}static ftom(t){return Bz(t)}}const Hz={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},qz=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class Xz extends Gz{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Kz extends yz{constructor(){super();const t=fz(Kz.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:zz()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return new Gz(this.context,t).toSeconds()}toFrequency(t){return new jz(this.context,t).toFrequency()}toTicks(t){return new Xz(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach((n=>{KL(t[n])&&delete e[n]})),e}get(){const t=this.constructor.getDefaults();return Object.keys(t).forEach((e=>{if(Reflect.has(this,e)){const n=this[e];YL(n)&&YL(n.value)&&YL(n.setValueAtTime)?t[e]=n.value:n instanceof Kz?t[e]=n._getPartialProperties(t[e]):QL(n)||ZL(n)||tz(n)||"boolean"==typeof n?t[e]=n:delete t[e]}})),t}set(t){return Object.keys(t).forEach((e=>{Reflect.has(this,e)&&YL(this[e])&&(this[e]&&YL(this[e].value)&&YL(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof Kz?this[e].set(t[e]):this[e]=t[e])})),this}}class Yz extends _z{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return null!==e?e.state:this._initial}setStateAtTime(t,e,n){return jL(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){for(let n=this._search(e);n>=0;n--){const e=this._timeline[n];if(e.state===t)return e}}getNextState(t,e){const n=this._search(e);if(-1!==n)for(let e=n;e<this._timeline.length;e++){const n=this._timeline[e];if(n.state===t)return n}}}class Zz extends Kz{constructor(){super(fz(Zz.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=fz(Zz.getDefaults(),arguments,["param","units","convert"]);for(GL(YL(t.param)&&(oz(t.param)||t.param instanceof Zz),"param must be an AudioParam");!oz(t.param);)t.param=t.param._param;this._swappable=!!YL(t.swappable)&&t.swappable,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new _z(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,YL(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Kz.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return YL(this._minValue)?this._minValue:"time"===this.units||"frequency"===this.units||"normalRange"===this.units||"positive"===this.units||"transportTime"===this.units||"ticks"===this.units||"bpm"===this.units||"hertz"===this.units||"samples"===this.units?0:"audioRange"===this.units?-1:"decibels"===this.units?-1/0:this._param.minValue}get maxValue(){return YL(this._maxValue)?this._maxValue:"normalRange"===this.units||"audioRange"===this.units?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return YL(this.maxValue)&&YL(this.minValue)&&jL(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?(e=t,Math.pow(10,e/20)):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t;var e}_toType(t){return this.convert&&"decibels"===this.units?(e=t,Math.log(e)/Math.LN10*20):t;var e}setValueAtTime(t,e){const n=this.toSeconds(e),s=this._fromType(t);return GL(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),s=this._events.get(e);let r=this._initialValue;if(null===s)r=this._initialValue;else if("setTargetAtTime"!==s.type||null!==n&&"setValueAtTime"!==n.type)if(null===n)r=s.value;else if("linearRampToValueAtTime"===n.type||"exponentialRampToValueAtTime"===n.type){let t=s.value;if("setTargetAtTime"===s.type){const e=this._events.getBefore(s.time);t=null===e?this._initialValue:e.value}r="linearRampToValueAtTime"===n.type?this._linearInterpolate(s.time,t,n.time,n.value,e):this._exponentialInterpolate(s.time,t,n.time,n.value,e)}else r=s.value;else{const t=this._events.getBefore(s.time);let n;n=null===t?this._initialValue:t.value,"setTargetAtTime"===s.type&&(r=this._exponentialApproach(s.time,n,s.value,s.constant,e))}return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),0===this._fromType(e)&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),s=this.toSeconds(e);return GL(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=kz(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(e);return GL(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,s),this.cancelAndHoldAtTime(e+.9*n),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const s=this._fromType(t);GL(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(s),GL(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(s,r,n),this}setValueCurveAtTime(t,e,n,s=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*s;this.setValueAtTime(this._toType(r),e);const a=n/(t.length-1);for(let n=1;n<t.length;n++){const r=this._fromType(t[n])*s;this.linearRampToValueAtTime(this._toType(r),e+n*a)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return GL(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));GL(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const s=this._events.get(e),r=this._events.getAfter(e);return s&&kz(s.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),"linearRampToValueAtTime"===r.type?this.linearRampToValueAtTime(this._toType(n),e):"exponentialRampToValueAtTime"===r.type&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return"frequency"===this.units||"bpm"===this.units||"decibels"===this.units?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&"setTargetAtTime"===n.type){const s=this._events.getAfter(n.time),r=s?s.time:e+2,a=(r-e)/10;for(let n=e;n<r;n+=a)t.linearRampToValueAtTime(this.getValueAtTime(n),n)}return this._events.forEachAfter(this.context.currentTime,(e=>{"cancelScheduledValues"===e.type?t.cancelScheduledValues(e.time):"setTargetAtTime"===e.type?t.setTargetAtTime(e.value,e.time,e.constant):t[e.type](e.value,e.time)})),this}setParam(t){GL(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,s,r){return n+(e-n)*Math.exp(-(r-t)/s)}_linearInterpolate(t,e,n,s,r){return e+(r-t)/(n-t)*(s-e)}_exponentialInterpolate(t,e,n,s,r){return e*Math.pow(s/e,(r-t)/(n-t))}}class Jz extends Kz{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return YL(this.input)?oz(this.input)||this.input instanceof Zz?1:this.input.numberOfInputs:0}get numberOfOutputs(){return YL(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return YL(t)&&(t instanceof Jz||lz(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach((e=>{e.channelCount=t.channelCount,e.channelCountMode=t.channelCountMode,e.channelInterpretation=t.channelInterpretation}))}_getChannelProperties(){const t=this._getInternalNodes();GL(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return tP(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return XL("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return function(t,e,n=0,s=0){if(YL(e))for(;e instanceof Jz;)e=e.input;for(;!lz(t);)YL(t.output)&&(t=t.output);oz(e)?t.disconnect(e,n):lz(e)?t.disconnect(e,n,s):t.disconnect()}(this,t,e,n),this}chain(...t){return Qz(this,...t),this}fan(...t){return t.forEach((t=>this.connect(t))),this}dispose(){return super.dispose(),YL(this.input)&&(this.input instanceof Jz?this.input.dispose():lz(this.input)&&this.input.disconnect()),YL(this.output)&&(this.output instanceof Jz?this.output.dispose():lz(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Qz(...t){const e=t.shift();t.reduce(((t,e)=>(t instanceof Jz?t.connect(e):lz(t)&&tP(t,e),e)),e)}function tP(t,e,n=0,s=0){for(GL(YL(t),"Cannot connect from undefined node"),GL(YL(e),"Cannot connect to undefined node"),(e instanceof Jz||lz(e))&&GL(e.numberOfInputs>0,"Cannot connect to node with no inputs"),GL(t.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof Jz||e instanceof Zz;)YL(e.input)&&(e=e.input);for(;t instanceof Jz;)YL(t.output)&&(t=t.output);oz(e)?t.connect(e,n):t.connect(e,n,s)}class eP extends Jz{constructor(){super(fz(eP.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=fz(eP.getDefaults(),arguments,["gain","units"]);this.gain=new Zz({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Ez(this,"gain")}static getDefaults(){return Object.assign(Jz.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class nP extends Jz{constructor(t){super(t),this.onended=Dz,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new eP({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const e=this.toSeconds(t);return-1!==this._startTime&&e>=this._startTime&&(-1===this._stopTime||e<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(Jz.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Dz})}_startGain(t,e=1){GL(-1===this._startTime,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),"linear"===this._curve?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){GL(-1!==this._startTime,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.context.currentTime),e>0?"linear"===this._curve?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout((()=>{const t="exponential"===this._curve?2*e:0;this._stopSource(this.now()+t),this._onended()}),this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Dz&&(this.onended(this),this.onended=Dz,!this.context.isOffline)){const t=()=>this.dispose();void 0!==window.requestIdleCallback?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),GL(-1!==this._startTime,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class sP extends nP{constructor(){super(fz(sP.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=fz(sP.getDefaults(),arguments,["offset"]);tP(this._source,this._gainNode),this.offset=new Zz({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(nP.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class rP extends Jz{constructor(){super(fz(rP.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=fz(rP.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new sP({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(Jz.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return aP(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,s){return this._param.setValueCurveAtTime(t,e,n,s),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function aP(t,e,n,s){(e instanceof Zz||oz(e)||e instanceof rP&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof rP&&(e.overridden=!0)),tP(t,e,n,s)}class iP extends Zz{constructor(){super(fz(iP.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new _z(1/0),this._multiplier=1;const t=fz(iP.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Zz.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const s=this._fromType(t),r=this._events.get(e),a=Math.round(Math.max(1/n,1));for(let t=0;t<=a;t++){const a=n*t+e,i=this._exponentialApproach(r.time,r.value,s,n,a);this.linearRampToValueAtTime(this._toType(i),a)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),s=this._events.get(e),r=Math.round(Math.max(10*(e-s.time),1)),a=(e-s.time)/r;for(let t=0;t<=r;t++){const r=a*t+s.time,i=this._exponentialInterpolate(s.time,s.value,e,n,r);this.linearRampToValueAtTime(this._toType(i),r)}return this}_getTicksUntilEvent(t,e){if(null===t)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(KL(t.ticks)){const e=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(e,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let s=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&"setValueAtTime"===r.type&&(s=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+s)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(e);return this.getTimeOfTick(s+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&"linearRampToValueAtTime"===n.type&&e.value!==n.value){const s=this._fromType(this.getValueAtTime(e.time)),r=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-e.time),a=Math.sqrt(Math.pow(s,2)-2*r*(e.ticks-t)),i=(-s+a)/r,o=(-s-a)/r;return(i>0?i:o)+e.time}return e?0===e.value?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),s=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-r}_fromType(t){return"bpm"===this.units&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return"bpm"===this.units&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class oP extends rP{constructor(){super(fz(oP.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=fz(oP.getDefaults(),arguments,["value"]);this.input=this._param=new iP({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(rP.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class lP extends Kz{constructor(){super(fz(lP.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new Yz,this._tickOffset=new _z;const t=fz(lP.getDefaults(),arguments,["frequency"]);this.frequency=new oP({context:this.context,units:t.units,value:t.frequency}),Ez(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Kz.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),YL(e)&&this.setTicksAtTime(e,n)),this}stop(t){const e=this.toSeconds(t);if("stopped"===this._state.getValueAtTime(e)){const t=this._state.get(e);t&&t.time>0&&(this._tickOffset.cancel(t.time),this._state.cancel(t.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this}pause(t){const e=this.toSeconds(t);return"started"===this._state.getValueAtTime(e)&&this._state.setStateAtTime("paused",e),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),s={state:"paused",time:e};this._state.add(s);let r=n,a=0;return this._state.forEachBetween(n.time,e+this.sampleTime,(t=>{let e=r.time;const n=this._tickOffset.get(t.time);n&&n.time>=r.time&&(a=n.ticks,e=n.time),"started"===r.state&&"started"!==t.state&&(a+=this.frequency.getTicksAtTime(t.time)-this.frequency.getTicksAtTime(e)),r=t})),this._state.remove(s),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);let s=e,r=0;return this._state.forEachBetween(e.time,t+this.sampleTime,(t=>{let e=s.time;const n=this._tickOffset.get(t.time);n&&n.time>=s.time&&(r=n.seconds,e=n.time),"started"===s.state&&"started"!==t.state&&(r+=t.time-e),s=t})),this._state.remove(n),r}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),s=this._state.get(e),r=Math.max(n.time,s.time),a=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(t,e,n){let s=this._state.get(t);this._state.forEachBetween(t,e,(e=>{s&&"started"===s.state&&"started"!==e.state&&this.forEachTickBetween(Math.max(s.time,t),e.time-this.sampleTime,n),s=e}));let r=null;if(s&&"started"===s.state){const a=Math.max(s.time,t),i=this.frequency.getTicksAtTime(a),o=i-this.frequency.getTicksAtTime(s.time);let l=Math.ceil(o)-o;l=kz(l,1)?0:l;let u=this.frequency.getTimeOfTick(i+l);for(;u<e;){try{n(u,Math.round(this.getTicksAtTime(u)))}catch(t){r=t;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class uP extends Kz{constructor(){super(fz(uP.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Dz,this._lastUpdate=0,this._state=new Yz("stopped"),this._boundLoop=this._loop.bind(this);const t=fz(uP.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new lP({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Ez(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Kz.getDefaults(),{callback:Dz,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){HL(this.context);const n=this.toSeconds(t);return this.log("start",n),"started"!==this._state.getValueAtTime(n)&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return"started"===this._state.getValueAtTime(e)&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,(t=>{switch(t.state){case"started":const e=this._tickSource.getTicksAtTime(t.time);this.emit("start",t.time,e);break;case"stopped":0!==t.time&&this.emit("stop",t.time);break;case"paused":this.emit("pause",t.time)}})),this._tickSource.forEachTickBetween(t,e,((t,e)=>{this.callback(t,e)})))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Sz.mixin(uP);class cP extends yz{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=fz(cP.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach((e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)}))}static getDefaults(){return{baseUrl:"",onerror:Dz,onload:Dz,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return GL(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,0===this._loadingCount&&t&&t()}get loaded(){return Array.from(this._buffers).every((([t,e])=>e.loaded))}add(t,e,n=Dz,s=Dz){return tz(e)?this._buffers.set(t.toString(),new Oz(this.baseUrl+e,n,s)):this._buffers.set(t.toString(),new Oz(e,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach((t=>t.dispose())),this._buffers.clear(),this}}class hP extends Xz{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class pP extends Kz{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new _z,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),1===this._events.length&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}Nz((t=>{t.draw=new pP({context:t})})),Cz((t=>{t.draw.dispose()}));class dP extends yz{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){GL(YL(t.time),"Events must have a time property"),GL(YL(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new fP(t.time,t.time+t.duration,t);for(null===this._root?this._root=e:this._root.insert(e),this._length++;null!==e;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(null!==this._root){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,(t=>this.remove(t))),this}_setRoot(t){this._root=t,null!==this._root&&(this._root.parent=null)}_replaceNodeInParent(t,e){null!==t.parent?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(null===t.left&&null===t.right)this._replaceNodeInParent(t,null);else if(null===t.right)this._replaceNodeInParent(t,t.left);else if(null===t.left)this._replaceNodeInParent(t,t.right);else{let e,n=null;if(t.getBalance()>0)if(null===t.left.right)e=t.left,e.right=t.right,n=e;else{for(e=t.left.right;null!==e.right;)e=e.right;e.parent&&(e.parent.right=e.left,n=e.parent,e.left=t.left,e.right=t.right)}else if(null===t.right.left)e=t.right,e.left=t.left,n=e;else{for(e=t.right.left;null!==e.left;)e=e.left;e.parent&&(e.parent.left=e.right,n=e.parent,e.left=t.left,e.right=t.right)}null!==t.parent?t.isLeftChild()?t.parent.left=e:t.parent.right=e:this._setRoot(e),n&&this._rebalance(n)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),s=t.right;s&&(t.right=s.left,s.left=t),null!==e?n?e.left=s:e.right=s:this._setRoot(s)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),s=t.left;s&&(t.left=s.right,s.right=t),null!==e?n?e.left=s:e.right=s:this._setRoot(s)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(null!==this._root){const e=[];if(this._root.search(t,e),e.length>0){let t=e[0];for(let n=1;n<e.length;n++)e[n].low>t.low&&(t=e[n]);return t.event}}return null}forEach(t){if(null!==this._root){const e=[];this._root.traverse((t=>e.push(t))),e.forEach((e=>{e.event&&t(e.event)}))}return this}forEachAtTime(t,e){if(null!==this._root){const n=[];this._root.search(t,n),n.forEach((t=>{t.event&&e(t.event)}))}return this}forEachFrom(t,e){if(null!==this._root){const n=[];this._root.searchAfter(t,n),n.forEach((t=>{t.event&&e(t.event)}))}return this}dispose(){return super.dispose(),null!==this._root&&this._root.traverse((t=>t.dispose())),this._root=null,this}}class fP{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?null===this.left?this.left=t:this.left.insert(t):null===this.right?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(null!==this.left&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),this.low>t||null!==this.right&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),null!==this.left&&this.left.searchAfter(t,e)),null!==this.right&&this.right.searchAfter(t,e)}traverse(t){t(this),null!==this.left&&this.left.traverse(t),null!==this.right&&this.right.traverse(t)}updateHeight(){null!==this.left&&null!==this.right?this.height=Math.max(this.left.height,this.right.height)+1:null!==this.right?this.height=this.right.height+1:null!==this.left?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,null!==this.left&&(this.max=Math.max(this.max,this.left.max)),null!==this.right&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return null!==this.left&&null!==this.right?t=this.left.height-this.right.height:null!==this.left?t=this.left.height+1:null!==this.right&&(t=-(this.right.height+1)),t}isLeftChild(){return null!==this.parent&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,null!==t&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class mP extends Jz{constructor(){super(fz(mP.getDefaults(),arguments,["volume"])),this.name="Volume";const t=fz(mP.getDefaults(),arguments,["volume"]);this.input=this.output=new eP({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Ez(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(Jz.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class gP extends Jz{constructor(){super(fz(gP.getDefaults(),arguments)),this.name="Destination",this.input=new mP({context:this.context}),this.output=new eP({context:this.context}),this.volume=this.input.volume;const t=fz(gP.getDefaults(),arguments);Qz(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(Jz.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),Qz(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}Nz((t=>{t.destination=new gP({context:t})})),Cz((t=>{t.destination.dispose()}));class yP extends yz{constructor(t){super(),this.name="TimelineValue",this._timeline=new _z({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class bP{constructor(t,e){this.id=bP._eventId++;const n=Object.assign(bP.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=n.time}static getDefaults(){return{callback:Dz,once:!1,time:0}}invoke(t){this.callback&&(this.callback(t),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}bP._eventId=0;class xP extends bP{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(xP.getDefaults(),e);this.duration=new hP(t.context,n.duration).valueOf(),this._interval=new hP(t.context,n.interval).valueOf(),this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},bP.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvents(t){const e=this.transport.getTicksAtTime(t);e>=this.time&&e>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new hP(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const e=this.transport.getTicksAtTime(t);e>this.time&&(this._nextTick=this.time+Math.ceil((e-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new hP(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new hP(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}class vP extends Kz{constructor(){super(fz(vP.getDefaults(),arguments)),this.name="Transport",this._loop=new yP(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new _z,this._repeatedEvents=new dP,this._syncedSignals=[],this._swingAmount=0;const t=fz(vP.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new uP({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Ez(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(Kz.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!=0&&e%(2*this._swingTicks)!=0){const n=e%(2*this._swingTicks)/(2*this._swingTicks),s=Math.sin(n*Math.PI)*this._swingAmount;t+=new hP(this.context,2*this._swingTicks/3).toSeconds()*s}this._timeline.forEachAtTime(e,(e=>e.invoke(t)))}schedule(t,e){const n=new bP(this,{callback:t,time:new Xz(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,s=1/0){const r=new xP(this,{callback:t,duration:new Gz(this.context,s).toTicks(),interval:new Gz(this.context,e).toTicks(),time:new Xz(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new bP(this,{callback:t,once:!0,time:new Xz(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,(t=>this.clear(t.id))),this._repeatedEvents.forEachFrom(e,(t=>this.clear(t.id))),this}_bindClockEvents(){this._clock.on("start",((t,e)=>{e=new hP(this.context,e).toSeconds(),this.emit("start",t,e)})),this._clock.on("stop",(t=>{this.emit("stop",t)})),this._clock.on("pause",(t=>{this.emit("pause",t)}))}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){let n;return YL(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),"started"!==this._clock.getStateAtTime(t)?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){QL(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Gz(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Gz(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new hP(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new hP(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if("started"===this.state){const n=this._clock.getTicksAtTime(e),s=e+this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e);this.emit("stop",s),this._clock.setTicksAtTime(t,s),this.emit("start",s,this._clock.getSecondsAtTime(s))}else this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return Math.round(this._clock.getTicksAtTime(t))}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),"started"!==this.state)return 0;{const e=this.now(),n=t-this.getTicksAtTime(e)%t;return this._clock.nextTickTime(n,e)}}syncSignal(t,e){if(!e){const n=this.now();if(0!==t.getValueAtTime(n)){const s=1/(60/this.bpm.getValueAtTime(n)/this.PPQ);e=t.getValueAtTime(n)/s}else e=0}const n=new eP(e);return this.bpm.connect(n),n.connect(t._param),this._syncedSignals.push({initial:t.value,ratio:n,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Rz(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Sz.mixin(vP),Nz((t=>{t.transport=new vP({context:t})})),Cz((t=>{t.transport.dispose()}));class wP extends Jz{constructor(t){super(t),this.input=void 0,this._state=new Yz("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Dz,this._syncedStop=Dz,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new mP({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Ez(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(Jz.getDefaults(),{mute:!1,onstop:Dz,volume:0})}get state(){return this._synced?"started"===this.context.transport.state?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let s=KL(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(s=this._clampToCurrentTime(s),this._synced||"started"!==this._state.getValueAtTime(s))if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const t=this._state.get(s);t&&(t.offset=this.toSeconds(mz(e,0)),t.duration=n?this.toSeconds(n):void 0);const r=this.context.transport.schedule((t=>{this._start(t,e,n)}),s);this._scheduled.push(r),"started"===this.context.transport.state&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else HL(this.context),this._start(s,e,n);else GL(xz(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,e,n);return this}stop(t){let e=KL(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),"started"===this._state.getValueAtTime(e)||YL(this._state.getNextState("started",e))){if(this.log("stop",e),this._synced){const t=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(t)}else this._stop(e);this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),"started"===this._state.getValueAtTime(t)&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(e>0){const n=this._state.get(e);if(n&&"started"===n.state&&n.time!==e){const s=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-s),this._start(t,this.toSeconds(n.offset)+s,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));"started"===this._state.getValueAtTime(e)&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach((t=>this.context.transport.clear(t))),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Dz,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class kP extends nP{constructor(){super(fz(kP.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=fz(kP.getDefaults(),arguments,["url","onload"]);tP(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Zz({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new Oz(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(nP.getDefaults(),{url:new Oz,loop:!1,loopEnd:0,loopStart:0,onload:Dz,onerror:Dz,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,s=1){GL(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,s),e=this.loop?mz(e,this.loopStart):mz(e,0);let a=Math.max(this.toSeconds(e),0);if(this.loop){const t=this.toSeconds(this.loopEnd)||this.buffer.duration,e=this.toSeconds(this.loopStart),n=t-e;vz(a,t)&&(a=(a-e)%n+e),kz(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,wz(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,a)),YL(n)){let t=this.toSeconds(n);t=Math.max(t,0),this.stop(r+t)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function _P(t,e){return az(this,void 0,void 0,(function*(){const n=e/t.context.sampleRate,s=new Fz(1,n,t.context.sampleRate);return new t.constructor(Object.assign(t.get(),{frequency:2/n,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)}))}class IP extends nP{constructor(){super(fz(IP.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=fz(IP.getDefaults(),arguments,["frequency","type"]);tP(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new Zz({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new Zz({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Ez(this,["frequency","detune"])}static getDefaults(){return Object.assign(nP.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class NP extends wP{constructor(){super(fz(NP.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=fz(NP.getDefaults(),arguments,["frequency","type"]);this.frequency=new rP({context:this.context,units:"frequency",value:t.frequency}),Ez(this,"frequency"),this.detune=new rP({context:this.context,units:"cents",value:t.detune}),Ez(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&"custom"!==t.type&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(wP.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new IP({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if("custom"===this._type)return NP._periodicWaveCache.find((t=>{return t.phase===this._phase&&(e=t.partials,n=this._partials,e.length===n.length&&e.every(((t,e)=>n[e]===t)));var e,n}));{const t=NP._periodicWaveCache.find((t=>t.type===this._type&&t.phase===this._phase));return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=-1!==["sine","square","sawtooth","triangle"].indexOf(t);if(0===this._phase&&e)this._wave=void 0,this._partialCount=0,null!==this._oscillator&&(this._oscillator.type=t);else{const e=this._getCachedPeriodicWave();if(YL(e)){const{partials:t,wave:n}=e;this._wave=n,this._partials=t,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave)}else{const[e,n]=this._getRealImaginary(t,this._phase),s=this.context.createPeriodicWave(e,n);this._wave=s,null!==this._oscillator&&this._oscillator.setPeriodicWave(this._wave),NP._periodicWaveCache.push({imag:n,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:e,type:this._type,wave:this._wave}),NP._periodicWaveCache.length>100&&NP._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&"custom"!==this._type&&"custom"!==t?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){jL(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),"custom"!==this._type)this.type=0===t?e:e+t.toString();else{const e=new Float32Array(t);this._partials.forEach(((t,n)=>e[n]=t)),this._partials=Array.from(e),this.type=this._type}}_getRealImaginary(t,e){let n=2048;const s=new Float32Array(n),r=new Float32Array(n);let a=1;if("custom"===t){if(a=this._partials.length+1,this._partialCount=this._partials.length,n=a,0===this._partials.length)return[s,r]}else{const e=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);e?(a=parseInt(e[2],10)+1,this._partialCount=parseInt(e[2],10),t=e[1],a=Math.max(a,2),n=a):this._partialCount=0,this._partials=[]}for(let i=1;i<n;++i){const n=2/(i*Math.PI);let o;switch(t){case"sine":o=i<=a?1:0,this._partials[i-1]=o;break;case"square":o=1&i?2*n:0,this._partials[i-1]=o;break;case"sawtooth":o=n*(1&i?1:-1),this._partials[i-1]=o;break;case"triangle":o=1&i?n*n*2*(i-1>>1&1?-1:1):0,this._partials[i-1]=o;break;case"custom":o=this._partials[i-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}0!==o?(s[i]=-o*Math.sin(e*i),r[i]=o*Math.cos(e*i)):(s[i]=0,r[i]=0)}return[s,r]}_inverseFFT(t,e,n){let s=0;const r=t.length;for(let a=0;a<r;a++)s+=t[a]*Math.cos(a*n)+e[a]*Math.sin(a*n);return s}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const s=2*Math.PI;for(let r=0;r<32;r++)n=Math.max(this._inverseFFT(t,e,r/32*s),n);return r=-this._inverseFFT(t,e,this._phase)/n,Math.max(Math.min(r,1),-1);var r}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return az(this,void 0,void 0,(function*(){return _P(this,t)}))}dispose(){return super.dispose(),null!==this._oscillator&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}NP._periodicWaveCache=[];class TP extends Jz{constructor(){super(Object.assign(fz(TP.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return aP(this,t,e,n),this}}class CP extends TP{constructor(){super(Object.assign(fz(CP.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=fz(CP.getDefaults(),arguments,["mapping","length"]);QL(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):"function"==typeof t.mapping&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(rP.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let s=0,r=e;s<r;s++){const e=s/(r-1)*2-1;n[s]=t(e,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){GL(["none","2x","4x"].some((e=>e.includes(t))),"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class SP extends TP{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new CP({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class $P extends rP{constructor(){super(Object.assign(fz($P.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=fz($P.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new eP({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(rP.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class AP extends wP{constructor(){super(fz(AP.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new SP({context:this.context}),this._modulationNode=new eP({context:this.context});const t=fz(AP.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new NP({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new NP({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new $P({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Ez(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(NP.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return az(this,void 0,void 0,(function*(){return _P(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class EP extends wP{constructor(){super(fz(EP.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new eP({context:this.context,gain:0});const t=fz(EP.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new NP({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new rP({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new NP({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new $P({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new $P({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Ez(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(NP.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return az(this,void 0,void 0,(function*(){return _P(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class RP extends wP{constructor(){super(fz(RP.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new eP({context:this.context,gain:0}),this._thresh=new CP({context:this.context,mapping:t=>t<=0?-1:1});const t=fz(RP.getDefaults(),arguments,["frequency","width"]);this.width=new rP({context:this.context,units:"audioRange",value:t.width}),this._triangle=new NP({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Ez(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(wP.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return az(this,void 0,void 0,(function*(){return _P(this,t)}))}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class DP extends wP{constructor(){super(fz(DP.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=fz(DP.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new rP({context:this.context,units:"frequency",value:t.frequency}),this.detune=new rP({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Ez(this,["frequency","detune"])}static getDefaults(){return Object.assign(NP.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach((e=>e.start(t)))}_stop(t){t=this.toSeconds(t),this._forEach((e=>e.stop(t)))}_restart(t){this._forEach((e=>e.restart(t)))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach((e=>e.type=t))}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach(((t,s)=>t.detune.value=e+n*s))}}get count(){return this._oscillators.length}set count(t){if(jL(t,1),this._oscillators.length!==t){this._forEach((t=>t.dispose())),this._oscillators=[];for(let e=0;e<t;e++){const n=new NP({context:this.context,volume:-6-1.1*t,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:0===e?()=>this.onstop(this):Dz});"custom"===this.type&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,"started"===this.state&&this._forEach((t=>t.start()))}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach(((t,e)=>t.phase=this._phase+e/this.count*360))}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach((e=>e.baseType=t)),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach((e=>e.partials=t)))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach((e=>e.partialCount=t)),this._type=this._oscillators[0].type}asArray(t=1024){return az(this,void 0,void 0,(function*(){return _P(this,t)}))}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach((t=>t.dispose())),this}}class OP extends wP{constructor(){super(fz(OP.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new $P({context:this.context,value:2});const t=fz(OP.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new RP({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new NP({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Ez(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(wP.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return az(this,void 0,void 0,(function*(){return _P(this,t)}))}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const FP={am:AP,fat:DP,fm:EP,oscillator:NP,pulse:RP,pwm:OP};class MP extends wP{constructor(){super(fz(MP.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=fz(MP.getDefaults(),arguments,["frequency","type"]);this.frequency=new rP({context:this.context,units:"frequency",value:t.frequency}),this.detune=new rP({context:this.context,units:"cents",value:t.detune}),Ez(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(NP.getDefaults(),EP.getDefaults(),AP.getDefaults(),DP.getDefaults(),RP.getDefaults(),OP.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some((t=>this._sourceType===t))&&(t=this._sourceType),t+this._oscillator.type}set type(t){"fm"===t.substr(0,2)?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):"am"===t.substr(0,2)?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):"fat"===t.substr(0,3)?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):"pwm"===t?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):"pulse"===t?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=FP[t],n=this.now();if(this._oscillator){const t=this._oscillator;t.stop(n),this.context.setTimeout((()=>t.dispose()),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),"started"===this.state&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";"pwm"!==this._oscillator.type&&"pulse"!==this._oscillator.type&&(e=this._oscillator.type),"fm"===t?this.type="fm"+e:"am"===t?this.type="am"+e:"fat"===t?this.type="fat"+e:"oscillator"===t?this.type=e:"pulse"===t?this.type="pulse":"pwm"===t&&(this.type="pwm")}_getOscType(t,e){return t instanceof FP[e]}get baseType(){return this._oscillator.baseType}set baseType(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||"pulse"===t||"pwm"===t||(this._oscillator.baseType=t)}get width(){return this._getOscType(this._oscillator,"pulse")?this._oscillator.width:void 0}get count(){return this._getOscType(this._oscillator,"fat")?this._oscillator.count:void 0}set count(t){this._getOscType(this._oscillator,"fat")&&ZL(t)&&(this._oscillator.count=t)}get spread(){return this._getOscType(this._oscillator,"fat")?this._oscillator.spread:void 0}set spread(t){this._getOscType(this._oscillator,"fat")&&ZL(t)&&(this._oscillator.spread=t)}get modulationType(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.modulationType:void 0}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&tz(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){return this._getOscType(this._oscillator,"fm")?this._oscillator.modulationIndex:void 0}get harmonicity(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.harmonicity:void 0}get modulationFrequency(){return this._getOscType(this._oscillator,"pwm")?this._oscillator.modulationFrequency:void 0}asArray(t=1024){return az(this,void 0,void 0,(function*(){return _P(this,t)}))}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function LP(t,e=1/0){const n=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(s){jL(s,t,e),n.set(this,s)}})}}function zP(t,e=1/0){const n=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return n.get(this)},set:function(s){jL(this.toSeconds(s),t,e),n.set(this,s)}})}}class PP extends wP{constructor(){super(fz(PP.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=fz(PP.getDefaults(),arguments,["url","onload"]);this._buffer=new Oz({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(wP.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Dz,onerror:Dz,playbackRate:1,reverse:!1})}load(t){return az(this,void 0,void 0,(function*(){return yield this._buffer.load(t),this._onload(),this}))}_onload(t=Dz){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),0!==this._activeSources.size||this._synced||"started"!==this._state.getValueAtTime(this.now())||(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){e=this._loop?mz(e,this._loopStart):mz(e,0);const s=this.toSeconds(e),r=n;n=mz(n,Math.max(this._buffer.duration-s,0));let a=this.toSeconds(n);a/=this._playbackRate,t=this.toSeconds(t);const i=new kP({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);this._loop||this._synced||(this._state.cancel(t+a),this._state.setStateAtTime("stopped",t+a,{implicitEnd:!0})),this._activeSources.add(i),this._loop&&KL(r)?i.start(t,s):i.start(t,s,a-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach((t=>t.stop(e)))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){this._stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if("started"===this._state.getValueAtTime(n)){const e=this.toSeconds(t);this._stop(n),this._start(n,e)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&jL(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopStart=t}))}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&jL(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach((e=>{e.loopEnd=t}))}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach((e=>{e.loop=t})),t)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach((t=>t.cancelStop()))),this._activeSources.forEach((n=>{n.playbackRate.setValueAtTime(t,e)}))}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach((t=>t.dispose())),this._activeSources.clear(),this._buffer.dispose(),this}}rz([zP(0)],PP.prototype,"fadeIn",void 0),rz([zP(0)],PP.prototype,"fadeOut",void 0);class VP extends TP{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new CP({context:this.context,mapping:t=>2*Math.abs(t)-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class BP extends Jz{constructor(){super(fz(BP.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new rP({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=fz(BP.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(Jz.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(tz(t))return t;{let n;for(n in WP)if(WP[n][e]===t)return n;return t}}_setCurve(t,e,n){if(tz(n)&&Reflect.has(WP,n)){const s=WP[n];JL(s)?"_decayCurve"!==t&&(this[t]=s[e]):this[t]=s}else{if(!QL(n)||"_decayCurve"===t)throw new Error("Envelope: invalid curve: "+n);this[t]=n}}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._decayCurve}set decayCurve(t){GL(["linear","exponential"].some((e=>e===t)),`Invalid envelope curve: ${t}`),this._decayCurve=t}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let n=this.toSeconds(this.attack);const s=this.toSeconds(this.decay),r=this.getValueAtTime(t);if(r>0&&(n=(1-r)/(1/n)),n<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if("linear"===this._attackCurve)this._sig.linearRampTo(e,n,t);else if("exponential"===this._attackCurve)this._sig.targetRampTo(e,n,t);else{this._sig.cancelAndHoldAtTime(t);let s=this._attackCurve;for(let t=1;t<s.length;t++)if(s[t-1]<=r&&r<=s[t]){s=this._attackCurve.slice(t),s[0]=r;break}this._sig.setValueCurveAtTime(s,t,n,e)}if(s&&this.sustain<1){const r=e*this.sustain,a=t+n;this.log("decay",a),"linear"===this._decayCurve?this._sig.linearRampToValueAtTime(r,s+a):this._sig.exponentialApproachValueAtTime(r,a,s)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):"linear"===this._releaseCurve?this._sig.linearRampTo(0,n,t):"exponential"===this._releaseCurve?this._sig.targetRampTo(0,n,t):(GL(QL(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return aP(this,t,e,n),this}asArray(t=1024){return az(this,void 0,void 0,(function*(){const e=t/this.context.sampleRate,n=new Fz(1,e,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),a=.1*r,i=r+a,o=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/i,decay:e*this.toSeconds(this.decay)/i,release:e*this.toSeconds(this.release)/i,context:n}));return o._sig.toDestination(),o.triggerAttackRelease(e*(s+a)/i,0),(yield n.render()).getChannelData(0)}))}dispose(){return super.dispose(),this._sig.dispose(),this}}rz([zP(0)],BP.prototype,"attack",void 0),rz([zP(0)],BP.prototype,"decay",void 0),rz([LP(0,1)],BP.prototype,"sustain",void 0),rz([zP(0)],BP.prototype,"release",void 0);const WP=(()=>{const t=128;let e,n;const s=[];for(e=0;e<t;e++)s[e]=Math.sin(e/127*(Math.PI/2));const r=[];for(e=0;e<127;e++){n=e/127;const t=Math.sin(n*(2*Math.PI)*6.4-Math.PI/2)+1;r[e]=t/10+.83*n}r[127]=1;const a=[];for(e=0;e<t;e++)a[e]=Math.ceil(e/127*5)/5;const i=[];for(e=0;e<t;e++)n=e/127,i[e]=.5*(1-Math.cos(Math.PI*n));const o=[];for(e=0;e<t;e++){n=e/127;const t=4*Math.pow(n,3)+.2,s=Math.cos(t*Math.PI*2*n);o[e]=Math.abs(s*(1-n))}function l(t){const e=new Array(t.length);for(let n=0;n<t.length;n++)e[n]=1-t[n];return e}return{bounce:{In:l(o),Out:o},cosine:{In:s,Out:(u=s,u.slice(0).reverse())},exponential:"exponential",linear:"linear",ripple:{In:r,Out:l(r)},sine:{In:i,Out:l(i)},step:{In:a,Out:l(a)}};var u})();class UP extends Jz{constructor(){super(fz(UP.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const t=fz(UP.getDefaults(),arguments);this._volume=this.output=new mP({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Ez(this,"volume")}static getDefaults(){return Object.assign(Jz.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...t)=>{const s=t[e],r=this.context.transport.schedule((s=>{t[e]=s,n.apply(this,t)}),s);this._scheduledEvents.push(r)}}unsync(){return this._scheduledEvents.forEach((t=>this.context.transport.clear(t))),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(t,e,n,s){const r=this.toSeconds(n),a=this.toSeconds(e);return this.triggerAttack(t,r,s),this.triggerRelease(r+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class GP extends UP{constructor(){super(fz(GP.getDefaults(),arguments));const t=fz(GP.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(UP.getDefaults(),{detune:0,onsilence:Dz,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const s=this.toSeconds(e);return this._triggerEnvelopeAttack(s,n),this.setNote(t,s),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),s=t instanceof jz?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const t=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,t,n)}else this.frequency.setValueAtTime(s,n);return this}}rz([zP(0)],GP.prototype,"portamento",void 0);class jP extends BP{constructor(){super(fz(jP.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new eP({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class HP extends GP{constructor(){super(fz(HP.getDefaults(),arguments)),this.name="Synth";const t=fz(HP.getDefaults(),arguments);this.oscillator=new MP(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new jP(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Ez(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(GP.getDefaults(),{envelope:Object.assign(gz(BP.getDefaults(),Object.keys(Jz.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(gz(MP.getDefaults(),[...Object.keys(wP.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),0===this.envelope.sustain){const e=this.toSeconds(this.envelope.attack),n=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+e+n)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class qP extends HP{constructor(){super(fz(qP.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=fz(qP.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Ez(this,["oscillator","envelope"])}static getDefaults(){return dz(GP.getDefaults(),HP.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),s=this.toFrequency(t instanceof jz?t.toFrequency():t),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}rz([LP(0)],qP.prototype,"octaves",void 0),rz([zP(0)],qP.prototype,"pitchDecay",void 0);const XP=new Set;function KP(t){XP.add(t)}function YP(t,e){const n=`registerProcessor("${t}", ${e})`;XP.add(n)}KP('\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it\'s disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === "dispose") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n'),KP("\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n"),KP("\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n"),YP("feedback-comb-filter",'\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: "delayTime",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}, {\n\t\t\t\tname: "feedback",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: "k-rate"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n');class ZP extends UP{constructor(){super(fz(ZP.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=fz(ZP.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach((n=>{const s=parseInt(n,10);if(GL(ez(n)||ZL(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),ez(n)){const s=new jz(this.context,n).toMidi();e[s]=t.urls[n]}else ZL(s)&&isFinite(s)&&(e[s]=t.urls[s])})),this._buffers=new cP({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(UP.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Dz,onerror:Dz,release:.1,urls:{}})}_findClosest(t){let e=0;for(;e<96;){if(this._buffers.has(t+e))return-e;if(this._buffers.has(t-e))return e;e++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach((t=>{const s=Wz(new jz(this.context,t).toFrequency()),r=Math.round(s),a=s-r,i=this._findClosest(r),o=r-i,l=this._buffers.get(o),u=Pz(i+a),c=new kP({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);c.start(e,0,l.duration/u,n),QL(this._activeSources.get(r))||this._activeSources.set(r,[]),this._activeSources.get(r).push(c),c.onended=()=>{if(this._activeSources&&this._activeSources.has(r)){const t=this._activeSources.get(r),e=t.indexOf(c);-1!==e&&t.splice(e,1)}}})),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach((t=>{const n=new jz(this.context,t).toMidi();if(this._activeSources.has(n)&&this._activeSources.get(n).length){const t=this._activeSources.get(n);e=this.toSeconds(e),t.forEach((t=>{t.stop(e)})),this._activeSources.set(n,[])}})),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach((t=>{for(;t.length;)t.shift().stop(e)})),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,s=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,s),QL(e)?(GL(QL(t),"notes must be an array when duration is array"),t.forEach(((t,n)=>{const s=e[Math.min(n,e.length-1)];this.triggerRelease(t,r+this.toSeconds(s))}))):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(GL(ez(t)||isFinite(t),`note must be a pitch or midi: ${t}`),ez(t)){const s=new jz(this.context,t).toMidi();this._buffers.add(s,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach((t=>{t.forEach((t=>t.dispose()))})),this._activeSources.clear(),this}}rz([zP(0)],ZP.prototype,"attack",void 0),rz([zP(0)],ZP.prototype,"release",void 0);class JP extends Jz{constructor(){super(Object.assign(fz(JP.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new VP({context:this.context}),this.a=new eP({context:this.context,gain:0}),this.b=new eP({context:this.context,gain:0}),this.output=new eP({context:this.context}),this._internalChannels=[this.a,this.b];const t=fz(JP.getDefaults(),arguments,["fade"]);this.fade=new rP({context:this.context,units:"normalRange",value:t.fade}),Ez(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",tP(this._split,this.a.gain,0),tP(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(Jz.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class QP extends Jz{constructor(t){super(t),this.name="Effect",this._dryWet=new JP({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new eP({context:this.context}),this.effectReturn=new eP({context:this.context}),this.input=new eP({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Ez(this,"wet")}static getDefaults(){return Object.assign(Jz.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class tV extends Jz{constructor(){super(Object.assign(fz(tV.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=fz(tV.getDefaults(),arguments,["pan"]);this.pan=new Zz({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Ez(this,"pan")}static getDefaults(){return Object.assign(Jz.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}YP("bit-crusher","\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n");class eV extends QP{constructor(){super(fz(eV.getDefaults(),arguments,["distortion"])),this.name="Distortion";const t=fz(eV.getDefaults(),arguments,["distortion"]);this._shaper=new CP({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(QP.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=100*t,n=Math.PI/180;this._shaper.setMap((t=>Math.abs(t)<.001?0:(3+e)*t*20*n/(Math.PI+e*Math.abs(t))))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class nV extends Jz{constructor(){super(fz(nV.getDefaults(),arguments,["solo"])),this.name="Solo";const t=fz(nV.getDefaults(),arguments,["solo"]);this.input=this.output=new eP({context:this.context}),nV._allSolos.has(this.context)||nV._allSolos.set(this.context,new Set),nV._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(Jz.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),nV._allSolos.get(this.context).forEach((t=>t._updateSolo()))}get muted(){return 0===this.input.gain.value}_addSolo(){nV._soloed.has(this.context)||nV._soloed.set(this.context,new Set),nV._soloed.get(this.context).add(this)}_removeSolo(){nV._soloed.has(this.context)&&nV._soloed.get(this.context).delete(this)}_isSoloed(){return nV._soloed.has(this.context)&&nV._soloed.get(this.context).has(this)}_noSolos(){return!nV._soloed.has(this.context)||nV._soloed.has(this.context)&&0===nV._soloed.get(this.context).size}_updateSolo(){this._isSoloed()||this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),nV._allSolos.get(this.context).delete(this),this._removeSolo(),this}}nV._allSolos=new Map,nV._soloed=new Map;class sV extends Jz{constructor(){super(fz(sV.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=fz(sV.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new tV({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new mP({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Ez(this,["pan","volume"])}static getDefaults(){return Object.assign(Jz.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class rV extends Jz{constructor(){super(fz(rV.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=fz(rV.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new nV({solo:t.solo,context:this.context}),this._panVol=this.output=new sV({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Ez(this,["pan","volume"])}static getDefaults(){return Object.assign(Jz.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return rV.buses.has(t)||rV.buses.set(t,new eP({context:this.context})),rV.buses.get(t)}send(t,e=0){const n=this._getBus(t),s=new eP({context:this.context,units:"decibels",gain:e});return this.connect(s),s.connect(n),s}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}rV.buses=new Map;class aV extends Jz{constructor(){super(...arguments),this.name="Listener",this.positionX=new Zz({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Zz({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Zz({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Zz({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Zz({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Zz({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Zz({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Zz({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Zz({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(Jz.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}Nz((t=>{t.listener=new aV({context:t})})),Cz((t=>{t.listener.dispose()})),zz().transport,zz().destination,zz().destination,zz().listener,zz().draw,zz();const iV=[...new Array(24)].map(((t,e)=>["C","D","E","F","G","A","B"][(e+=16)%7]+Math.floor(e/7)));console.log(iV);const oV=function(t){const e=document.createElement("video");return navigator.mediaDevices.getUserMedia({video:!0}).then((t=>{e.srcObject=t,document.body.appendChild(e),e.play()})).catch((t=>{throw new Error("problem creating video: "+t.message)})),e}();let lV=null;const uV=(new HP).toDestination(),cV=new eV(0).toDestination();uV.connect(cV);const hV=document.getElementById("canvas"),pV=hV.getContext("2d");let dV=[],fV=[];document.addEventListener("keydown",(t=>{"f"===t.key&&hV.requestFullscreen()}));const mV={flipHorizontal:!0,maxNumBoxes:4,iouThreshold:.5,scoreThreshold:.6};function gV(){if(null===lV)throw new Error("model was null");lV.detect(oV).then((t=>{dV=t,requestAnimationFrame(gV)}))}function yV(t,e,n,s){const r=n/4,a=n/2,i=t+(t/hV.width-.5)*r*9,o=e+(e/hV.height-.5)*a*3,l=pV.createRadialGradient(i,o,r,i,o,a);l.addColorStop(0,"black"),l.addColorStop(1,s),pV.fillStyle=l,pV.beginPath(),pV.ellipse(t,e,n,.5*n,0,0,2*Math.PI),pV.fill()}class bV{constructor(t,e,n){this.x=t,this.y=e,this.size=n,this.vx=3*(Math.random()-.5),this.vy=-8*(.5+.5*Math.random())}speed(){return Math.sqrt(this.vx**2+this.vy**2)}draw(){const t=this.size*this.speed()*.07;pV.fillStyle="black",pV.beginPath(),pV.ellipse(this.x,this.y,t,t,0,0,2*Math.PI),pV.fill()}step(){this.x+=this.vx,this.y+=this.vy,this.vx*=.95,this.vy*=.95}}let xV=[];function vV(t){pV.save(),pV.translate(hV.width,0),pV.scale(-1,1),pV.drawImage(oV,0,0),pV.restore(),xV=xV.filter((t=>t.speed()>.1));for(const t of xV)t.step(),t.draw();let e=[];for(const t of dV){const[n,s,r,a]=t.bbox,[i,o]=[n+r/2,s+a/2];(e.push({x:i,y:Math.floor(24*o/hV.height),label:t.label}),"face"===t.label||"open"===t.label)&&(xV.push(new bV(i,o,r)),yV(i,o,.3*r,"face"===t.label?"yellow":"red"))}var n,s;e=e.filter((t=>"face"!==t.label)).sort(((t,e)=>t.x-e.x)),2===e.length&&2===fV.length?e[1].y!==fV[1].y&&(console.log("hands changed"),cV.distortion=2*e[0].y,console.log(cV.distortion),uV.triggerAttackRelease(iV[(n=e[1].y,s=iV.length,(n%s+s)%s)],"8n")):console.log("num hands tracked is not 2"),fV=e,requestAnimationFrame(vV)}document.addEventListener("click",(()=>{console.log("clicked"),document.getElementById("clickanywhere").remove(),requestAnimationFrame(vV),async function(t){let e=Object.assign({},CD,t);const n=new RD(e);return await n.load(),n}(mV).then((t=>{lV=t,document.getElementById("giveitasecond").remove(),function(t){return new Promise((function(e,n){t||e({status:!1,msg:"please provide a valid video element"}),t.width=t.width||640,t.height=t.width*(t.videoHeight/t.videoWidth),t.style.height="20px",navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}}).then((n=>{window.localStream=n,t.srcObject=n,t.onloadedmetadata=()=>{t.height=t.width*(t.videoHeight/t.videoWidth),t.style.height=parseInt(t.style.width)*(t.videoHeight/t.videoWidth).toFixed(2)+"px",t.play(),e({status:!0,msg:"webcam successfully initiated."})}})).catch((function(t){e({status:!1,msg:t})}))}))}(oV).then((function(t){oV.style.height="",gV()}))}))}))})()})();